{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst glslUniformBlock = `\\\nuniform scatterplotUniforms {\n  float radiusScale;\n  float radiusMinPixels;\n  float radiusMaxPixels;\n  float lineWidthScale;\n  float lineWidthMinPixels;\n  float lineWidthMaxPixels;\n  float stroked;\n  float filled;\n  bool antialiasing;\n  bool billboard;\n  highp int radiusUnits;\n  highp int lineWidthUnits;\n} scatterplot;\n`;\nexport const scatterplotUniforms = {\n  name: 'scatterplot',\n  vs: glslUniformBlock,\n  fs: glslUniformBlock,\n  source: '',\n  uniformTypes: {\n    radiusScale: 'f32',\n    radiusMinPixels: 'f32',\n    radiusMaxPixels: 'f32',\n    lineWidthScale: 'f32',\n    lineWidthMinPixels: 'f32',\n    lineWidthMaxPixels: 'f32',\n    stroked: 'f32',\n    filled: 'f32',\n    antialiasing: 'f32',\n    billboard: 'f32',\n    radiusUnits: 'i32',\n    lineWidthUnits: 'i32'\n  }\n};","map":{"version":3,"names":["glslUniformBlock","scatterplotUniforms","name","vs","fs","source","uniformTypes","radiusScale","radiusMinPixels","radiusMaxPixels","lineWidthScale","lineWidthMinPixels","lineWidthMaxPixels","stroked","filled","antialiasing","billboard","radiusUnits","lineWidthUnits"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\layers\\src\\scatterplot-layer\\scatterplot-layer-uniforms.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {ShaderModule} from '@luma.gl/shadertools';\n\nconst glslUniformBlock = `\\\nuniform scatterplotUniforms {\n  float radiusScale;\n  float radiusMinPixels;\n  float radiusMaxPixels;\n  float lineWidthScale;\n  float lineWidthMinPixels;\n  float lineWidthMaxPixels;\n  float stroked;\n  float filled;\n  bool antialiasing;\n  bool billboard;\n  highp int radiusUnits;\n  highp int lineWidthUnits;\n} scatterplot;\n`;\n\nexport type ScatterplotProps = {\n  radiusScale: number;\n  radiusMinPixels: number;\n  radiusMaxPixels: number;\n  lineWidthScale: number;\n  lineWidthMinPixels: number;\n  lineWidthMaxPixels: number;\n  stroked: boolean;\n  filled: boolean;\n  antialiasing: boolean;\n  billboard: boolean;\n  radiusUnits: number;\n  lineWidthUnits: number;\n};\n\nexport const scatterplotUniforms = {\n  name: 'scatterplot',\n  vs: glslUniformBlock,\n  fs: glslUniformBlock,\n  source: '',\n  uniformTypes: {\n    radiusScale: 'f32',\n    radiusMinPixels: 'f32',\n    radiusMaxPixels: 'f32',\n    lineWidthScale: 'f32',\n    lineWidthMinPixels: 'f32',\n    lineWidthMaxPixels: 'f32',\n    stroked: 'f32',\n    filled: 'f32',\n    antialiasing: 'f32',\n    billboard: 'f32',\n    radiusUnits: 'i32',\n    lineWidthUnits: 'i32'\n  }\n} as const satisfies ShaderModule<ScatterplotProps>;\n"],"mappings":"AAAA;AACA;AACA;AAIA,MAAMA,gBAAgB,GAAG;;;;;;;;;;;;;;;CAexB;AAiBD,OAAO,MAAMC,mBAAmB,GAAG;EACjCC,IAAI,EAAE,aAAa;EACnBC,EAAE,EAAEH,gBAAgB;EACpBI,EAAE,EAAEJ,gBAAgB;EACpBK,MAAM,EAAE,EAAE;EACVC,YAAY,EAAE;IACZC,WAAW,EAAE,KAAK;IAClBC,eAAe,EAAE,KAAK;IACtBC,eAAe,EAAE,KAAK;IACtBC,cAAc,EAAE,KAAK;IACrBC,kBAAkB,EAAE,KAAK;IACzBC,kBAAkB,EAAE,KAAK;IACzBC,OAAO,EAAE,KAAK;IACdC,MAAM,EAAE,KAAK;IACbC,YAAY,EAAE,KAAK;IACnBC,SAAS,EAAE,KAAK;IAChBC,WAAW,EAAE,KAAK;IAClBC,cAAc,EAAE;;CAE+B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}