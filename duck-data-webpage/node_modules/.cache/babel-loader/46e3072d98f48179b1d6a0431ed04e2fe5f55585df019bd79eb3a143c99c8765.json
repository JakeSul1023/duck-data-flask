{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { Vector3 } from '@math.gl/core';\nimport { GL, octDecode } from '@loaders.gl/math';\nconst scratchNormal = new Vector3();\nexport function normalize3DTileNormalAttribute(tile, normals) {\n  if (!normals) {\n    return null;\n  }\n  if (tile.isOctEncoded16P) {\n    const decodedArray = new Float32Array((tile.pointsLength || 0) * 3);\n    for (let i = 0; i < (tile.pointsLength || 0); i++) {\n      octDecode(normals[i * 2], normals[i * 2 + 1], scratchNormal);\n      // @ts-ignore\n      scratchNormal.toArray(decodedArray, i * 3);\n    }\n    return {\n      type: GL.FLOAT,\n      size: 2,\n      value: decodedArray\n    };\n  }\n  return {\n    type: GL.FLOAT,\n    size: 2,\n    value: normals\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}