{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* eslint-disable camelcase */\nimport { fp64 } from '@luma.gl/shadertools';\nconst {\n  fp64ify,\n  fp64ifyMatrix4\n} = fp64;\nimport { project, _memoize as memoize } from '@deck.gl/core';\nimport project64Shader from \"./project64.glsl.js\";\nexport default {\n  name: 'project64',\n  dependencies: [project, fp64],\n  vs: project64Shader,\n  getUniforms,\n  uniformTypes: {\n    scale: 'vec2<f32>',\n    // Cannot pass as vec2[16], so instead split into 2 mat4x4\n    viewProjectionMatrix: 'mat4x4<f32>',\n    viewProjectionMatrix64Low: 'mat4x4<f32>'\n  }\n};\n// TODO - this module should calculate the 64 bit uniforms\n// It is currently done by project to minimize duplicated work\nconst getMemoizedUniforms = memoize(calculateUniforms);\nfunction getUniforms(opts) {\n  if (opts && 'viewport' in opts) {\n    const {\n      viewProjectionMatrix,\n      scale\n    } = opts.viewport;\n    // We only need to update fp64 uniforms if fp32 projection is being updated\n    return getMemoizedUniforms({\n      viewProjectionMatrix,\n      scale\n    });\n  }\n  return {};\n}\nfunction calculateUniforms({\n  viewProjectionMatrix,\n  scale\n}) {\n  const glViewProjectionMatrixFP64 = fp64ifyMatrix4(viewProjectionMatrix);\n  const viewProjectionMatrix64High = new Float32Array(16);\n  const viewProjectionMatrix64Low = new Float32Array(16);\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      // Match order used in project.viewProjectionMatrix\n      const from = 4 * i + j;\n      const to = 4 * j + i;\n      viewProjectionMatrix64High[to] = glViewProjectionMatrixFP64[2 * from];\n      viewProjectionMatrix64Low[to] = glViewProjectionMatrixFP64[2 * from + 1];\n    }\n  }\n  return {\n    scale: fp64ify(scale),\n    viewProjectionMatrix: [...viewProjectionMatrix64High],\n    viewProjectionMatrix64Low: [...viewProjectionMatrix64Low]\n  };\n}\n//# sourceMappingURL=project64.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}