{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { registerJSModules } from '@loaders.gl/loader-utils';\nimport { isPureObject, isObject } from \"../../javascript-utils/is-type.js\";\nimport { probeLog, NullLog } from \"./loggers.js\";\nimport { DEFAULT_LOADER_OPTIONS, REMOVED_LOADER_OPTIONS } from \"./option-defaults.js\";\n/**\n * Helper for safely accessing global loaders.gl variables\n * Wraps initialization of global variable in function to defeat overly aggressive tree-shakers\n */\nexport function getGlobalLoaderState() {\n  // @ts-ignore\n  globalThis.loaders = globalThis.loaders || {};\n  // @ts-ignore\n  const {\n    loaders\n  } = globalThis;\n  // Add _state object to keep separate from modules added to globalThis.loaders\n  if (!loaders._state) {\n    loaders._state = {};\n  }\n  return loaders._state;\n}\n/**\n * Store global loader options on the global object to increase chances of cross loaders-version interoperability\n * NOTE: This use case is not reliable but can help when testing new versions of loaders.gl with existing frameworks\n * @returns global loader options merged with default loader options\n */\nexport function getGlobalLoaderOptions() {\n  const state = getGlobalLoaderState();\n  // Ensure all default loader options from this library are mentioned\n  state.globalOptions = state.globalOptions || {\n    ...DEFAULT_LOADER_OPTIONS\n  };\n  return state.globalOptions;\n}\n/**\n * Set global loader options\n * @param options\n */\nexport function setGlobalOptions(options) {\n  const state = getGlobalLoaderState();\n  const globalOptions = getGlobalLoaderOptions();\n  // @ts-expect-error First param looks incorrect\n  state.globalOptions = normalizeOptionsInternal(globalOptions, options);\n  // Make sure any new modules are registered\n  registerJSModules(options.modules);\n}\n/**\n * Merges options with global opts and loader defaults, also injects baseUri\n * @param options\n * @param loader\n * @param loaders\n * @param url\n */\nexport function normalizeOptions(options, loader, loaders, url) {\n  loaders = loaders || [];\n  loaders = Array.isArray(loaders) ? loaders : [loaders];\n  validateOptions(options, loaders);\n  return normalizeOptionsInternal(loader, options, url);\n}\n// VALIDATE OPTIONS\n/**\n * Warn for unsupported options\n * @param options\n * @param loaders\n */\nfunction validateOptions(options, loaders) {\n  // Check top level options\n  validateOptionsObject(options, null, DEFAULT_LOADER_OPTIONS, REMOVED_LOADER_OPTIONS, loaders);\n  for (const loader of loaders) {\n    // Get the scoped, loader specific options from the user supplied options\n    const idOptions = options && options[loader.id] || {};\n    // Get scoped, loader specific default and deprecated options from the selected loader\n    const loaderOptions = loader.options && loader.options[loader.id] || {};\n    const deprecatedOptions = loader.deprecatedOptions && loader.deprecatedOptions[loader.id] || {};\n    // Validate loader specific options\n    // @ts-ignore\n    validateOptionsObject(idOptions, loader.id, loaderOptions, deprecatedOptions, loaders);\n  }\n}\n// eslint-disable-next-line max-params, complexity\nfunction validateOptionsObject(options, id, defaultOptions, deprecatedOptions, loaders) {\n  const loaderName = id || 'Top level';\n  const prefix = id ? `${id}.` : '';\n  for (const key in options) {\n    // If top level option value is an object it could options for a loader, so ignore\n    const isSubOptions = !id && isObject(options[key]);\n    const isBaseUriOption = key === 'baseUri' && !id;\n    const isWorkerUrlOption = key === 'workerUrl' && id;\n    // <loader>.workerUrl requires special handling as it is now auto-generated and no longer specified as a default option.\n    if (!(key in defaultOptions) && !isBaseUriOption && !isWorkerUrlOption) {\n      // Issue deprecation warnings\n      if (key in deprecatedOptions) {\n        probeLog.warn(`${loaderName} loader option \\'${prefix}${key}\\' no longer supported, use \\'${deprecatedOptions[key]}\\'`)();\n      } else if (!isSubOptions) {\n        const suggestion = findSimilarOption(key, loaders);\n        probeLog.warn(`${loaderName} loader option \\'${prefix}${key}\\' not recognized. ${suggestion}`)();\n      }\n    }\n  }\n}\nfunction findSimilarOption(optionKey, loaders) {\n  const lowerCaseOptionKey = optionKey.toLowerCase();\n  let bestSuggestion = '';\n  for (const loader of loaders) {\n    for (const key in loader.options) {\n      if (optionKey === key) {\n        return `Did you mean \\'${loader.id}.${key}\\'?`;\n      }\n      const lowerCaseKey = key.toLowerCase();\n      const isPartialMatch = lowerCaseOptionKey.startsWith(lowerCaseKey) || lowerCaseKey.startsWith(lowerCaseOptionKey);\n      if (isPartialMatch) {\n        bestSuggestion = bestSuggestion || `Did you mean \\'${loader.id}.${key}\\'?`;\n      }\n    }\n  }\n  return bestSuggestion;\n}\nfunction normalizeOptionsInternal(loader, options, url) {\n  const loaderDefaultOptions = loader.options || {};\n  const mergedOptions = {\n    ...loaderDefaultOptions\n  };\n  addUrlOptions(mergedOptions, url);\n  // LOGGING: options.log can be set to `null` to defeat logging\n  if (mergedOptions.log === null) {\n    mergedOptions.log = new NullLog();\n  }\n  mergeNestedFields(mergedOptions, getGlobalLoaderOptions());\n  mergeNestedFields(mergedOptions, options);\n  return mergedOptions;\n}\n// Merge nested options objects\nfunction mergeNestedFields(mergedOptions, options) {\n  for (const key in options) {\n    // Check for nested options\n    // object in options => either no key in defaultOptions or object in defaultOptions\n    if (key in options) {\n      const value = options[key];\n      if (isPureObject(value) && isPureObject(mergedOptions[key])) {\n        mergedOptions[key] = {\n          ...mergedOptions[key],\n          ...options[key]\n        };\n      } else {\n        mergedOptions[key] = options[key];\n      }\n    }\n    // else: No need to merge nested opts, and the initial merge already copied over the nested options\n  }\n}\n/**\n * Harvest information from the url\n * @deprecated This is mainly there to support a hack in the GLTFLoader\n * TODO - baseUri should be a directory, i.e. remove file component from baseUri\n * TODO - extract extension?\n * TODO - extract query parameters?\n * TODO - should these be injected on context instead of options?\n */\nfunction addUrlOptions(options, url) {\n  if (url && !('baseUri' in options)) {\n    options.baseUri = url;\n  }\n}","map":{"version":3,"names":["registerJSModules","isPureObject","isObject","probeLog","NullLog","DEFAULT_LOADER_OPTIONS","REMOVED_LOADER_OPTIONS","getGlobalLoaderState","globalThis","loaders","_state","getGlobalLoaderOptions","state","globalOptions","setGlobalOptions","options","normalizeOptionsInternal","modules","normalizeOptions","loader","url","Array","isArray","validateOptions","validateOptionsObject","idOptions","id","loaderOptions","deprecatedOptions","defaultOptions","loaderName","prefix","key","isSubOptions","isBaseUriOption","isWorkerUrlOption","warn","suggestion","findSimilarOption","optionKey","lowerCaseOptionKey","toLowerCase","bestSuggestion","lowerCaseKey","isPartialMatch","startsWith","loaderDefaultOptions","mergedOptions","addUrlOptions","log","mergeNestedFields","value","baseUri"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/core/dist/lib/loader-utils/option-utils.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { registerJSModules } from '@loaders.gl/loader-utils';\nimport { isPureObject, isObject } from \"../../javascript-utils/is-type.js\";\nimport { probeLog, NullLog } from \"./loggers.js\";\nimport { DEFAULT_LOADER_OPTIONS, REMOVED_LOADER_OPTIONS } from \"./option-defaults.js\";\n/**\n * Helper for safely accessing global loaders.gl variables\n * Wraps initialization of global variable in function to defeat overly aggressive tree-shakers\n */\nexport function getGlobalLoaderState() {\n    // @ts-ignore\n    globalThis.loaders = globalThis.loaders || {};\n    // @ts-ignore\n    const { loaders } = globalThis;\n    // Add _state object to keep separate from modules added to globalThis.loaders\n    if (!loaders._state) {\n        loaders._state = {};\n    }\n    return loaders._state;\n}\n/**\n * Store global loader options on the global object to increase chances of cross loaders-version interoperability\n * NOTE: This use case is not reliable but can help when testing new versions of loaders.gl with existing frameworks\n * @returns global loader options merged with default loader options\n */\nexport function getGlobalLoaderOptions() {\n    const state = getGlobalLoaderState();\n    // Ensure all default loader options from this library are mentioned\n    state.globalOptions = state.globalOptions || { ...DEFAULT_LOADER_OPTIONS };\n    return state.globalOptions;\n}\n/**\n * Set global loader options\n * @param options\n */\nexport function setGlobalOptions(options) {\n    const state = getGlobalLoaderState();\n    const globalOptions = getGlobalLoaderOptions();\n    // @ts-expect-error First param looks incorrect\n    state.globalOptions = normalizeOptionsInternal(globalOptions, options);\n    // Make sure any new modules are registered\n    registerJSModules(options.modules);\n}\n/**\n * Merges options with global opts and loader defaults, also injects baseUri\n * @param options\n * @param loader\n * @param loaders\n * @param url\n */\nexport function normalizeOptions(options, loader, loaders, url) {\n    loaders = loaders || [];\n    loaders = Array.isArray(loaders) ? loaders : [loaders];\n    validateOptions(options, loaders);\n    return normalizeOptionsInternal(loader, options, url);\n}\n// VALIDATE OPTIONS\n/**\n * Warn for unsupported options\n * @param options\n * @param loaders\n */\nfunction validateOptions(options, loaders) {\n    // Check top level options\n    validateOptionsObject(options, null, DEFAULT_LOADER_OPTIONS, REMOVED_LOADER_OPTIONS, loaders);\n    for (const loader of loaders) {\n        // Get the scoped, loader specific options from the user supplied options\n        const idOptions = ((options && options[loader.id]) || {});\n        // Get scoped, loader specific default and deprecated options from the selected loader\n        const loaderOptions = (loader.options && loader.options[loader.id]) || {};\n        const deprecatedOptions = (loader.deprecatedOptions && loader.deprecatedOptions[loader.id]) || {};\n        // Validate loader specific options\n        // @ts-ignore\n        validateOptionsObject(idOptions, loader.id, loaderOptions, deprecatedOptions, loaders);\n    }\n}\n// eslint-disable-next-line max-params, complexity\nfunction validateOptionsObject(options, id, defaultOptions, deprecatedOptions, loaders) {\n    const loaderName = id || 'Top level';\n    const prefix = id ? `${id}.` : '';\n    for (const key in options) {\n        // If top level option value is an object it could options for a loader, so ignore\n        const isSubOptions = !id && isObject(options[key]);\n        const isBaseUriOption = key === 'baseUri' && !id;\n        const isWorkerUrlOption = key === 'workerUrl' && id;\n        // <loader>.workerUrl requires special handling as it is now auto-generated and no longer specified as a default option.\n        if (!(key in defaultOptions) && !isBaseUriOption && !isWorkerUrlOption) {\n            // Issue deprecation warnings\n            if (key in deprecatedOptions) {\n                probeLog.warn(`${loaderName} loader option \\'${prefix}${key}\\' no longer supported, use \\'${deprecatedOptions[key]}\\'`)();\n            }\n            else if (!isSubOptions) {\n                const suggestion = findSimilarOption(key, loaders);\n                probeLog.warn(`${loaderName} loader option \\'${prefix}${key}\\' not recognized. ${suggestion}`)();\n            }\n        }\n    }\n}\nfunction findSimilarOption(optionKey, loaders) {\n    const lowerCaseOptionKey = optionKey.toLowerCase();\n    let bestSuggestion = '';\n    for (const loader of loaders) {\n        for (const key in loader.options) {\n            if (optionKey === key) {\n                return `Did you mean \\'${loader.id}.${key}\\'?`;\n            }\n            const lowerCaseKey = key.toLowerCase();\n            const isPartialMatch = lowerCaseOptionKey.startsWith(lowerCaseKey) || lowerCaseKey.startsWith(lowerCaseOptionKey);\n            if (isPartialMatch) {\n                bestSuggestion = bestSuggestion || `Did you mean \\'${loader.id}.${key}\\'?`;\n            }\n        }\n    }\n    return bestSuggestion;\n}\nfunction normalizeOptionsInternal(loader, options, url) {\n    const loaderDefaultOptions = loader.options || {};\n    const mergedOptions = { ...loaderDefaultOptions };\n    addUrlOptions(mergedOptions, url);\n    // LOGGING: options.log can be set to `null` to defeat logging\n    if (mergedOptions.log === null) {\n        mergedOptions.log = new NullLog();\n    }\n    mergeNestedFields(mergedOptions, getGlobalLoaderOptions());\n    mergeNestedFields(mergedOptions, options);\n    return mergedOptions;\n}\n// Merge nested options objects\nfunction mergeNestedFields(mergedOptions, options) {\n    for (const key in options) {\n        // Check for nested options\n        // object in options => either no key in defaultOptions or object in defaultOptions\n        if (key in options) {\n            const value = options[key];\n            if (isPureObject(value) && isPureObject(mergedOptions[key])) {\n                mergedOptions[key] = {\n                    ...mergedOptions[key],\n                    ...options[key]\n                };\n            }\n            else {\n                mergedOptions[key] = options[key];\n            }\n        }\n        // else: No need to merge nested opts, and the initial merge already copied over the nested options\n    }\n}\n/**\n * Harvest information from the url\n * @deprecated This is mainly there to support a hack in the GLTFLoader\n * TODO - baseUri should be a directory, i.e. remove file component from baseUri\n * TODO - extract extension?\n * TODO - extract query parameters?\n * TODO - should these be injected on context instead of options?\n */\nfunction addUrlOptions(options, url) {\n    if (url && !('baseUri' in options)) {\n        options.baseUri = url;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}