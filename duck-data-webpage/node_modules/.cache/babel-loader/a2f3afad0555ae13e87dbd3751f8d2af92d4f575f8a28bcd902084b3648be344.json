{"ast":null,"code":"// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst UNIFORM_FORMATS = {\n  f32: {\n    type: 'f32',\n    components: 1\n  },\n  i32: {\n    type: 'i32',\n    components: 1\n  },\n  u32: {\n    type: 'u32',\n    components: 1\n  },\n  // 'bool-webgl': {type: 'bool-webgl', components: 1},\n  'vec2<f32>': {\n    type: 'f32',\n    components: 2\n  },\n  'vec3<f32>': {\n    type: 'f32',\n    components: 3\n  },\n  'vec4<f32>': {\n    type: 'f32',\n    components: 4\n  },\n  'vec2<i32>': {\n    type: 'i32',\n    components: 2\n  },\n  'vec3<i32>': {\n    type: 'i32',\n    components: 3\n  },\n  'vec4<i32>': {\n    type: 'i32',\n    components: 4\n  },\n  'vec2<u32>': {\n    type: 'u32',\n    components: 2\n  },\n  'vec3<u32>': {\n    type: 'u32',\n    components: 3\n  },\n  'vec4<u32>': {\n    type: 'u32',\n    components: 4\n  },\n  'mat2x2<f32>': {\n    type: 'f32',\n    components: 4\n  },\n  'mat2x3<f32>': {\n    type: 'f32',\n    components: 6\n  },\n  'mat2x4<f32>': {\n    type: 'f32',\n    components: 8\n  },\n  'mat3x2<f32>': {\n    type: 'f32',\n    components: 6\n  },\n  'mat3x3<f32>': {\n    type: 'f32',\n    components: 9\n  },\n  'mat3x4<f32>': {\n    type: 'f32',\n    components: 12\n  },\n  'mat4x2<f32>': {\n    type: 'f32',\n    components: 8\n  },\n  'mat4x3<f32>': {\n    type: 'f32',\n    components: 12\n  },\n  'mat4x4<f32>': {\n    type: 'f32',\n    components: 16\n  }\n};\n/** Split a uniform type string into type and components */\nexport function decodeShaderUniformType(format) {\n  const decoded = UNIFORM_FORMATS[format];\n  return decoded;\n}\n/** Align offset to 1, 2 or 4 elements (4, 8 or 16 bytes) */\nexport function alignTo(size, count) {\n  // prettier-ignore\n  switch (count) {\n    case 1:\n      return size;\n    // Pad upwards to even multiple of 2\n    case 2:\n      return size + size % 2;\n    // Pad upwards to even multiple of 2\n    default:\n      return size + (4 - size % 4) % 4;\n    // Pad upwards to even multiple of 4\n  }\n}\n//# sourceMappingURL=decode-shader-types.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}