{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { LayerExtension } from '@deck.gl/core';\nimport collision from \"./shader-module.js\";\nimport CollisionFilterEffect from \"./collision-filter-effect.js\";\nconst defaultProps = {\n  getCollisionPriority: {\n    type: 'accessor',\n    value: 0\n  },\n  collisionEnabled: true,\n  collisionGroup: {\n    type: 'string',\n    value: 'default'\n  },\n  collisionTestProps: {}\n};\n/** Allows layers to hide overlapping objects. */\nclass CollisionFilterExtension extends LayerExtension {\n  getShaders() {\n    return {\n      modules: [collision]\n    };\n  }\n  /* eslint-disable camelcase */\n  draw({\n    shaderModuleProps\n  }) {\n    if (shaderModuleProps.collision?.drawToCollisionMap) {\n      // Override any props with those defined in collisionTestProps\n      // @ts-ignore\n      this.props = this.clone(this.props.collisionTestProps).props;\n    }\n  }\n  initializeState(context, extension) {\n    if (this.getAttributeManager() === null) {\n      return;\n    }\n    this.context.deck?._addDefaultEffect(new CollisionFilterEffect());\n    const attributeManager = this.getAttributeManager();\n    attributeManager.add({\n      collisionPriorities: {\n        size: 1,\n        stepMode: 'dynamic',\n        accessor: 'getCollisionPriority'\n      }\n    });\n  }\n  getNeedsPickingBuffer() {\n    return this.props.collisionEnabled;\n  }\n}\nCollisionFilterExtension.defaultProps = defaultProps;\nCollisionFilterExtension.extensionName = 'CollisionFilterExtension';\nexport default CollisionFilterExtension;\n//# sourceMappingURL=collision-filter-extension.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}