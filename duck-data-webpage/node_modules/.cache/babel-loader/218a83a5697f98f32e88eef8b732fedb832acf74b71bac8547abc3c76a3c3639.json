{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { _LayersPass as LayersPass } from '@deck.gl/core';\nexport default class CollisionFilterPass extends LayersPass {\n  renderCollisionMap(target, options) {\n    const padding = 1;\n    const clearColor = [0, 0, 0, 0];\n    const scissorRect = [padding, padding, target.width - 2 * padding, target.height - 2 * padding];\n    this.render({\n      ...options,\n      clearColor,\n      scissorRect,\n      target,\n      pass: 'collision'\n    });\n  }\n  getLayerParameters(layer, layerIndex, viewport) {\n    return {\n      ...layer.props.parameters,\n      blend: false,\n      depthWriteEnabled: true,\n      depthCompare: 'less-equal'\n    };\n  }\n  getShaderModuleProps() {\n    // Draw picking colors into collision FBO\n    return {\n      collision: {\n        drawToCollisionMap: true\n      },\n      picking: {\n        isActive: 1,\n        isAttribute: false\n      },\n      lighting: {\n        enabled: false\n      }\n    };\n  }\n}","map":{"version":3,"names":["_LayersPass","LayersPass","CollisionFilterPass","renderCollisionMap","target","options","padding","clearColor","scissorRect","width","height","render","pass","getLayerParameters","layer","layerIndex","viewport","props","parameters","blend","depthWriteEnabled","depthCompare","getShaderModuleProps","collision","drawToCollisionMap","picking","isActive","isAttribute","lighting","enabled"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\extensions\\src\\collision-filter\\collision-filter-pass.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Framebuffer, Parameters} from '@luma.gl/core';\nimport {Layer, _LayersPass as LayersPass, LayersPassRenderOptions, Viewport} from '@deck.gl/core';\n\ntype CollisionFilterPassRenderOptions = LayersPassRenderOptions & {};\n\nexport default class CollisionFilterPass extends LayersPass {\n  renderCollisionMap(target: Framebuffer, options: CollisionFilterPassRenderOptions) {\n    const padding = 1;\n    const clearColor = [0, 0, 0, 0];\n    const scissorRect = [padding, padding, target.width - 2 * padding, target.height - 2 * padding];\n\n    this.render({...options, clearColor, scissorRect, target, pass: 'collision'});\n  }\n\n  protected getLayerParameters(layer: Layer, layerIndex: number, viewport: Viewport): Parameters {\n    return {\n      ...layer.props.parameters,\n      blend: false,\n      depthWriteEnabled: true,\n      depthCompare: 'less-equal'\n    };\n  }\n\n  getShaderModuleProps() {\n    // Draw picking colors into collision FBO\n    return {\n      collision: {\n        drawToCollisionMap: true\n      },\n      picking: {\n        isActive: 1,\n        isAttribute: false\n      },\n      lighting: {enabled: false}\n    };\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AAGA,SAAeA,WAAW,IAAIC,UAAU,QAA0C,eAAe;AAIjG,eAAc,MAAOC,mBAAoB,SAAQD,UAAU;EACzDE,kBAAkBA,CAACC,MAAmB,EAAEC,OAAyC;IAC/E,MAAMC,OAAO,GAAG,CAAC;IACjB,MAAMC,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/B,MAAMC,WAAW,GAAG,CAACF,OAAO,EAAEA,OAAO,EAAEF,MAAM,CAACK,KAAK,GAAG,CAAC,GAAGH,OAAO,EAAEF,MAAM,CAACM,MAAM,GAAG,CAAC,GAAGJ,OAAO,CAAC;IAE/F,IAAI,CAACK,MAAM,CAAC;MAAC,GAAGN,OAAO;MAAEE,UAAU;MAAEC,WAAW;MAAEJ,MAAM;MAAEQ,IAAI,EAAE;IAAW,CAAC,CAAC;EAC/E;EAEUC,kBAAkBA,CAACC,KAAY,EAAEC,UAAkB,EAAEC,QAAkB;IAC/E,OAAO;MACL,GAAGF,KAAK,CAACG,KAAK,CAACC,UAAU;MACzBC,KAAK,EAAE,KAAK;MACZC,iBAAiB,EAAE,IAAI;MACvBC,YAAY,EAAE;KACf;EACH;EAEAC,oBAAoBA,CAAA;IAClB;IACA,OAAO;MACLC,SAAS,EAAE;QACTC,kBAAkB,EAAE;OACrB;MACDC,OAAO,EAAE;QACPC,QAAQ,EAAE,CAAC;QACXC,WAAW,EAAE;OACd;MACDC,QAAQ,EAAE;QAACC,OAAO,EAAE;MAAK;KAC1B;EACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}