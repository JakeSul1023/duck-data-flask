{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// deck.gl, MIT license\nimport ComponentState from \"../lifecycle/component-state.js\";\nexport default class LayerState extends ComponentState {\n  constructor(_ref) {\n    let {\n      attributeManager,\n      layer\n    } = _ref;\n    super(layer);\n    this.attributeManager = attributeManager;\n    this.needsRedraw = true;\n    this.needsUpdate = true;\n    this.subLayers = null;\n    this.usesPickingColorCache = false;\n  }\n  get layer() {\n    return this.component;\n  }\n  /* Override base Component methods with Layer-specific handling */\n  _fetch(propName, url) {\n    const layer = this.layer;\n    const fetch = layer?.props.fetch;\n    if (fetch) {\n      return fetch(url, {\n        propName,\n        layer\n      });\n    }\n    return super._fetch(propName, url);\n  }\n  _onResolve(propName, value) {\n    const layer = this.layer;\n    if (layer) {\n      const onDataLoad = layer.props.onDataLoad;\n      if (propName === 'data' && onDataLoad) {\n        onDataLoad(value, {\n          propName,\n          layer\n        });\n      }\n    }\n  }\n  _onError(propName, error) {\n    const layer = this.layer;\n    if (layer) {\n      layer.raiseError(error, `loading ${propName} of ${this.layer}`);\n    }\n  }\n}\n//# sourceMappingURL=layer-state.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}