{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst CANVAS_ONLY_STYLES = {\n  mixBlendMode: null\n};\nexport default function extractStyles({\n  width,\n  height,\n  style\n}) {\n  // This styling is enforced for correct positioning with children\n  const containerStyle = {\n    position: 'absolute',\n    zIndex: 0,\n    left: 0,\n    top: 0,\n    width,\n    height\n  };\n  // Fill the container\n  const canvasStyle = {\n    left: 0,\n    top: 0\n  };\n  if (style) {\n    for (const key in style) {\n      if (key in CANVAS_ONLY_STYLES) {\n        // apply style to the canvas, but not deck's children, e.g. mix-blend-mode\n        canvasStyle[key] = style[key];\n      } else {\n        // apply style to the container, e.g. position/flow settings\n        containerStyle[key] = style[key];\n      }\n    }\n  }\n  return {\n    containerStyle,\n    canvasStyle\n  };\n}","map":{"version":3,"names":["CANVAS_ONLY_STYLES","mixBlendMode","extractStyles","width","height","style","containerStyle","position","zIndex","left","top","canvasStyle","key"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\react\\src\\utils\\extract-styles.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport * as React from 'react';\n\nconst CANVAS_ONLY_STYLES = {\n  mixBlendMode: null\n};\n\nexport default function extractStyles({\n  width,\n  height,\n  style\n}: {\n  width?: string | number;\n  height?: string | number;\n  style?: Partial<CSSStyleDeclaration> | null;\n}): {\n  containerStyle: React.CSSProperties;\n  canvasStyle: React.CSSProperties;\n} {\n  // This styling is enforced for correct positioning with children\n  const containerStyle: React.CSSProperties = {\n    position: 'absolute',\n    zIndex: 0,\n    left: 0,\n    top: 0,\n    width,\n    height\n  };\n\n  // Fill the container\n  const canvasStyle: React.CSSProperties = {\n    left: 0,\n    top: 0\n  };\n\n  if (style) {\n    for (const key in style) {\n      if (key in CANVAS_ONLY_STYLES) {\n        // apply style to the canvas, but not deck's children, e.g. mix-blend-mode\n        canvasStyle[key] = style[key];\n      } else {\n        // apply style to the container, e.g. position/flow settings\n        containerStyle[key] = style[key];\n      }\n    }\n  }\n\n  return {containerStyle, canvasStyle};\n}\n"],"mappings":"AAAA;AACA;AACA;AAIA,MAAMA,kBAAkB,GAAG;EACzBC,YAAY,EAAE;CACf;AAED,eAAc,SAAUC,aAAaA,CAAC;EACpCC,KAAK;EACLC,MAAM;EACNC;AAAK,CAKN;EAIC;EACA,MAAMC,cAAc,GAAwB;IAC1CC,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE,CAAC;IACTC,IAAI,EAAE,CAAC;IACPC,GAAG,EAAE,CAAC;IACNP,KAAK;IACLC;GACD;EAED;EACA,MAAMO,WAAW,GAAwB;IACvCF,IAAI,EAAE,CAAC;IACPC,GAAG,EAAE;GACN;EAED,IAAIL,KAAK,EAAE;IACT,KAAK,MAAMO,GAAG,IAAIP,KAAK,EAAE;MACvB,IAAIO,GAAG,IAAIZ,kBAAkB,EAAE;QAC7B;QACAW,WAAW,CAACC,GAAG,CAAC,GAAGP,KAAK,CAACO,GAAG,CAAC;MAC/B,CAAC,MAAM;QACL;QACAN,cAAc,CAACM,GAAG,CAAC,GAAGP,KAAK,CAACO,GAAG,CAAC;MAClC;IACF;EACF;EAEA,OAAO;IAACN,cAAc;IAAEK;EAAW,CAAC;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}