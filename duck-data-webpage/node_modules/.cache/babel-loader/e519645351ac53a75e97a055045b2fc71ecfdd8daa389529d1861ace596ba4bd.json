{"ast":null,"code":"import { useContext, useMemo, useEffect } from 'react';\nimport { DeckGlContext } from \"./deckgl-context.js\";\nimport { log, _deepEqual as deepEqual } from '@deck.gl/core';\nexport function useWidget(WidgetClass, props) {\n  const context = useContext(DeckGlContext);\n  const {\n    widgets,\n    deck\n  } = context;\n  useEffect(() => {\n    // warn if the user supplied a pure-js widget, since it will be ignored\n    // NOTE: This effect runs once per widget. Context widgets and deck widget props are synced after first effect runs.\n    const internalWidgets = deck?.props.widgets;\n    if (widgets?.length && internalWidgets?.length && !deepEqual(internalWidgets, widgets, 1)) {\n      log.warn('\"widgets\" prop will be ignored because React widgets are in use.')();\n    }\n    return () => {\n      // Remove widget from context when it is unmounted\n      const index = widgets?.indexOf(widget);\n      if (index && index !== -1) {\n        widgets?.splice(index, 1);\n        deck?.setProps({\n          widgets\n        });\n      }\n    };\n  }, []);\n  const widget = useMemo(() => new WidgetClass(props), [WidgetClass]);\n  // Hook rebuilds widgets on every render: [] then [FirstWidget] then [FirstWidget, SecondWidget]\n  widgets?.push(widget);\n  widget.setProps(props);\n  useEffect(() => {\n    deck?.setProps({\n      widgets\n    });\n  }, [widgets]);\n  return widget;\n}","map":{"version":3,"names":["useContext","useMemo","useEffect","DeckGlContext","log","_deepEqual","deepEqual","useWidget","WidgetClass","props","context","widgets","deck","internalWidgets","length","warn","index","indexOf","widget","splice","setProps","push"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\react\\src\\utils\\use-widget.ts"],"sourcesContent":["import {useContext, useMemo, useEffect} from 'react';\nimport {DeckGlContext} from './deckgl-context';\nimport {log, type Widget, _deepEqual as deepEqual} from '@deck.gl/core';\n\nexport function useWidget<T extends Widget, PropsT extends {}>(\n  WidgetClass: {new (props: PropsT): T},\n  props: PropsT\n): T {\n  const context = useContext(DeckGlContext);\n  const {widgets, deck} = context;\n  useEffect(() => {\n    // warn if the user supplied a pure-js widget, since it will be ignored\n    // NOTE: This effect runs once per widget. Context widgets and deck widget props are synced after first effect runs.\n    const internalWidgets = deck?.props.widgets;\n    if (widgets?.length && internalWidgets?.length && !deepEqual(internalWidgets, widgets, 1)) {\n      log.warn('\"widgets\" prop will be ignored because React widgets are in use.')();\n    }\n\n    return () => {\n      // Remove widget from context when it is unmounted\n      const index = widgets?.indexOf(widget);\n      if (index && index !== -1) {\n        widgets?.splice(index, 1);\n        deck?.setProps({widgets});\n      }\n    };\n  }, []);\n  const widget = useMemo(() => new WidgetClass(props), [WidgetClass]);\n\n  // Hook rebuilds widgets on every render: [] then [FirstWidget] then [FirstWidget, SecondWidget]\n  widgets?.push(widget);\n  widget.setProps(props);\n\n  useEffect(() => {\n    deck?.setProps({widgets});\n  }, [widgets]);\n\n  return widget;\n}\n"],"mappings":"AAAA,SAAQA,UAAU,EAAEC,OAAO,EAAEC,SAAS,QAAO,OAAO;AACpD,SAAQC,aAAa,QAAC;AACtB,SAAQC,GAAG,EAAeC,UAAU,IAAIC,SAAS,QAAO,eAAe;AAEvE,OAAM,SAAUC,SAASA,CACvBC,WAAqC,EACrCC,KAAa;EAEb,MAAMC,OAAO,GAAGV,UAAU,CAACG,aAAa,CAAC;EACzC,MAAM;IAACQ,OAAO;IAAEC;EAAI,CAAC,GAAGF,OAAO;EAC/BR,SAAS,CAAC,MAAK;IACb;IACA;IACA,MAAMW,eAAe,GAAGD,IAAI,EAAEH,KAAK,CAACE,OAAO;IAC3C,IAAIA,OAAO,EAAEG,MAAM,IAAID,eAAe,EAAEC,MAAM,IAAI,CAACR,SAAS,CAACO,eAAe,EAAEF,OAAO,EAAE,CAAC,CAAC,EAAE;MACzFP,GAAG,CAACW,IAAI,CAAC,kEAAkE,CAAC,EAAE;IAChF;IAEA,OAAO,MAAK;MACV;MACA,MAAMC,KAAK,GAAGL,OAAO,EAAEM,OAAO,CAACC,MAAM,CAAC;MACtC,IAAIF,KAAK,IAAIA,KAAK,KAAK,CAAC,CAAC,EAAE;QACzBL,OAAO,EAAEQ,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;QACzBJ,IAAI,EAAEQ,QAAQ,CAAC;UAACT;QAAO,CAAC,CAAC;MAC3B;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,MAAMO,MAAM,GAAGjB,OAAO,CAAC,MAAM,IAAIO,WAAW,CAACC,KAAK,CAAC,EAAE,CAACD,WAAW,CAAC,CAAC;EAEnE;EACAG,OAAO,EAAEU,IAAI,CAACH,MAAM,CAAC;EACrBA,MAAM,CAACE,QAAQ,CAACX,KAAK,CAAC;EAEtBP,SAAS,CAAC,MAAK;IACbU,IAAI,EAAEQ,QAAQ,CAAC;MAACT;IAAO,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,OAAOO,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}