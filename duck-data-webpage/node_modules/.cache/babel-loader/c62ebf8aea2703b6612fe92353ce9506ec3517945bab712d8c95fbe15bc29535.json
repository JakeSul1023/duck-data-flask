{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Merge two luma.gl shader descriptors\nexport function mergeShaders(target, source) {\n  if (!source) {\n    return target;\n  }\n  const result = {\n    ...target,\n    ...source\n  };\n  if ('defines' in source) {\n    result.defines = {\n      ...target.defines,\n      ...source.defines\n    };\n  }\n  if ('modules' in source) {\n    result.modules = (target.modules || []).concat(source.modules);\n    // Hack: prject32 and project64 cannot co-exist\n    if (source.modules.some(module => module.name === 'project64')) {\n      const index = result.modules.findIndex(module => module.name === 'project32');\n      if (index >= 0) {\n        result.modules.splice(index, 1);\n      }\n    }\n  }\n  if ('inject' in source) {\n    if (!target.inject) {\n      result.inject = source.inject;\n    } else {\n      const mergedInjection = {\n        ...target.inject\n      };\n      for (const key in source.inject) {\n        mergedInjection[key] = (mergedInjection[key] || '') + source.inject[key];\n      }\n      result.inject = mergedInjection;\n    }\n  }\n  return result;\n}\n//# sourceMappingURL=shader.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}