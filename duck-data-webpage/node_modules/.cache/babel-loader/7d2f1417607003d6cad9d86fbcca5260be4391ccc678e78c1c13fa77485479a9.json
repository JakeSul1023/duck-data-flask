{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Forked from https://github.com/mapbox/geojson-vt under compatible ISC license\nexport function createProtoFeature(id, type, geometry, tags) {\n  const feature = {\n    // eslint-disable-next-line\n    id: id == null ? null : id,\n    type,\n    simplifiedType: undefined,\n    // TODO\n    geometry,\n    tags,\n    minX: Infinity,\n    minY: Infinity,\n    maxX: -Infinity,\n    maxY: -Infinity\n  };\n  // TODO break out into separate function\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n      calcLineBBox(feature, geometry);\n      break;\n    case 'MultiLineString':\n      for (const line of geometry) {\n        calcLineBBox(feature, line);\n      }\n      break;\n    case 'Polygon':\n      // the outer ring (ie [0]) contains all inner rings\n      calcLineBBox(feature, geometry[0]);\n      break;\n    case 'MultiPolygon':\n      for (const polygon of geometry) {\n        // the outer ring (ie [0]) contains all inner rings\n        calcLineBBox(feature, polygon[0]);\n      }\n      break;\n    default:\n      throw new Error(String(type));\n  }\n  return feature;\n}\nfunction calcLineBBox(feature, geometry) {\n  for (let i = 0; i < geometry.length; i += 3) {\n    feature.minX = Math.min(feature.minX, geometry[i]);\n    feature.minY = Math.min(feature.minY, geometry[i + 1]);\n    feature.maxX = Math.max(feature.maxX, geometry[i]);\n    feature.maxY = Math.max(feature.maxY, geometry[i + 1]);\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}