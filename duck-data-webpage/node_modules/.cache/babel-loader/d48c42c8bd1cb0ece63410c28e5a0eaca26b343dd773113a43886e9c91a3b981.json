{"ast":null,"code":"// Extract injected version from package.json (injected by babel plugin)\n// @ts-expect-error\nexport const VERSION = typeof \"4.1.0\" !== 'undefined' ? \"4.1.0\" : 'untranspiled source';\n// ENVIRONMENT\nexport { self, window, global, document, process, console } from \"./lib/globals.js\";\nexport { isBrowser } from \"./lib/is-browser.js\";\nexport { getBrowser, isMobile } from \"./lib/get-browser.js\";\nexport { isElectron } from \"./lib/is-electron.js\";\n// ENVIRONMENT'S ASSERT IS 5-15KB, SO WE PROVIDE OUR OWN\nexport { assert } from \"./utils/assert.js\";\n// TODO - wish we could just export a constant\n// export const isBrowser = checkIfBrowser();","map":{"version":3,"names":["VERSION","self","window","global","document","process","console","isBrowser","getBrowser","isMobile","isElectron","assert"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@probe.gl\\env\\src\\index.ts"],"sourcesContent":["// Extract injected version from package.json (injected by babel plugin)\n// @ts-expect-error\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'untranspiled source';\n\n// ENVIRONMENT\nexport {self, window, global, document, process, console} from './lib/globals';\nexport {isBrowser} from './lib/is-browser';\nexport {getBrowser, isMobile} from './lib/get-browser';\nexport {isElectron} from './lib/is-electron';\n\n// ENVIRONMENT'S ASSERT IS 5-15KB, SO WE PROVIDE OUR OWN\nexport {assert} from './utils/assert';\n\n// TODO - wish we could just export a constant\n// export const isBrowser = checkIfBrowser();\n"],"mappings":"AAAA;AACA;AACA,OAAO,MAAMA,OAAO,GAAG,cAAkB,KAAK,WAAW,GAAE,UAAe,qBAAqB;AAE/F;AACA,SAAQC,IAAI,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,OAAO,QAAC;AACzD,SAAQC,SAAS,QAAC;AAClB,SAAQC,UAAU,EAAEC,QAAQ,QAAC;AAC7B,SAAQC,UAAU,QAAC;AAEnB;AACA,SAAQC,MAAM,QAAC;AAEf;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}