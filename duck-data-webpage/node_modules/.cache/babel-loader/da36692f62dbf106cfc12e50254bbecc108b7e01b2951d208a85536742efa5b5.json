{"ast":null,"code":"// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { lights } from \"../lights/lights.js\";\nimport { lightingShader } from \"./phong-lighting-glsl.js\";\nconst INITIAL_MODULE_OPTIONS = {};\nfunction getMaterialUniforms(material) {\n  const {\n    ambient = 0.35,\n    diffuse = 0.6,\n    shininess = 32,\n    specularColor = [30, 30, 30]\n  } = material;\n  return {\n    lighting_uAmbient: ambient,\n    lighting_uDiffuse: diffuse,\n    lighting_uShininess: shininess,\n    lighting_uSpecularColor: specularColor.map(x => x / 255)\n  };\n}\nfunction getUniforms(opts = INITIAL_MODULE_OPTIONS) {\n  if (!('material' in opts)) {\n    return {};\n  }\n  const {\n    material\n  } = opts;\n  if (!material) {\n    return {\n      lighting_uEnabled: false\n    };\n  }\n  return getMaterialUniforms(material);\n}\nexport const gouraudLighting = {\n  name: 'gouraud-lighting',\n  dependencies: [lights],\n  vs: lightingShader,\n  defines: {\n    LIGHTING_VERTEX: 1\n  },\n  getUniforms\n};\nexport const phongLighting = {\n  name: 'phong-lighting',\n  dependencies: [lights],\n  fs: lightingShader,\n  defines: {\n    LIGHTING_FRAGMENT: 1\n  },\n  getUniforms\n};","map":{"version":3,"names":["lights","lightingShader","INITIAL_MODULE_OPTIONS","getMaterialUniforms","material","ambient","diffuse","shininess","specularColor","lighting_uAmbient","lighting_uDiffuse","lighting_uShininess","lighting_uSpecularColor","map","x","getUniforms","opts","lighting_uEnabled","gouraudLighting","name","dependencies","vs","defines","LIGHTING_VERTEX","phongLighting","fs","LIGHTING_FRAGMENT"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@luma.gl\\shadertools\\src\\modules-webgl1\\lighting\\phong-lighting\\phong-lighting.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {lights} from '../lights/lights';\nimport {lightingShader} from './phong-lighting-glsl';\n\n/* eslint-disable camelcase */\n\nexport type PhongLightingProps = {\n  ambient?: number;\n  diffuse?: number;\n  shininess?: number;\n  specularColor?: [number, number, number];\n};\n\nconst INITIAL_MODULE_OPTIONS: {material?: PhongLightingProps} = {};\n\nfunction getMaterialUniforms(material: PhongLightingProps) {\n  const {ambient = 0.35, diffuse = 0.6, shininess = 32, specularColor = [30, 30, 30]} = material;\n\n  return {\n    lighting_uAmbient: ambient,\n    lighting_uDiffuse: diffuse,\n    lighting_uShininess: shininess,\n    lighting_uSpecularColor: specularColor.map(x => x / 255)\n  };\n}\n\nfunction getUniforms(\n  opts: {material?: PhongLightingProps} = INITIAL_MODULE_OPTIONS\n): Record<string, any> {\n  if (!('material' in opts)) {\n    return {};\n  }\n\n  const {material} = opts;\n\n  if (!material) {\n    return {lighting_uEnabled: false};\n  }\n\n  return getMaterialUniforms(material);\n}\n\nexport const gouraudLighting = {\n  name: 'gouraud-lighting',\n  dependencies: [lights],\n  vs: lightingShader,\n  defines: {\n    LIGHTING_VERTEX: 1\n  },\n  getUniforms\n};\n\nexport const phongLighting = {\n  name: 'phong-lighting',\n  dependencies: [lights],\n  fs: lightingShader,\n  defines: {\n    LIGHTING_FRAGMENT: 1\n  },\n  getUniforms\n};\n"],"mappings":"AAAA;AACA;AACA;AAEA,SAAQA,MAAM,QAAC;AACf,SAAQC,cAAc,QAAC;AAWvB,MAAMC,sBAAsB,GAAoC,EAAE;AAElE,SAASC,mBAAmBA,CAACC,QAA4B;EACvD,MAAM;IAACC,OAAO,GAAG,IAAI;IAAEC,OAAO,GAAG,GAAG;IAAEC,SAAS,GAAG,EAAE;IAAEC,aAAa,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;EAAC,CAAC,GAAGJ,QAAQ;EAE9F,OAAO;IACLK,iBAAiB,EAAEJ,OAAO;IAC1BK,iBAAiB,EAAEJ,OAAO;IAC1BK,mBAAmB,EAAEJ,SAAS;IAC9BK,uBAAuB,EAAEJ,aAAa,CAACK,GAAG,CAACC,CAAC,IAAIA,CAAC,GAAG,GAAG;GACxD;AACH;AAEA,SAASC,WAAWA,CAClBC,IAAA,GAAwCd,sBAAsB;EAE9D,IAAI,EAAE,UAAU,IAAIc,IAAI,CAAC,EAAE;IACzB,OAAO,EAAE;EACX;EAEA,MAAM;IAACZ;EAAQ,CAAC,GAAGY,IAAI;EAEvB,IAAI,CAACZ,QAAQ,EAAE;IACb,OAAO;MAACa,iBAAiB,EAAE;IAAK,CAAC;EACnC;EAEA,OAAOd,mBAAmB,CAACC,QAAQ,CAAC;AACtC;AAEA,OAAO,MAAMc,eAAe,GAAG;EAC7BC,IAAI,EAAE,kBAAkB;EACxBC,YAAY,EAAE,CAACpB,MAAM,CAAC;EACtBqB,EAAE,EAAEpB,cAAc;EAClBqB,OAAO,EAAE;IACPC,eAAe,EAAE;GAClB;EACDR;CACD;AAED,OAAO,MAAMS,aAAa,GAAG;EAC3BL,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAE,CAACpB,MAAM,CAAC;EACtByB,EAAE,EAAExB,cAAc;EAClBqB,OAAO,EAAE;IACPI,iBAAiB,EAAE;GACpB;EACDX;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}