{"ast":null,"code":"// Subset of WebGL constants\nexport const GL_PRIMITIVE = {\n  POINTS: 0x0000,\n  // Points. single points.\n  LINES: 0x0001,\n  // Lines. Each vertex connects to the one after it.\n  TRIANGLES: 0x0004 // Triangles. Each set of three vertices creates a separate triangle.\n};\n// Primitive modes\nexport const GL_PRIMITIVE_MODE = {\n  POINTS: 0x0000,\n  // Points. single points.\n  LINES: 0x0001,\n  // Lines. Each vertex connects to the one after it.\n  LINE_LOOP: 0x0002,\n  // Lines. Each set of two vertices is treated as a separate line segment.\n  LINE_STRIP: 0x0003,\n  // Lines/ a connected group of line segments from the first vertex to the last\n  TRIANGLES: 0x0004,\n  // Triangles. Each set of three vertices creates a separate triangle.\n  TRIANGLE_STRIP: 0x0005,\n  // Triangles. A connected group of triangles.\n  TRIANGLE_FAN: 0x0006 // Triangles. A connected group of triangles.\n  // Each vertex connects to the previous and the first vertex in the fan.\n};\nexport const GL_TYPE = {\n  BYTE: 5120,\n  UNSIGNED_BYTE: 5121,\n  SHORT: 5122,\n  UNSIGNED_SHORT: 5123,\n  INT: 5124,\n  UNSIGNED_INT: 5125,\n  FLOAT: 5126,\n  DOUBLE: 5130\n};\nexport const GL = {\n  ...GL_PRIMITIVE_MODE,\n  ...GL_TYPE\n};","map":{"version":3,"names":["GL_PRIMITIVE","POINTS","LINES","TRIANGLES","GL_PRIMITIVE_MODE","LINE_LOOP","LINE_STRIP","TRIANGLE_STRIP","TRIANGLE_FAN","GL_TYPE","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","DOUBLE","GL"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/math/dist/geometry/constants.js"],"sourcesContent":["// Subset of WebGL constants\nexport const GL_PRIMITIVE = {\n    POINTS: 0x0000, // Points. single points.\n    LINES: 0x0001, // Lines. Each vertex connects to the one after it.\n    TRIANGLES: 0x0004 // Triangles. Each set of three vertices creates a separate triangle.\n};\n// Primitive modes\nexport const GL_PRIMITIVE_MODE = {\n    POINTS: 0x0000, // Points. single points.\n    LINES: 0x0001, // Lines. Each vertex connects to the one after it.\n    LINE_LOOP: 0x0002, // Lines. Each set of two vertices is treated as a separate line segment.\n    LINE_STRIP: 0x0003, // Lines/ a connected group of line segments from the first vertex to the last\n    TRIANGLES: 0x0004, // Triangles. Each set of three vertices creates a separate triangle.\n    TRIANGLE_STRIP: 0x0005, // Triangles. A connected group of triangles.\n    TRIANGLE_FAN: 0x0006 // Triangles. A connected group of triangles.\n    // Each vertex connects to the previous and the first vertex in the fan.\n};\nexport const GL_TYPE = {\n    BYTE: 5120,\n    UNSIGNED_BYTE: 5121,\n    SHORT: 5122,\n    UNSIGNED_SHORT: 5123,\n    INT: 5124,\n    UNSIGNED_INT: 5125,\n    FLOAT: 5126,\n    DOUBLE: 5130\n};\nexport const GL = {\n    ...GL_PRIMITIVE_MODE,\n    ...GL_TYPE\n};\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,YAAY,GAAG;EACxBC,MAAM,EAAE,MAAM;EAAE;EAChBC,KAAK,EAAE,MAAM;EAAE;EACfC,SAAS,EAAE,MAAM,CAAC;AACtB,CAAC;AACD;AACA,OAAO,MAAMC,iBAAiB,GAAG;EAC7BH,MAAM,EAAE,MAAM;EAAE;EAChBC,KAAK,EAAE,MAAM;EAAE;EACfG,SAAS,EAAE,MAAM;EAAE;EACnBC,UAAU,EAAE,MAAM;EAAE;EACpBH,SAAS,EAAE,MAAM;EAAE;EACnBI,cAAc,EAAE,MAAM;EAAE;EACxBC,YAAY,EAAE,MAAM,CAAC;EACrB;AACJ,CAAC;AACD,OAAO,MAAMC,OAAO,GAAG;EACnBC,IAAI,EAAE,IAAI;EACVC,aAAa,EAAE,IAAI;EACnBC,KAAK,EAAE,IAAI;EACXC,cAAc,EAAE,IAAI;EACpBC,GAAG,EAAE,IAAI;EACTC,YAAY,EAAE,IAAI;EAClBC,KAAK,EAAE,IAAI;EACXC,MAAM,EAAE;AACZ,CAAC;AACD,OAAO,MAAMC,EAAE,GAAG;EACd,GAAGd,iBAAiB;EACpB,GAAGK;AACP,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}