{"ast":null,"code":"import { AttrRecognizer } from \"./attribute.js\";\nimport { TOUCH_ACTION_NONE } from \"../touchaction/touchaction-Consts.js\";\nimport { RecognizerState } from \"../recognizer/recognizer-state.js\";\nconst EVENT_NAMES = ['', 'start', 'move', 'end', 'cancel'];\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n */\nexport class RotateRecognizer extends AttrRecognizer {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super({\n      enable: true,\n      event: 'rotate',\n      threshold: 0,\n      pointers: 2,\n      ...options\n    });\n  }\n  getTouchAction() {\n    return [TOUCH_ACTION_NONE];\n  }\n  getEventNames() {\n    return EVENT_NAMES.map(suffix => this.options.event + suffix);\n  }\n  attrTest(input) {\n    return super.attrTest(input) && (Math.abs(input.rotation) > this.options.threshold || Boolean(this.state & RecognizerState.Began));\n  }\n}\n//# sourceMappingURL=rotate.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}