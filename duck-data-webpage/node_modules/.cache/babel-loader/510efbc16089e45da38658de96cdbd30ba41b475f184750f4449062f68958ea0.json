{"ast":null,"code":"// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Copyright (c) 2017 Uber Technologies, Inc.\nimport { Vector } from \"./base/vector.js\";\nimport { config, isArray } from \"../lib/common.js\";\nimport { checkNumber } from \"../lib/validators.js\";\nimport { transformMat4 as vec2_transformMat4, transformMat3 as vec2_transformMat3, transformMat2d as vec2_transformMat2d, transformMat2 as vec2_transformMat2 } from \"../gl-matrix/vec2.js\";\nimport { vec2_transformMat4AsVector } from \"../lib/gl-matrix-extras.js\";\n/**\n * Two-element vector class with common linear algebra operations.\n * Subclass of Array<number> meaning that it is highly compatible with other libraries\n */\nexport class Vector2 extends Vector {\n  // Creates a new, empty vec2\n  constructor(x = 0, y = 0) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(2); // -0, -0);\n    if (isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n      }\n      this[0] = x;\n      this[1] = y;\n    }\n  }\n  set(x, y) {\n    this[0] = x;\n    this[1] = y;\n    return this.check();\n  }\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    return this.check();\n  }\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n    }\n    this[0] = object.x;\n    this[1] = object.y;\n    return this.check();\n  }\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    return object;\n  }\n  // Getters/setters\n  get ELEMENTS() {\n    return 2;\n  }\n  /**\n   * Returns angle from x axis\n   * @returns\n   */\n  horizontalAngle() {\n    return Math.atan2(this.y, this.x);\n  }\n  /**\n   * Returns angle from y axis\n   * @returns\n   */\n  verticalAngle() {\n    return Math.atan2(this.x, this.y);\n  }\n  // Transforms\n  /**\n   * Transforms as point\n   * @param matrix4\n   * @returns\n   */\n  transform(matrix4) {\n    return this.transformAsPoint(matrix4);\n  }\n  /**\n   * transforms as point (4th component is implicitly 1)\n   * @param matrix4\n   * @returns\n   */\n  transformAsPoint(matrix4) {\n    vec2_transformMat4(this, this, matrix4);\n    return this.check();\n  }\n  /**\n   * transforms as vector (4th component is implicitly 0, ignores translation. slightly faster)\n   * @param matrix4\n   * @returns\n   */\n  transformAsVector(matrix4) {\n    vec2_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n  transformByMatrix3(matrix3) {\n    vec2_transformMat3(this, this, matrix3);\n    return this.check();\n  }\n  transformByMatrix2x3(matrix2x3) {\n    vec2_transformMat2d(this, this, matrix2x3);\n    return this.check();\n  }\n  transformByMatrix2(matrix2) {\n    vec2_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n}","map":{"version":3,"names":["Vector","config","isArray","checkNumber","transformMat4","vec2_transformMat4","transformMat3","vec2_transformMat3","transformMat2d","vec2_transformMat2d","transformMat2","vec2_transformMat2","vec2_transformMat4AsVector","Vector2","constructor","x","y","arguments","length","copy","debug","set","check","array","fromObject","object","toObject","ELEMENTS","horizontalAngle","Math","atan2","verticalAngle","transform","matrix4","transformAsPoint","transformAsVector","transformByMatrix3","matrix3","transformByMatrix2x3","matrix2x3","transformByMatrix2","matrix2"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@math.gl\\core\\src\\classes\\vector2.ts"],"sourcesContent":["// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Copyright (c) 2017 Uber Technologies, Inc.\n\nimport {NumericArray, NumericArray2} from '@math.gl/types';\n\nimport {Vector} from './base/vector';\nimport {config, isArray} from '../lib/common';\nimport {checkNumber} from '../lib/validators';\nimport {\n  transformMat4 as vec2_transformMat4,\n  transformMat3 as vec2_transformMat3,\n  transformMat2d as vec2_transformMat2d,\n  transformMat2 as vec2_transformMat2\n} from '../gl-matrix/vec2';\nimport {vec2_transformMat4AsVector} from '../lib/gl-matrix-extras';\n\n/** Helper type that captures array length for a 2 element vector */\nexport type Vector2Like = Vector2 | NumericArray2;\n\n/**\n * Two-element vector class with common linear algebra operations.\n * Subclass of Array<number> meaning that it is highly compatible with other libraries\n */\nexport class Vector2 extends Vector {\n  // Creates a new, empty vec2\n  constructor(x: number | Readonly<NumericArray> = 0, y: number = 0) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(2); // -0, -0);\n    if (isArray(x) && arguments.length === 1) {\n      this.copy(x as Readonly<NumericArray>);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n      }\n      this[0] = x as number;\n      this[1] = y;\n    }\n  }\n\n  set(x: number, y: number): this {\n    this[0] = x;\n    this[1] = y;\n    return this.check();\n  }\n\n  copy(array: Readonly<NumericArray>): this {\n    this[0] = array[0];\n    this[1] = array[1];\n    return this.check();\n  }\n\n  fromObject(object: {x: number; y: number}): this {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n    }\n    this[0] = object.x;\n    this[1] = object.y;\n    return this.check();\n  }\n\n  override toObject(object: {x?: number; y?: number}): {x: number; y: number} {\n    object.x = this[0];\n    object.y = this[1];\n    return object as {x: number; y: number};\n  }\n\n  // Getters/setters\n\n  get ELEMENTS(): number {\n    return 2;\n  }\n\n  /**\n   * Returns angle from x axis\n   * @returns\n   */\n  horizontalAngle(): number {\n    return Math.atan2(this.y, this.x);\n  }\n\n  /**\n   * Returns angle from y axis\n   * @returns\n   */\n  verticalAngle(): number {\n    return Math.atan2(this.x, this.y);\n  }\n\n  // Transforms\n\n  /**\n   * Transforms as point\n   * @param matrix4\n   * @returns\n   */\n  transform(matrix4: Readonly<NumericArray>): this {\n    return this.transformAsPoint(matrix4);\n  }\n\n  /**\n   * transforms as point (4th component is implicitly 1)\n   * @param matrix4\n   * @returns\n   */\n  transformAsPoint(matrix4: Readonly<NumericArray>): this {\n    vec2_transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  /**\n   * transforms as vector (4th component is implicitly 0, ignores translation. slightly faster)\n   * @param matrix4\n   * @returns\n   */\n  transformAsVector(matrix4: Readonly<NumericArray>): this {\n    vec2_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3: Readonly<NumericArray>): this {\n    vec2_transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2x3(matrix2x3: Readonly<NumericArray>): this {\n    vec2_transformMat2d(this, this, matrix2x3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2: Readonly<NumericArray>): this {\n    vec2_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}