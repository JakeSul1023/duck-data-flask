{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* global document */\nimport { _deepEqual, _applyStyles, _removeStyles } from '@deck.gl/core';\nexport class WidgetImpl {\n  constructor(props) {\n    this.id = props.id || 'widget';\n    this.props = props;\n  }\n  onAdd(_ref) {\n    let {\n      deck\n    } = _ref;\n    this.deck = deck;\n    const {\n      style,\n      className\n    } = this.props;\n    const el = this._createRootElement({\n      widgetClassName: this.className,\n      className,\n      style\n    });\n    this.element = el;\n    this.onRenderHTML();\n    return this.element;\n  }\n  onRemove() {\n    this.deck = undefined;\n    this.element = undefined;\n  }\n  setProps(props) {\n    const oldProps = this.props;\n    const el = this.element;\n    if (el) {\n      if (oldProps.className !== props.className) {\n        if (oldProps.className) el.classList.remove(oldProps.className);\n        if (props.className) el.classList.add(props.className);\n      }\n      if (!_deepEqual(oldProps.style, props.style, 1)) {\n        _removeStyles(el, oldProps.style);\n        _applyStyles(el, props.style);\n      }\n    }\n    Object.assign(this.props, props);\n    this.onRenderHTML();\n  }\n  _createRootElement(props) {\n    const {\n      widgetClassName,\n      className,\n      style\n    } = props;\n    const element = document.createElement('div');\n    ['deck-widget', widgetClassName, className].filter(cls => typeof cls === 'string' && cls.length > 0).forEach(className => element.classList.add(className));\n    _applyStyles(element, style);\n    return element;\n  }\n}\nWidgetImpl.defaultProps = {\n  id: 'widget',\n  style: {},\n  className: ''\n};\n//# sourceMappingURL=widget-impl.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}