{"ast":null,"code":"export function isImage(image) {\n  return Boolean(getImageTypeOrNull(image));\n}\nexport function deleteImage(image) {\n  switch (getImageType(image)) {\n    case 'imagebitmap':\n      image.close();\n      break;\n    default:\n    // Nothing to do for images and image data objects\n  }\n}\nexport function getImageType(image) {\n  const format = getImageTypeOrNull(image);\n  if (!format) {\n    throw new Error('Not an image');\n  }\n  return format;\n}\nexport function getImageSize(image) {\n  return getImageData(image);\n}\nexport function getImageData(image) {\n  switch (getImageType(image)) {\n    case 'data':\n      return image;\n    case 'image':\n    case 'imagebitmap':\n      // Extract the image data from the image via a canvas\n      const canvas = document.createElement('canvas');\n      // TODO - reuse the canvas?\n      const context = canvas.getContext('2d');\n      if (!context) {\n        throw new Error('getImageData');\n      }\n      // @ts-ignore\n      canvas.width = image.width;\n      // @ts-ignore\n      canvas.height = image.height;\n      // @ts-ignore\n      context.drawImage(image, 0, 0);\n      // @ts-ignore\n      return context.getImageData(0, 0, image.width, image.height);\n    default:\n      throw new Error('getImageData');\n  }\n}\n// PRIVATE\n// eslint-disable-next-line complexity\nfunction getImageTypeOrNull(image) {\n  if (typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n    return 'imagebitmap';\n  }\n  if (typeof Image !== 'undefined' && image instanceof Image) {\n    return 'image';\n  }\n  if (image && typeof image === 'object' && image.data && image.width && image.height) {\n    return 'data';\n  }\n  return null;\n}","map":{"version":3,"names":["isImage","image","Boolean","getImageTypeOrNull","deleteImage","getImageType","close","format","Error","getImageSize","getImageData","canvas","document","createElement","context","getContext","width","height","drawImage","ImageBitmap","Image","data"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/images/dist/lib/category-api/parsed-image-api.js"],"sourcesContent":["export function isImage(image) {\n    return Boolean(getImageTypeOrNull(image));\n}\nexport function deleteImage(image) {\n    switch (getImageType(image)) {\n        case 'imagebitmap':\n            image.close();\n            break;\n        default:\n        // Nothing to do for images and image data objects\n    }\n}\nexport function getImageType(image) {\n    const format = getImageTypeOrNull(image);\n    if (!format) {\n        throw new Error('Not an image');\n    }\n    return format;\n}\nexport function getImageSize(image) {\n    return getImageData(image);\n}\nexport function getImageData(image) {\n    switch (getImageType(image)) {\n        case 'data':\n            return image;\n        case 'image':\n        case 'imagebitmap':\n            // Extract the image data from the image via a canvas\n            const canvas = document.createElement('canvas');\n            // TODO - reuse the canvas?\n            const context = canvas.getContext('2d');\n            if (!context) {\n                throw new Error('getImageData');\n            }\n            // @ts-ignore\n            canvas.width = image.width;\n            // @ts-ignore\n            canvas.height = image.height;\n            // @ts-ignore\n            context.drawImage(image, 0, 0);\n            // @ts-ignore\n            return context.getImageData(0, 0, image.width, image.height);\n        default:\n            throw new Error('getImageData');\n    }\n}\n// PRIVATE\n// eslint-disable-next-line complexity\nfunction getImageTypeOrNull(image) {\n    if (typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n        return 'imagebitmap';\n    }\n    if (typeof Image !== 'undefined' && image instanceof Image) {\n        return 'image';\n    }\n    if (image && typeof image === 'object' && image.data && image.width && image.height) {\n        return 'data';\n    }\n    return null;\n}\n"],"mappings":"AAAA,OAAO,SAASA,OAAOA,CAACC,KAAK,EAAE;EAC3B,OAAOC,OAAO,CAACC,kBAAkB,CAACF,KAAK,CAAC,CAAC;AAC7C;AACA,OAAO,SAASG,WAAWA,CAACH,KAAK,EAAE;EAC/B,QAAQI,YAAY,CAACJ,KAAK,CAAC;IACvB,KAAK,aAAa;MACdA,KAAK,CAACK,KAAK,CAAC,CAAC;MACb;IACJ;IACA;EACJ;AACJ;AACA,OAAO,SAASD,YAAYA,CAACJ,KAAK,EAAE;EAChC,MAAMM,MAAM,GAAGJ,kBAAkB,CAACF,KAAK,CAAC;EACxC,IAAI,CAACM,MAAM,EAAE;IACT,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;EACnC;EACA,OAAOD,MAAM;AACjB;AACA,OAAO,SAASE,YAAYA,CAACR,KAAK,EAAE;EAChC,OAAOS,YAAY,CAACT,KAAK,CAAC;AAC9B;AACA,OAAO,SAASS,YAAYA,CAACT,KAAK,EAAE;EAChC,QAAQI,YAAY,CAACJ,KAAK,CAAC;IACvB,KAAK,MAAM;MACP,OAAOA,KAAK;IAChB,KAAK,OAAO;IACZ,KAAK,aAAa;MACd;MACA,MAAMU,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/C;MACA,MAAMC,OAAO,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;MACvC,IAAI,CAACD,OAAO,EAAE;QACV,MAAM,IAAIN,KAAK,CAAC,cAAc,CAAC;MACnC;MACA;MACAG,MAAM,CAACK,KAAK,GAAGf,KAAK,CAACe,KAAK;MAC1B;MACAL,MAAM,CAACM,MAAM,GAAGhB,KAAK,CAACgB,MAAM;MAC5B;MACAH,OAAO,CAACI,SAAS,CAACjB,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;MAC9B;MACA,OAAOa,OAAO,CAACJ,YAAY,CAAC,CAAC,EAAE,CAAC,EAAET,KAAK,CAACe,KAAK,EAAEf,KAAK,CAACgB,MAAM,CAAC;IAChE;MACI,MAAM,IAAIT,KAAK,CAAC,cAAc,CAAC;EACvC;AACJ;AACA;AACA;AACA,SAASL,kBAAkBA,CAACF,KAAK,EAAE;EAC/B,IAAI,OAAOkB,WAAW,KAAK,WAAW,IAAIlB,KAAK,YAAYkB,WAAW,EAAE;IACpE,OAAO,aAAa;EACxB;EACA,IAAI,OAAOC,KAAK,KAAK,WAAW,IAAInB,KAAK,YAAYmB,KAAK,EAAE;IACxD,OAAO,OAAO;EAClB;EACA,IAAInB,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACoB,IAAI,IAAIpB,KAAK,CAACe,KAAK,IAAIf,KAAK,CAACgB,MAAM,EAAE;IACjF,OAAO,MAAM;EACjB;EACA,OAAO,IAAI;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}