{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nexport const TILE_CONTENT_STATE = {\n  UNLOADED: 0,\n  // Has never been requested\n  LOADING: 1,\n  // Is waiting on a pending request\n  PROCESSING: 2,\n  // Request received.  Contents are being processed for rendering.  Depending on the content, it might make its own requests for external data.\n  READY: 3,\n  // Ready to render.\n  EXPIRED: 4,\n  // Is expired and will be unloaded once new content is loaded.\n  FAILED: 5 // Request failed.\n};\nexport var TILE_REFINEMENT;\n(function (TILE_REFINEMENT) {\n  TILE_REFINEMENT[TILE_REFINEMENT[\"ADD\"] = 1] = \"ADD\";\n  TILE_REFINEMENT[TILE_REFINEMENT[\"REPLACE\"] = 2] = \"REPLACE\"; // Render tile or, if screen space error exceeded, refine to its descendants instead.\n})(TILE_REFINEMENT || (TILE_REFINEMENT = {}));\nexport var TILE_TYPE;\n(function (TILE_TYPE) {\n  TILE_TYPE[\"EMPTY\"] = \"empty\";\n  TILE_TYPE[\"SCENEGRAPH\"] = \"scenegraph\";\n  TILE_TYPE[\"POINTCLOUD\"] = \"pointcloud\";\n  TILE_TYPE[\"MESH\"] = \"mesh\";\n})(TILE_TYPE || (TILE_TYPE = {}));\nexport var TILESET_TYPE;\n(function (TILESET_TYPE) {\n  TILESET_TYPE[\"I3S\"] = \"I3S\";\n  TILESET_TYPE[\"TILES3D\"] = \"TILES3D\";\n})(TILESET_TYPE || (TILESET_TYPE = {}));\nexport var LOD_METRIC_TYPE;\n(function (LOD_METRIC_TYPE) {\n  LOD_METRIC_TYPE[\"GEOMETRIC_ERROR\"] = \"geometricError\";\n  LOD_METRIC_TYPE[\"MAX_SCREEN_THRESHOLD\"] = \"maxScreenThreshold\";\n})(LOD_METRIC_TYPE || (LOD_METRIC_TYPE = {}));\nexport const TILE3D_OPTIMIZATION_HINT = {\n  NOT_COMPUTED: -1,\n  USE_OPTIMIZATION: 1,\n  SKIP_OPTIMIZATION: 0\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}