{"ast":null,"code":"// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// NOTE: Modules other than `@luma.gl/webgl` should not import `GL` from\n// `@luma.gl/constants`. Locally we use `GLEnum` instead of `GL` to avoid\n// conflicts with the `babel-plugin-inline-webgl-constants` plugin.\n// eslint-disable-next-line no-shadow\nexport var GLEnum;\n(function (GLEnum) {\n  GLEnum[GLEnum[\"POINTS\"] = 0] = \"POINTS\";\n  GLEnum[GLEnum[\"LINES\"] = 1] = \"LINES\";\n  GLEnum[GLEnum[\"LINE_LOOP\"] = 2] = \"LINE_LOOP\";\n  GLEnum[GLEnum[\"LINE_STRIP\"] = 3] = \"LINE_STRIP\";\n  GLEnum[GLEnum[\"TRIANGLES\"] = 4] = \"TRIANGLES\";\n  GLEnum[GLEnum[\"TRIANGLE_STRIP\"] = 5] = \"TRIANGLE_STRIP\";\n  GLEnum[GLEnum[\"TRIANGLE_FAN\"] = 6] = \"TRIANGLE_FAN\";\n})(GLEnum || (GLEnum = {}));\nexport function convertGLDrawModeToTopology(drawMode) {\n  // prettier-ignore\n  switch (drawMode) {\n    case GLEnum.POINTS:\n      return 'point-list';\n    case GLEnum.LINES:\n      return 'line-list';\n    case GLEnum.LINE_STRIP:\n      return 'line-strip';\n    case GLEnum.TRIANGLES:\n      return 'triangle-list';\n    case GLEnum.TRIANGLE_STRIP:\n      return 'triangle-strip';\n    default:\n      throw new Error(String(drawMode));\n  }\n}","map":{"version":3,"names":["GLEnum","convertGLDrawModeToTopology","drawMode","POINTS","LINES","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","Error","String"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@luma.gl\\gltf\\src\\gltf\\gl-utils.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {PrimitiveTopology} from '@luma.gl/core';\n\n// NOTE: Modules other than `@luma.gl/webgl` should not import `GL` from\n// `@luma.gl/constants`. Locally we use `GLEnum` instead of `GL` to avoid\n// conflicts with the `babel-plugin-inline-webgl-constants` plugin.\n// eslint-disable-next-line no-shadow\nexport enum GLEnum {\n  POINTS = 0x0,\n  LINES = 0x1,\n  LINE_LOOP = 0x2,\n  LINE_STRIP = 0x3,\n  TRIANGLES = 0x4,\n  TRIANGLE_STRIP = 0x5,\n  TRIANGLE_FAN = 0x6\n}\n\nexport function convertGLDrawModeToTopology(\n  drawMode:\n    | GLEnum.POINTS\n    | GLEnum.LINES\n    | GLEnum.LINE_STRIP\n    | GLEnum.LINE_LOOP\n    | GLEnum.TRIANGLES\n    | GLEnum.TRIANGLE_STRIP\n    | GLEnum.TRIANGLE_FAN\n): PrimitiveTopology {\n  // prettier-ignore\n  switch (drawMode) {\n    case GLEnum.POINTS: return 'point-list';\n    case GLEnum.LINES: return 'line-list';\n    case GLEnum.LINE_STRIP: return 'line-strip';\n    case GLEnum.TRIANGLES: return 'triangle-list';\n    case GLEnum.TRIANGLE_STRIP: return 'triangle-strip';\n    default: throw new Error(String(drawMode));\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA,WAAYA,MAQX;AARD,WAAYA,MAAM;EAChBA,MAAA,CAAAA,MAAA,0BAAY;EACZA,MAAA,CAAAA,MAAA,wBAAW;EACXA,MAAA,CAAAA,MAAA,gCAAe;EACfA,MAAA,CAAAA,MAAA,kCAAgB;EAChBA,MAAA,CAAAA,MAAA,gCAAe;EACfA,MAAA,CAAAA,MAAA,0CAAoB;EACpBA,MAAA,CAAAA,MAAA,sCAAkB;AACpB,CAAC,EARWA,MAAM,KAANA,MAAM;AAUlB,OAAM,SAAUC,2BAA2BA,CACzCC,QAOuB;EAEvB;EACA,QAAQA,QAAQ;IACd,KAAKF,MAAM,CAACG,MAAM;MAAE,OAAO,YAAY;IACvC,KAAKH,MAAM,CAACI,KAAK;MAAE,OAAO,WAAW;IACrC,KAAKJ,MAAM,CAACK,UAAU;MAAE,OAAO,YAAY;IAC3C,KAAKL,MAAM,CAACM,SAAS;MAAE,OAAO,eAAe;IAC7C,KAAKN,MAAM,CAACO,cAAc;MAAE,OAAO,gBAAgB;IACnD;MAAS,MAAM,IAAIC,KAAK,CAACC,MAAM,CAACP,QAAQ,CAAC,CAAC;EAC5C;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}