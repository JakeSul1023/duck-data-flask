{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/**\n * ArrowJS `Field` API-compatible class for row-based tables\n * https://loaders.gl/arrowjs/docs/api-reference/field\n * A field holds name, nullable, and metadata information about a table \"column\"\n * A Schema is essentially a list of fields\n */\nexport class ArrowLikeField {\n  name;\n  type;\n  nullable;\n  metadata;\n  constructor(name, type, nullable = false, metadata = new Map()) {\n    this.name = name;\n    this.type = type;\n    this.nullable = nullable;\n    this.metadata = metadata;\n  }\n  get typeId() {\n    return this.type && this.type.typeId;\n  }\n  clone() {\n    return new ArrowLikeField(this.name, this.type, this.nullable, this.metadata);\n  }\n  compareTo(other) {\n    return this.name === other.name && this.type === other.type && this.nullable === other.nullable && this.metadata === other.metadata;\n  }\n  toString() {\n    return `${JSON.stringify(this.type)}${this.nullable ? ', nullable' : ''}${this.metadata ? `, metadata: ${JSON.stringify(this.metadata)}` : ''}`;\n  }\n}","map":{"version":3,"names":["ArrowLikeField","name","type","nullable","metadata","constructor","Map","typeId","clone","compareTo","other","toString","JSON","stringify"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/schema/dist/lib/table/arrow-api/arrow-like-field.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/**\n * ArrowJS `Field` API-compatible class for row-based tables\n * https://loaders.gl/arrowjs/docs/api-reference/field\n * A field holds name, nullable, and metadata information about a table \"column\"\n * A Schema is essentially a list of fields\n */\nexport class ArrowLikeField {\n    name;\n    type;\n    nullable;\n    metadata;\n    constructor(name, type, nullable = false, metadata = new Map()) {\n        this.name = name;\n        this.type = type;\n        this.nullable = nullable;\n        this.metadata = metadata;\n    }\n    get typeId() {\n        return this.type && this.type.typeId;\n    }\n    clone() {\n        return new ArrowLikeField(this.name, this.type, this.nullable, this.metadata);\n    }\n    compareTo(other) {\n        return (this.name === other.name &&\n            this.type === other.type &&\n            this.nullable === other.nullable &&\n            this.metadata === other.metadata);\n    }\n    toString() {\n        return `${JSON.stringify(this.type)}${this.nullable ? ', nullable' : ''}${this.metadata ? `, metadata: ${JSON.stringify(this.metadata)}` : ''}`;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,cAAc,CAAC;EACxBC,IAAI;EACJC,IAAI;EACJC,QAAQ;EACRC,QAAQ;EACRC,WAAWA,CAACJ,IAAI,EAAEC,IAAI,EAAEC,QAAQ,GAAG,KAAK,EAAEC,QAAQ,GAAG,IAAIE,GAAG,CAAC,CAAC,EAAE;IAC5D,IAAI,CAACL,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EAC5B;EACA,IAAIG,MAAMA,CAAA,EAAG;IACT,OAAO,IAAI,CAACL,IAAI,IAAI,IAAI,CAACA,IAAI,CAACK,MAAM;EACxC;EACAC,KAAKA,CAAA,EAAG;IACJ,OAAO,IAAIR,cAAc,CAAC,IAAI,CAACC,IAAI,EAAE,IAAI,CAACC,IAAI,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC;EACjF;EACAK,SAASA,CAACC,KAAK,EAAE;IACb,OAAQ,IAAI,CAACT,IAAI,KAAKS,KAAK,CAACT,IAAI,IAC5B,IAAI,CAACC,IAAI,KAAKQ,KAAK,CAACR,IAAI,IACxB,IAAI,CAACC,QAAQ,KAAKO,KAAK,CAACP,QAAQ,IAChC,IAAI,CAACC,QAAQ,KAAKM,KAAK,CAACN,QAAQ;EACxC;EACAO,QAAQA,CAAA,EAAG;IACP,OAAO,GAAGC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACX,IAAI,CAAC,GAAG,IAAI,CAACC,QAAQ,GAAG,YAAY,GAAG,EAAE,GAAG,IAAI,CAACC,QAAQ,GAAG,eAAeQ,IAAI,CAACC,SAAS,CAAC,IAAI,CAACT,QAAQ,CAAC,EAAE,GAAG,EAAE,EAAE;EACnJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}