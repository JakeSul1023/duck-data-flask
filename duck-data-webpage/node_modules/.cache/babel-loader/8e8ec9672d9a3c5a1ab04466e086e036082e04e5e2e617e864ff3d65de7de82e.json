{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/**\n * Builds a DOM stream from an iterator\n * This stream is currently used in browsers only,\n * but note that Web stream support is present in Node from Node 16\n * https://nodejs.org/api/webstreams.html#webstreams_web_streams_api\n */\nexport function makeStream(source, options) {\n  if (globalThis.loaders.makeNodeStream) {\n    return globalThis.loaders.makeNodeStream(source, options);\n  }\n  // TODO - add AsyncGenerator to parameter types?\n  const iterator = source[Symbol.asyncIterator] ? source[Symbol.asyncIterator]() : source[Symbol.iterator]();\n  return new ReadableStream({\n    // Create a byte stream (enables `Response(stream).arrayBuffer()`)\n    // Only supported on Chrome\n    // See: https://developer.mozilla.org/en-US/docs/Web/API/ReadableByteStreamController\n    // @ts-ignore\n    type: 'bytes',\n    async pull(controller) {\n      try {\n        const {\n          done,\n          value\n        } = await iterator.next();\n        if (done) {\n          controller.close();\n        } else {\n          // TODO - ignores controller.desiredSize\n          // @ts-expect-error Unclear why value is not correctly typed\n          controller.enqueue(new Uint8Array(value));\n        }\n      } catch (error) {\n        controller.error(error);\n      }\n    },\n    async cancel() {\n      await iterator?.return?.();\n    }\n  },\n  // options: QueingStrategy<Uint8Array>\n  {\n    // This is bytes, not chunks\n    highWaterMark: 2 ** 24,\n    ...options\n  });\n}","map":{"version":3,"names":["makeStream","source","options","globalThis","loaders","makeNodeStream","iterator","Symbol","asyncIterator","ReadableStream","type","pull","controller","done","value","next","close","enqueue","Uint8Array","error","cancel","return","highWaterMark"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/core/dist/iterators/make-stream/make-stream.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/**\n * Builds a DOM stream from an iterator\n * This stream is currently used in browsers only,\n * but note that Web stream support is present in Node from Node 16\n * https://nodejs.org/api/webstreams.html#webstreams_web_streams_api\n */\nexport function makeStream(source, options) {\n    if (globalThis.loaders.makeNodeStream) {\n        return globalThis.loaders.makeNodeStream(source, options);\n    }\n    // TODO - add AsyncGenerator to parameter types?\n    const iterator = source[Symbol.asyncIterator]\n        ? source[Symbol.asyncIterator]()\n        : source[Symbol.iterator]();\n    return new ReadableStream({\n        // Create a byte stream (enables `Response(stream).arrayBuffer()`)\n        // Only supported on Chrome\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/ReadableByteStreamController\n        // @ts-ignore\n        type: 'bytes',\n        async pull(controller) {\n            try {\n                const { done, value } = await iterator.next();\n                if (done) {\n                    controller.close();\n                }\n                else {\n                    // TODO - ignores controller.desiredSize\n                    // @ts-expect-error Unclear why value is not correctly typed\n                    controller.enqueue(new Uint8Array(value));\n                }\n            }\n            catch (error) {\n                controller.error(error);\n            }\n        },\n        async cancel() {\n            await iterator?.return?.();\n        }\n    }, \n    // options: QueingStrategy<Uint8Array>\n    {\n        // This is bytes, not chunks\n        highWaterMark: 2 ** 24,\n        ...options\n    });\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,UAAUA,CAACC,MAAM,EAAEC,OAAO,EAAE;EACxC,IAAIC,UAAU,CAACC,OAAO,CAACC,cAAc,EAAE;IACnC,OAAOF,UAAU,CAACC,OAAO,CAACC,cAAc,CAACJ,MAAM,EAAEC,OAAO,CAAC;EAC7D;EACA;EACA,MAAMI,QAAQ,GAAGL,MAAM,CAACM,MAAM,CAACC,aAAa,CAAC,GACvCP,MAAM,CAACM,MAAM,CAACC,aAAa,CAAC,CAAC,CAAC,GAC9BP,MAAM,CAACM,MAAM,CAACD,QAAQ,CAAC,CAAC,CAAC;EAC/B,OAAO,IAAIG,cAAc,CAAC;IACtB;IACA;IACA;IACA;IACAC,IAAI,EAAE,OAAO;IACb,MAAMC,IAAIA,CAACC,UAAU,EAAE;MACnB,IAAI;QACA,MAAM;UAAEC,IAAI;UAAEC;QAAM,CAAC,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAC7C,IAAIF,IAAI,EAAE;UACND,UAAU,CAACI,KAAK,CAAC,CAAC;QACtB,CAAC,MACI;UACD;UACA;UACAJ,UAAU,CAACK,OAAO,CAAC,IAAIC,UAAU,CAACJ,KAAK,CAAC,CAAC;QAC7C;MACJ,CAAC,CACD,OAAOK,KAAK,EAAE;QACVP,UAAU,CAACO,KAAK,CAACA,KAAK,CAAC;MAC3B;IACJ,CAAC;IACD,MAAMC,MAAMA,CAAA,EAAG;MACX,MAAMd,QAAQ,EAAEe,MAAM,GAAG,CAAC;IAC9B;EACJ,CAAC;EACD;EACA;IACI;IACAC,aAAa,EAAE,CAAC,IAAI,EAAE;IACtB,GAAGpB;EACP,CAAC,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}