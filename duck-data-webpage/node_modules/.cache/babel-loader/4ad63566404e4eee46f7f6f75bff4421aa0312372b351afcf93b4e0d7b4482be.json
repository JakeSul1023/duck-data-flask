{"ast":null,"code":"// loaders.gl, MIT license\nimport { XMLLoader } from '@loaders.gl/xml';\n/**\n * Parses a typed data structure from raw XML for `GetCapabilities` response\n * @note Error handlings is fairly weak\n */\nexport function parseWFSCapabilities(text, options) {\n  const parsedXML = XMLLoader.parseTextSync?.(text, {\n    ...options,\n    xml: {\n      ...options?.xml,\n      removeNSPrefix: true,\n      uncapitalizeKeys: true\n    }\n  });\n  const xmlCapabilities = parsedXML.Capabilities || parsedXML;\n  return xmlCapabilities;\n}","map":{"version":3,"names":["XMLLoader","parseWFSCapabilities","text","options","parsedXML","parseTextSync","xml","removeNSPrefix","uncapitalizeKeys","xmlCapabilities","Capabilities"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/wms/dist/lib/parsers/wfs/parse-wfs-capabilities.js"],"sourcesContent":["// loaders.gl, MIT license\nimport { XMLLoader } from '@loaders.gl/xml';\n/**\n * Parses a typed data structure from raw XML for `GetCapabilities` response\n * @note Error handlings is fairly weak\n */\nexport function parseWFSCapabilities(text, options) {\n    const parsedXML = XMLLoader.parseTextSync?.(text, {\n        ...options,\n        xml: {\n            ...options?.xml,\n            removeNSPrefix: true,\n            uncapitalizeKeys: true\n        }\n    });\n    const xmlCapabilities = parsedXML.Capabilities || parsedXML;\n    return xmlCapabilities;\n}\n"],"mappings":"AAAA;AACA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C;AACA;AACA;AACA;AACA,OAAO,SAASC,oBAAoBA,CAACC,IAAI,EAAEC,OAAO,EAAE;EAChD,MAAMC,SAAS,GAAGJ,SAAS,CAACK,aAAa,GAAGH,IAAI,EAAE;IAC9C,GAAGC,OAAO;IACVG,GAAG,EAAE;MACD,GAAGH,OAAO,EAAEG,GAAG;MACfC,cAAc,EAAE,IAAI;MACpBC,gBAAgB,EAAE;IACtB;EACJ,CAAC,CAAC;EACF,MAAMC,eAAe,GAAGL,SAAS,CAACM,YAAY,IAAIN,SAAS;EAC3D,OAAOK,eAAe;AAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}