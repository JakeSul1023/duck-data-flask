{"ast":null,"code":"// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nlet pathPrefix = '';\n/**\n * Set a relative path prefix\n */\nexport function setPathPrefix(prefix) {\n  pathPrefix = prefix;\n}\n/**\n * Loads ImageBitmap asynchronously. Respects setPathPrefix.\n * image.crossOrigin can be set via opts.crossOrigin, default to 'anonymous'\n * @returns a promise tracking the load\n */\nexport async function loadImageBitmap(url, opts) {\n  const image = new Image();\n  image.crossOrigin = opts?.crossOrigin || 'anonymous';\n  image.src = url.startsWith('http') ? url : pathPrefix + url;\n  await image.decode();\n  return opts ? await createImageBitmap(image, opts) : await createImageBitmap(image);\n}\n/**\n * Loads image asynchronously. Respects setPathPrefix.\n * image.crossOrigin can be set via opts.crossOrigin, default to 'anonymous'\n * @returns a promise tracking the load\n * @deprecated Use `loadImageBitmap()` unless you are supporting old versions of Safari.\n */\nexport async function loadImage(url, opts) {\n  return await new Promise((resolve, reject) => {\n    try {\n      const image = new Image();\n      image.onload = () => resolve(image);\n      image.onerror = () => reject(new Error(`Could not load image ${url}.`));\n      image.crossOrigin = opts?.crossOrigin || 'anonymous';\n      image.src = url.startsWith('http') ? url : pathPrefix + url;\n    } catch (error) {\n      reject(error);\n    }\n  });\n}","map":{"version":3,"names":["pathPrefix","setPathPrefix","prefix","loadImageBitmap","url","opts","image","Image","crossOrigin","src","startsWith","decode","createImageBitmap","loadImage","Promise","resolve","reject","onload","onerror","Error","error"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@luma.gl\\engine\\src\\application-utils\\load-file.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nlet pathPrefix = '';\n\n/**\n * Set a relative path prefix\n */\nexport function setPathPrefix(prefix: string) {\n  pathPrefix = prefix;\n}\n\n/**\n * Loads ImageBitmap asynchronously. Respects setPathPrefix.\n * image.crossOrigin can be set via opts.crossOrigin, default to 'anonymous'\n * @returns a promise tracking the load\n */\nexport async function loadImageBitmap(\n  url: string,\n  opts?: {crossOrigin?: string} & ImageBitmapOptions\n): Promise<ImageBitmap> {\n  const image = new Image();\n  image.crossOrigin = opts?.crossOrigin || 'anonymous';\n  image.src = url.startsWith('http') ? url : pathPrefix + url;\n  await image.decode();\n  return opts ? await createImageBitmap(image, opts) : await createImageBitmap(image);\n}\n\n/**\n * Loads image asynchronously. Respects setPathPrefix.\n * image.crossOrigin can be set via opts.crossOrigin, default to 'anonymous'\n * @returns a promise tracking the load\n * @deprecated Use `loadImageBitmap()` unless you are supporting old versions of Safari.\n */\nexport async function loadImage(\n  url: string,\n  opts?: {crossOrigin?: string}\n): Promise<HTMLImageElement> {\n  return await new Promise((resolve, reject) => {\n    try {\n      const image = new Image();\n      image.onload = () => resolve(image);\n      image.onerror = () => reject(new Error(`Could not load image ${url}.`));\n      image.crossOrigin = opts?.crossOrigin || 'anonymous';\n      image.src = url.startsWith('http') ? url : pathPrefix + url;\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n"],"mappings":"AAAA;AACA;AACA;AAEA,IAAIA,UAAU,GAAG,EAAE;AAEnB;;;AAGA,OAAM,SAAUC,aAAaA,CAACC,MAAc;EAC1CF,UAAU,GAAGE,MAAM;AACrB;AAEA;;;;;AAKA,OAAO,eAAeC,eAAeA,CACnCC,GAAW,EACXC,IAAkD;EAElD,MAAMC,KAAK,GAAG,IAAIC,KAAK,EAAE;EACzBD,KAAK,CAACE,WAAW,GAAGH,IAAI,EAAEG,WAAW,IAAI,WAAW;EACpDF,KAAK,CAACG,GAAG,GAAGL,GAAG,CAACM,UAAU,CAAC,MAAM,CAAC,GAAGN,GAAG,GAAGJ,UAAU,GAAGI,GAAG;EAC3D,MAAME,KAAK,CAACK,MAAM,EAAE;EACpB,OAAON,IAAI,GAAG,MAAMO,iBAAiB,CAACN,KAAK,EAAED,IAAI,CAAC,GAAG,MAAMO,iBAAiB,CAACN,KAAK,CAAC;AACrF;AAEA;;;;;;AAMA,OAAO,eAAeO,SAASA,CAC7BT,GAAW,EACXC,IAA6B;EAE7B,OAAO,MAAM,IAAIS,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;IAC3C,IAAI;MACF,MAAMV,KAAK,GAAG,IAAIC,KAAK,EAAE;MACzBD,KAAK,CAACW,MAAM,GAAG,MAAMF,OAAO,CAACT,KAAK,CAAC;MACnCA,KAAK,CAACY,OAAO,GAAG,MAAMF,MAAM,CAAC,IAAIG,KAAK,CAAC,wBAAwBf,GAAG,GAAG,CAAC,CAAC;MACvEE,KAAK,CAACE,WAAW,GAAGH,IAAI,EAAEG,WAAW,IAAI,WAAW;MACpDF,KAAK,CAACG,GAAG,GAAGL,GAAG,CAACM,UAAU,CAAC,MAAM,CAAC,GAAGN,GAAG,GAAGJ,UAAU,GAAGI,GAAG;IAC7D,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdJ,MAAM,CAACI,KAAK,CAAC;IACf;EACF,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}