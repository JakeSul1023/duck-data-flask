{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// This file is derived from the tar-js code base under MIT license\n// See https://github.com/beatgammit/tar-js/blob/master/LICENSE\n/*\n * tar-js\n * MIT (c) 2011 T. Jameson Little\n */\n/**\n * Returns the memory area specified by length\n * @param length\n * @returns {Uint8Array}\n */\nexport function clean(length) {\n  let i;\n  const buffer = new Uint8Array(length);\n  for (i = 0; i < length; i += 1) {\n    buffer[i] = 0;\n  }\n  return buffer;\n}\n/**\n * Converting data to a string\n * @param num\n * @param bytes\n * @param base\n * @returns string\n */\nexport function pad(num, bytes, base) {\n  const numStr = num.toString(base || 8);\n  return '000000000000'.substr(numStr.length + 12 - bytes) + numStr;\n}\n/**\n * Converting input to binary data\n * @param input\n * @param out\n * @param offset\n * @returns {Uint8Array}\n */\nexport function stringToUint8(input, out, offset) {\n  let i;\n  let length;\n  out = out || clean(input.length);\n  offset = offset || 0;\n  for (i = 0, length = input.length; i < length; i += 1) {\n    out[offset] = input.charCodeAt(i);\n    offset += 1;\n  }\n  return out;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}