{"ast":null,"code":"// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/** Decodes a vertex type, returning byte length and flags (integer, signed, normalized) */\nexport function decodeVertexType(type) {\n  const dataType = TYPE_MAP[type];\n  const bytes = getDataTypeBytes(dataType);\n  const normalized = type.includes('norm');\n  const integer = !normalized && !type.startsWith('float');\n  const signed = type.startsWith('s');\n  return {\n    dataType: TYPE_MAP[type],\n    byteLength: bytes,\n    integer,\n    signed,\n    normalized\n  };\n}\nfunction getDataTypeBytes(type) {\n  const bytes = TYPE_SIZES[type];\n  // assert(bytes);\n  return bytes;\n}\nconst TYPE_MAP = {\n  uint8: 'uint8',\n  sint8: 'sint8',\n  unorm8: 'uint8',\n  snorm8: 'sint8',\n  uint16: 'uint16',\n  sint16: 'sint16',\n  unorm16: 'uint16',\n  snorm16: 'sint16',\n  float16: 'float16',\n  float32: 'float32',\n  uint32: 'uint32',\n  sint32: 'sint32'\n};\nconst TYPE_SIZES = {\n  uint8: 1,\n  sint8: 1,\n  uint16: 2,\n  sint16: 2,\n  float16: 2,\n  float32: 4,\n  uint32: 4,\n  sint32: 4\n};\n//# sourceMappingURL=decode-data-type.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}