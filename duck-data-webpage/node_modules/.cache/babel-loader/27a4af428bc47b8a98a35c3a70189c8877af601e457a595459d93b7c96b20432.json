{"ast":null,"code":"// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { GL } from '@luma.gl/constants';\n/** Set a raw uniform (without type conversion and caching) */\n/* eslint-disable max-len */\nexport function setUniform(gl, location, type, value) {\n  const gl2 = gl;\n  // Prepare the value for WebGL setters\n  let uniformValue = value;\n  if (uniformValue === true) {\n    uniformValue = 1;\n  }\n  if (uniformValue === false) {\n    uniformValue = 0;\n  }\n  const arrayValue = typeof uniformValue === 'number' ? [uniformValue] : uniformValue;\n  // prettier-ignore\n  switch (type) {\n    case 35678:\n    case 35680:\n    case 35679:\n    case 35682:\n    case 36289:\n    case 36292:\n    case 36293:\n    case 36298:\n    case 36299:\n    case 36300:\n    case 36303:\n    case 36306:\n    case 36307:\n    case 36308:\n    case 36311:\n      if (typeof value !== 'number') {\n        throw new Error('samplers must be set to integers');\n      }\n      return gl.uniform1i(location, value);\n    case 5126:\n      return gl.uniform1fv(location, arrayValue);\n    case 35664:\n      return gl.uniform2fv(location, arrayValue);\n    case 35665:\n      return gl.uniform3fv(location, arrayValue);\n    case 35666:\n      return gl.uniform4fv(location, arrayValue);\n    case 5124:\n      return gl.uniform1iv(location, arrayValue);\n    case 35667:\n      return gl.uniform2iv(location, arrayValue);\n    case 35668:\n      return gl.uniform3iv(location, arrayValue);\n    case 35669:\n      return gl.uniform4iv(location, arrayValue);\n    case 35670:\n      return gl.uniform1iv(location, arrayValue);\n    case 35671:\n      return gl.uniform2iv(location, arrayValue);\n    case 35672:\n      return gl.uniform3iv(location, arrayValue);\n    case 35673:\n      return gl.uniform4iv(location, arrayValue);\n    // WEBGL2 - unsigned integers\n    case 5125:\n      return gl2.uniform1uiv(location, arrayValue, 1);\n    case 36294:\n      return gl2.uniform2uiv(location, arrayValue, 2);\n    case 36295:\n      return gl2.uniform3uiv(location, arrayValue, 3);\n    case 36296:\n      return gl2.uniform4uiv(location, arrayValue, 4);\n    // WebGL2 - quadratic matrices\n    // false: don't transpose the matrix\n    case 35674:\n      return gl.uniformMatrix2fv(location, false, arrayValue);\n    case 35675:\n      return gl.uniformMatrix3fv(location, false, arrayValue);\n    case 35676:\n      return gl.uniformMatrix4fv(location, false, arrayValue);\n    // WebGL2 - rectangular matrices\n    case 35685:\n      return gl2.uniformMatrix2x3fv(location, false, arrayValue);\n    case 35686:\n      return gl2.uniformMatrix2x4fv(location, false, arrayValue);\n    case 35687:\n      return gl2.uniformMatrix3x2fv(location, false, arrayValue);\n    case 35688:\n      return gl2.uniformMatrix3x4fv(location, false, arrayValue);\n    case 35689:\n      return gl2.uniformMatrix4x2fv(location, false, arrayValue);\n    case 35690:\n      return gl2.uniformMatrix4x3fv(location, false, arrayValue);\n  }\n  throw new Error('Illegal uniform');\n}","map":{"version":3,"names":["GL","setUniform","gl","location","type","value","gl2","uniformValue","arrayValue","Error","uniform1i","uniform1fv","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform2iv","uniform3iv","uniform4iv","uniform1uiv","uniform2uiv","uniform3uiv","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniformMatrix2x3fv","uniformMatrix2x4fv","uniformMatrix3x2fv","uniformMatrix3x4fv","uniformMatrix4x2fv","uniformMatrix4x3fv"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@luma.gl\\webgl\\src\\adapter\\helpers\\set-uniform.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* eslint-disable */\n\n// Uniforms\nimport type {UniformValue} from '@luma.gl/core';\nimport {GL, GLCompositeType, GLSamplerType} from '@luma.gl/constants';\n\n/** Set a raw uniform (without type conversion and caching) */\n/* eslint-disable max-len */\nexport function setUniform(\n  gl: WebGL2RenderingContext,\n  location: WebGLUniformLocation,\n  type: GLCompositeType | GLSamplerType,\n  value: UniformValue\n): void {\n  const gl2 = gl as WebGL2RenderingContext;\n\n  // Prepare the value for WebGL setters\n  let uniformValue = value;\n  if (uniformValue === true) {\n    uniformValue = 1;\n  }\n  if (uniformValue === false) {\n    uniformValue = 0;\n  }\n  const arrayValue = typeof uniformValue === 'number' ? [uniformValue] : uniformValue;\n\n  // prettier-ignore\n  switch (type) {\n    case GL.SAMPLER_2D:\n    case GL.SAMPLER_CUBE:\n    case GL.SAMPLER_3D:\n    case GL.SAMPLER_2D_SHADOW:\n    case GL.SAMPLER_2D_ARRAY:\n    case GL.SAMPLER_2D_ARRAY_SHADOW:\n    case GL.SAMPLER_CUBE_SHADOW:\n    case GL.INT_SAMPLER_2D:\n    case GL.INT_SAMPLER_3D:\n    case GL.INT_SAMPLER_CUBE:\n    case GL.INT_SAMPLER_2D_ARRAY:\n    case GL.UNSIGNED_INT_SAMPLER_2D:\n    case GL.UNSIGNED_INT_SAMPLER_3D:\n    case GL.UNSIGNED_INT_SAMPLER_CUBE:\n    case GL.UNSIGNED_INT_SAMPLER_2D_ARRAY:\n      if (typeof value !== 'number') {\n        throw new Error('samplers must be set to integers');\n      }\n      return gl.uniform1i(location, value);\n\n    case GL.FLOAT: return gl.uniform1fv(location, arrayValue);\n    case GL.FLOAT_VEC2: return gl.uniform2fv(location, arrayValue);\n    case GL.FLOAT_VEC3: return gl.uniform3fv(location, arrayValue);\n    case GL.FLOAT_VEC4: return gl.uniform4fv(location, arrayValue);\n\n    case GL.INT: return gl.uniform1iv(location, arrayValue);\n    case GL.INT_VEC2: return gl.uniform2iv(location, arrayValue);\n    case GL.INT_VEC3: return gl.uniform3iv(location, arrayValue);\n    case GL.INT_VEC4: return gl.uniform4iv(location, arrayValue);\n\n    case GL.BOOL: return gl.uniform1iv(location, arrayValue);\n    case GL.BOOL_VEC2: return gl.uniform2iv(location, arrayValue);\n    case GL.BOOL_VEC3: return gl.uniform3iv(location, arrayValue);\n    case GL.BOOL_VEC4: return gl.uniform4iv(location, arrayValue);\n\n    // WEBGL2 - unsigned integers\n    case GL.UNSIGNED_INT: return gl2.uniform1uiv(location, arrayValue, 1);\n    case GL.UNSIGNED_INT_VEC2: return gl2.uniform2uiv(location, arrayValue, 2);\n    case GL.UNSIGNED_INT_VEC3: return gl2.uniform3uiv(location, arrayValue, 3);\n    case GL.UNSIGNED_INT_VEC4: return gl2.uniform4uiv(location, arrayValue, 4);\n\n    // WebGL2 - quadratic matrices\n    // false: don't transpose the matrix\n    case GL.FLOAT_MAT2: return gl.uniformMatrix2fv(location, false, arrayValue);\n    case GL.FLOAT_MAT3: return gl.uniformMatrix3fv(location, false, arrayValue);\n    case GL.FLOAT_MAT4: return gl.uniformMatrix4fv(location, false, arrayValue);\n\n    // WebGL2 - rectangular matrices\n    case GL.FLOAT_MAT2x3: return gl2.uniformMatrix2x3fv(location, false, arrayValue);\n    case GL.FLOAT_MAT2x4: return gl2.uniformMatrix2x4fv(location, false, arrayValue);\n    case GL.FLOAT_MAT3x2: return gl2.uniformMatrix3x2fv(location, false, arrayValue);\n    case GL.FLOAT_MAT3x4: return gl2.uniformMatrix3x4fv(location, false, arrayValue);\n    case GL.FLOAT_MAT4x2: return gl2.uniformMatrix4x2fv(location, false, arrayValue);\n    case GL.FLOAT_MAT4x3: return gl2.uniformMatrix4x3fv(location, false, arrayValue);\n  }\n\n  throw new Error('Illegal uniform');\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}