{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* eslint-disable camelcase */\n/**\n * Geoparquet JSON schema for geo metadata\n * @see https://github.com/geoarrow/geoarrow/blob/main/metadata.md\n * @see https://github.com/opengeospatial/geoparquet/blob/main/format-specs/geoparquet.md\n */\nexport const GEOPARQUET_METADATA_JSON_SCHEMA = {\n  $schema: 'http://json-schema.org/draft-07/schema#',\n  title: 'GeoParquet',\n  description: 'Parquet metadata included in the geo field.',\n  type: 'object',\n  required: ['version', 'primary_column', 'columns'],\n  properties: {\n    version: {\n      type: 'string',\n      const: '1.0.0-beta.1'\n    },\n    primary_column: {\n      type: 'string',\n      minLength: 1\n    },\n    columns: {\n      type: 'object',\n      minProperties: 1,\n      patternProperties: {\n        '.+': {\n          type: 'object',\n          required: ['encoding', 'geometry_types'],\n          properties: {\n            encoding: {\n              type: 'string',\n              const: 'WKB'\n            },\n            geometry_types: {\n              type: 'array',\n              uniqueItems: true,\n              items: {\n                type: 'string',\n                pattern: '^(GeometryCollection|(Multi)?(Point|LineString|Polygon))( Z)?$'\n              }\n            },\n            crs: {\n              oneOf: [{\n                $ref: 'https://proj.org/schemas/v0.5/projjson.schema.json'\n              }, {\n                type: 'null'\n              }]\n            },\n            edges: {\n              type: 'string',\n              enum: ['planar', 'spherical']\n            },\n            orientation: {\n              type: 'string',\n              const: 'counterclockwise'\n            },\n            bbox: {\n              type: 'array',\n              items: {\n                type: 'number'\n              },\n              oneOf: [{\n                description: '2D bbox consisting of (xmin, ymin, xmax, ymax)',\n                minItems: 4,\n                maxItems: 4\n              }, {\n                description: '3D bbox consisting of (xmin, ymin, zmin, xmax, ymax, zmax)',\n                minItems: 6,\n                maxItems: 6\n              }]\n            },\n            epoch: {\n              type: 'number'\n            }\n          }\n        }\n      },\n      additionalProperties: false\n    }\n  }\n};","map":{"version":3,"names":["GEOPARQUET_METADATA_JSON_SCHEMA","$schema","title","description","type","required","properties","version","const","primary_column","minLength","columns","minProperties","patternProperties","encoding","geometry_types","uniqueItems","items","pattern","crs","oneOf","$ref","edges","enum","orientation","bbox","minItems","maxItems","epoch","additionalProperties"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/gis/dist/lib/geo/geoparquet-metadata-schema.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* eslint-disable camelcase */\n/**\n * Geoparquet JSON schema for geo metadata\n * @see https://github.com/geoarrow/geoarrow/blob/main/metadata.md\n * @see https://github.com/opengeospatial/geoparquet/blob/main/format-specs/geoparquet.md\n */\nexport const GEOPARQUET_METADATA_JSON_SCHEMA = {\n    $schema: 'http://json-schema.org/draft-07/schema#',\n    title: 'GeoParquet',\n    description: 'Parquet metadata included in the geo field.',\n    type: 'object',\n    required: ['version', 'primary_column', 'columns'],\n    properties: {\n        version: { type: 'string', const: '1.0.0-beta.1' },\n        primary_column: { type: 'string', minLength: 1 },\n        columns: {\n            type: 'object',\n            minProperties: 1,\n            patternProperties: {\n                '.+': {\n                    type: 'object',\n                    required: ['encoding', 'geometry_types'],\n                    properties: {\n                        encoding: { type: 'string', const: 'WKB' },\n                        geometry_types: {\n                            type: 'array',\n                            uniqueItems: true,\n                            items: {\n                                type: 'string',\n                                pattern: '^(GeometryCollection|(Multi)?(Point|LineString|Polygon))( Z)?$'\n                            }\n                        },\n                        crs: {\n                            oneOf: [\n                                {\n                                    $ref: 'https://proj.org/schemas/v0.5/projjson.schema.json'\n                                },\n                                { type: 'null' }\n                            ]\n                        },\n                        edges: { type: 'string', enum: ['planar', 'spherical'] },\n                        orientation: { type: 'string', const: 'counterclockwise' },\n                        bbox: {\n                            type: 'array',\n                            items: { type: 'number' },\n                            oneOf: [\n                                {\n                                    description: '2D bbox consisting of (xmin, ymin, xmax, ymax)',\n                                    minItems: 4,\n                                    maxItems: 4\n                                },\n                                {\n                                    description: '3D bbox consisting of (xmin, ymin, zmin, xmax, ymax, zmax)',\n                                    minItems: 6,\n                                    maxItems: 6\n                                }\n                            ]\n                        },\n                        epoch: { type: 'number' }\n                    }\n                }\n            },\n            additionalProperties: false\n        }\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,+BAA+B,GAAG;EAC3CC,OAAO,EAAE,yCAAyC;EAClDC,KAAK,EAAE,YAAY;EACnBC,WAAW,EAAE,6CAA6C;EAC1DC,IAAI,EAAE,QAAQ;EACdC,QAAQ,EAAE,CAAC,SAAS,EAAE,gBAAgB,EAAE,SAAS,CAAC;EAClDC,UAAU,EAAE;IACRC,OAAO,EAAE;MAAEH,IAAI,EAAE,QAAQ;MAAEI,KAAK,EAAE;IAAe,CAAC;IAClDC,cAAc,EAAE;MAAEL,IAAI,EAAE,QAAQ;MAAEM,SAAS,EAAE;IAAE,CAAC;IAChDC,OAAO,EAAE;MACLP,IAAI,EAAE,QAAQ;MACdQ,aAAa,EAAE,CAAC;MAChBC,iBAAiB,EAAE;QACf,IAAI,EAAE;UACFT,IAAI,EAAE,QAAQ;UACdC,QAAQ,EAAE,CAAC,UAAU,EAAE,gBAAgB,CAAC;UACxCC,UAAU,EAAE;YACRQ,QAAQ,EAAE;cAAEV,IAAI,EAAE,QAAQ;cAAEI,KAAK,EAAE;YAAM,CAAC;YAC1CO,cAAc,EAAE;cACZX,IAAI,EAAE,OAAO;cACbY,WAAW,EAAE,IAAI;cACjBC,KAAK,EAAE;gBACHb,IAAI,EAAE,QAAQ;gBACdc,OAAO,EAAE;cACb;YACJ,CAAC;YACDC,GAAG,EAAE;cACDC,KAAK,EAAE,CACH;gBACIC,IAAI,EAAE;cACV,CAAC,EACD;gBAAEjB,IAAI,EAAE;cAAO,CAAC;YAExB,CAAC;YACDkB,KAAK,EAAE;cAAElB,IAAI,EAAE,QAAQ;cAAEmB,IAAI,EAAE,CAAC,QAAQ,EAAE,WAAW;YAAE,CAAC;YACxDC,WAAW,EAAE;cAAEpB,IAAI,EAAE,QAAQ;cAAEI,KAAK,EAAE;YAAmB,CAAC;YAC1DiB,IAAI,EAAE;cACFrB,IAAI,EAAE,OAAO;cACba,KAAK,EAAE;gBAAEb,IAAI,EAAE;cAAS,CAAC;cACzBgB,KAAK,EAAE,CACH;gBACIjB,WAAW,EAAE,gDAAgD;gBAC7DuB,QAAQ,EAAE,CAAC;gBACXC,QAAQ,EAAE;cACd,CAAC,EACD;gBACIxB,WAAW,EAAE,4DAA4D;gBACzEuB,QAAQ,EAAE,CAAC;gBACXC,QAAQ,EAAE;cACd,CAAC;YAET,CAAC;YACDC,KAAK,EAAE;cAAExB,IAAI,EAAE;YAAS;UAC5B;QACJ;MACJ,CAAC;MACDyB,oBAAoB,EAAE;IAC1B;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}