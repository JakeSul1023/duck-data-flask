{"ast":null,"code":"import { TOUCH_ACTION_NONE, TOUCH_ACTION_PAN_X, TOUCH_ACTION_PAN_Y, TOUCH_ACTION_MANIPULATION, TOUCH_ACTION_AUTO } from \"./touchaction-Consts.js\";\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @returns valid touchAction\n */\nexport default function cleanTouchActions(actions) {\n  // none\n  if (actions.includes(TOUCH_ACTION_NONE)) {\n    return TOUCH_ACTION_NONE;\n  }\n  const hasPanX = actions.includes(TOUCH_ACTION_PAN_X);\n  const hasPanY = actions.includes(TOUCH_ACTION_PAN_Y);\n  // if both pan-x and pan-y are set (different recognizers\n  // for different directions, e.g. horizontal pan but vertical swipe?)\n  // we need none (as otherwise with pan-x pan-y combined none of these\n  // recognizers will work, since the browser would handle all panning\n  if (hasPanX && hasPanY) {\n    return TOUCH_ACTION_NONE;\n  }\n  // pan-x OR pan-y\n  if (hasPanX || hasPanY) {\n    return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n  }\n  // manipulation\n  if (actions.includes(TOUCH_ACTION_MANIPULATION)) {\n    return TOUCH_ACTION_MANIPULATION;\n  }\n  return TOUCH_ACTION_AUTO;\n}\n//# sourceMappingURL=clean-touch-actions.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}