{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { isBrowser } from \"../env-utils/globals.js\";\nconst NOT_IMPLEMENTED = new Error('Not implemented');\n/** This class is a facade that gets replaced with an actual NodeFile instance  */\nexport class NodeFileFacade {\n  handle;\n  size = 0;\n  bigsize = 0n;\n  url = '';\n  constructor(url, flags, mode) {\n    // Return the actual implementation instance\n    if (globalThis.loaders?.NodeFile) {\n      return new globalThis.loaders.NodeFile(url, flags, mode);\n    }\n    if (isBrowser) {\n      throw new Error('Can\\'t instantiate NodeFile in browser.');\n    }\n    throw new Error('Can\\'t instantiate NodeFile. Make sure to import @loaders.gl/polyfills first.');\n  }\n  /** Read data */\n  async read(start, length) {\n    throw NOT_IMPLEMENTED;\n  }\n  /** Write to file. The number of bytes written will be returned */\n  async write(arrayBuffer, offset, length) {\n    throw NOT_IMPLEMENTED;\n  }\n  /** Get information about file */\n  async stat() {\n    throw NOT_IMPLEMENTED;\n  }\n  /** Truncates the file descriptor. Only available on NodeFile. */\n  async truncate(length) {\n    throw NOT_IMPLEMENTED;\n  }\n  /** Append data to a file. Only available on NodeFile. */\n  async append(data) {\n    throw NOT_IMPLEMENTED;\n  }\n  /** Close the file */\n  async close() {}\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}