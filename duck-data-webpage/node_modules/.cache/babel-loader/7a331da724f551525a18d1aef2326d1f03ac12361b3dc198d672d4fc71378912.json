{"ast":null,"code":"import { worldToLngLat } from \"./web-mercator-utils.js\";\nimport { mod, log2 } from \"./math-utils.js\";\n// defined by mapbox-gl\nconst TILE_SIZE = 512;\n/**\n * Apply mathematical constraints to viewport props\n * @param props\n */\n// eslint-disable-next-line complexity\nexport function normalizeViewportProps(props) {\n  const {\n    width,\n    height,\n    pitch = 0\n  } = props;\n  let {\n    longitude,\n    latitude,\n    zoom,\n    bearing = 0\n  } = props;\n  // Normalize degrees\n  if (longitude < -180 || longitude > 180) {\n    longitude = mod(longitude + 180, 360) - 180;\n  }\n  if (bearing < -180 || bearing > 180) {\n    bearing = mod(bearing + 180, 360) - 180;\n  }\n  // Constrain zoom and shift center at low zoom levels\n  const minZoom = log2(height / TILE_SIZE);\n  if (zoom <= minZoom) {\n    zoom = minZoom;\n    latitude = 0;\n  } else {\n    // Eliminate white space above and below the map\n    const halfHeightPixels = height / 2 / Math.pow(2, zoom);\n    const minLatitude = worldToLngLat([0, halfHeightPixels])[1];\n    if (latitude < minLatitude) {\n      latitude = minLatitude;\n    } else {\n      const maxLatitude = worldToLngLat([0, TILE_SIZE - halfHeightPixels])[1];\n      if (latitude > maxLatitude) {\n        latitude = maxLatitude;\n      }\n    }\n  }\n  return {\n    width,\n    height,\n    longitude,\n    latitude,\n    zoom,\n    pitch,\n    bearing\n  };\n}","map":{"version":3,"names":["worldToLngLat","mod","log2","TILE_SIZE","normalizeViewportProps","props","width","height","pitch","longitude","latitude","zoom","bearing","minZoom","halfHeightPixels","Math","pow","minLatitude","maxLatitude"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@math.gl\\web-mercator\\src\\normalize-viewport-props.ts"],"sourcesContent":["import {worldToLngLat} from './web-mercator-utils';\nimport {mod, log2} from './math-utils';\n\n// defined by mapbox-gl\nconst TILE_SIZE = 512;\n\n/** Description of viewport */\nexport type ViewportProps = {\n  width: number;\n  height: number;\n  longitude: number;\n  latitude: number;\n  zoom: number;\n  pitch?: number;\n  bearing?: number;\n};\n\n/**\n * Apply mathematical constraints to viewport props\n * @param props\n */\n// eslint-disable-next-line complexity\nexport function normalizeViewportProps(props: ViewportProps): ViewportProps {\n  const {width, height, pitch = 0} = props;\n  let {longitude, latitude, zoom, bearing = 0} = props;\n\n  // Normalize degrees\n  if (longitude < -180 || longitude > 180) {\n    longitude = mod(longitude + 180, 360) - 180;\n  }\n  if (bearing < -180 || bearing > 180) {\n    bearing = mod(bearing + 180, 360) - 180;\n  }\n\n  // Constrain zoom and shift center at low zoom levels\n  const minZoom = log2(height / TILE_SIZE);\n  if (zoom <= minZoom) {\n    zoom = minZoom;\n    latitude = 0;\n  } else {\n    // Eliminate white space above and below the map\n    const halfHeightPixels = height / 2 / Math.pow(2, zoom);\n    const minLatitude = worldToLngLat([0, halfHeightPixels])[1];\n    if (latitude < minLatitude) {\n      latitude = minLatitude;\n    } else {\n      const maxLatitude = worldToLngLat([0, TILE_SIZE - halfHeightPixels])[1];\n      if (latitude > maxLatitude) {\n        latitude = maxLatitude;\n      }\n    }\n  }\n\n  return {width, height, longitude, latitude, zoom, pitch, bearing};\n}\n"],"mappings":"AAAA,SAAQA,aAAa,QAAC;AACtB,SAAQC,GAAG,EAAEC,IAAI,QAAC;AAElB;AACA,MAAMC,SAAS,GAAG,GAAG;AAarB;;;;AAIA;AACA,OAAM,SAAUC,sBAAsBA,CAACC,KAAoB;EACzD,MAAM;IAACC,KAAK;IAAEC,MAAM;IAAEC,KAAK,GAAG;EAAC,CAAC,GAAGH,KAAK;EACxC,IAAI;IAACI,SAAS;IAAEC,QAAQ;IAAEC,IAAI;IAAEC,OAAO,GAAG;EAAC,CAAC,GAAGP,KAAK;EAEpD;EACA,IAAII,SAAS,GAAG,CAAC,GAAG,IAAIA,SAAS,GAAG,GAAG,EAAE;IACvCA,SAAS,GAAGR,GAAG,CAACQ,SAAS,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG;EAC7C;EACA,IAAIG,OAAO,GAAG,CAAC,GAAG,IAAIA,OAAO,GAAG,GAAG,EAAE;IACnCA,OAAO,GAAGX,GAAG,CAACW,OAAO,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG;EACzC;EAEA;EACA,MAAMC,OAAO,GAAGX,IAAI,CAACK,MAAM,GAAGJ,SAAS,CAAC;EACxC,IAAIQ,IAAI,IAAIE,OAAO,EAAE;IACnBF,IAAI,GAAGE,OAAO;IACdH,QAAQ,GAAG,CAAC;EACd,CAAC,MAAM;IACL;IACA,MAAMI,gBAAgB,GAAGP,MAAM,GAAG,CAAC,GAAGQ,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEL,IAAI,CAAC;IACvD,MAAMM,WAAW,GAAGjB,aAAa,CAAC,CAAC,CAAC,EAAEc,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3D,IAAIJ,QAAQ,GAAGO,WAAW,EAAE;MAC1BP,QAAQ,GAAGO,WAAW;IACxB,CAAC,MAAM;MACL,MAAMC,WAAW,GAAGlB,aAAa,CAAC,CAAC,CAAC,EAAEG,SAAS,GAAGW,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;MACvE,IAAIJ,QAAQ,GAAGQ,WAAW,EAAE;QAC1BR,QAAQ,GAAGQ,WAAW;MACxB;IACF;EACF;EAEA,OAAO;IAACZ,KAAK;IAAEC,MAAM;IAAEE,SAAS;IAAEC,QAAQ;IAAEC,IAAI;IAAEH,KAAK;IAAEI;EAAO,CAAC;AACnE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}