{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport View from \"./view.js\";\nimport FirstPersonViewport from \"../viewports/first-person-viewport.js\";\nimport FirstPersonController from \"../controllers/first-person-controller.js\";\nclass FirstPersonView extends View {\n  constructor(props = {}) {\n    super(props);\n  }\n  getViewportType() {\n    return FirstPersonViewport;\n  }\n  get ControllerType() {\n    return FirstPersonController;\n  }\n}\nFirstPersonView.displayName = 'FirstPersonView';\nexport default FirstPersonView;","map":{"version":3,"names":["View","FirstPersonViewport","FirstPersonController","FirstPersonView","constructor","props","getViewportType","ControllerType","displayName"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\core\\src\\views\\first-person-view.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport View, {CommonViewState, CommonViewProps} from './view';\nimport FirstPersonViewport from '../viewports/first-person-viewport';\nimport FirstPersonController from '../controllers/first-person-controller';\n\nexport type FirstPersonViewState = {\n  /** Longitude of the camera, in the geospatial case. */\n  longitude?: number;\n  /** Latitude of the camera, in the geospatial case. */\n  latitude?: number;\n  /** Meter offsets of the camera from the lng-lat anchor point. Default `[0, 0, 0]`. */\n  position?: [number, number, number];\n  /** Bearing (heading) of the camera in degrees. Default `0` (north). */\n  bearing?: number;\n  /** Pitch (tilt) of the camera in degrees. Default `0` (horizontal). */\n  pitch?: number;\n  /** Min pitch angle. Default `-90` (up). */\n  minPitch?: number;\n  /** Max pitch angle. Default `90` (down). */\n  maxPitch?: number;\n  /** Transform applied to the camera position and direction */\n  modelMatrix?: number[] | null;\n} & CommonViewState;\n\nexport type FirstPersonViewProps = {\n  /** Custom projection matrix */\n  projectionMatrix?: number[];\n  /** Field of view covered by camera, in degrees. Default `75`. */\n  fovy?: number;\n  /** Distance of near clipping plane. Default `0.1`. */\n  near?: number;\n  /** Distance of far clipping plane. Default `1000`. */\n  far?: number;\n  /** Modifier of viewport scale. Corresponds to the number of pixels per meter. Default `1`. */\n  focalDistance?: number;\n} & CommonViewProps<FirstPersonViewState>;\n\nexport default class FirstPersonView extends View<FirstPersonViewState, FirstPersonViewProps> {\n  static displayName = 'FirstPersonView';\n\n  constructor(props: FirstPersonViewProps = {}) {\n    super(props);\n  }\n\n  getViewportType() {\n    return FirstPersonViewport;\n  }\n\n  get ControllerType() {\n    return FirstPersonController;\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AAEA,OAAOA,IAAwC;AAC/C,OAAOC,mBAAmB;AAC1B,OAAOC,qBAAqB;AAkC5B,MAAqBC,eAAgB,SAAQH,IAAgD;EAG3FI,YAAYC,KAAA,GAA8B,EAAE;IAC1C,KAAK,CAACA,KAAK,CAAC;EACd;EAEAC,eAAeA,CAAA;IACb,OAAOL,mBAAmB;EAC5B;EAEA,IAAIM,cAAcA,CAAA;IAChB,OAAOL,qBAAqB;EAC9B;;AAZOC,eAAA,CAAAK,WAAW,GAAG,iBAAiB;eADnBL,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}