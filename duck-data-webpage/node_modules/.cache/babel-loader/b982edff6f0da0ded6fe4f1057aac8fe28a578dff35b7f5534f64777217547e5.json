{"ast":null,"code":"// mjolnir.js\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { Input } from \"./input.js\";\nimport { userAgent } from \"../utils/globals.js\";\nconst firefox = userAgent.indexOf('firefox') !== -1;\n// Constants for normalizing input delta\nconst WHEEL_DELTA_MAGIC_SCALER = 4.000244140625;\nconst WHEEL_DELTA_PER_LINE = 40;\n// Slow down zoom if shift key is held for more precise zooming\nconst SHIFT_MULTIPLIER = 0.25;\nexport class WheelInput extends Input {\n  constructor(element, callback, options) {\n    super(element, callback, {\n      enable: true,\n      ...options\n    });\n    /* eslint-disable complexity, max-statements */\n    this.handleEvent = event => {\n      if (!this.options.enable) {\n        return;\n      }\n      let value = event.deltaY;\n      if (globalThis.WheelEvent) {\n        // Firefox doubles the values on retina screens...\n        if (firefox && event.deltaMode === globalThis.WheelEvent.DOM_DELTA_PIXEL) {\n          value /= globalThis.devicePixelRatio;\n        }\n        if (event.deltaMode === globalThis.WheelEvent.DOM_DELTA_LINE) {\n          value *= WHEEL_DELTA_PER_LINE;\n        }\n      }\n      if (value !== 0 && value % WHEEL_DELTA_MAGIC_SCALER === 0) {\n        // This one is definitely a mouse wheel event.\n        // Normalize this value to match trackpad.\n        value = Math.floor(value / WHEEL_DELTA_MAGIC_SCALER);\n      }\n      if (event.shiftKey && value) {\n        value = value * SHIFT_MULTIPLIER;\n      }\n      this.callback({\n        type: 'wheel',\n        center: {\n          x: event.clientX,\n          y: event.clientY\n        },\n        delta: -value,\n        srcEvent: event,\n        pointerType: 'mouse',\n        target: event.target\n      });\n    };\n    element.addEventListener('wheel', this.handleEvent, {\n      passive: false\n    });\n  }\n  destroy() {\n    this.element.removeEventListener('wheel', this.handleEvent);\n  }\n  /**\n   * Enable this input (begin processing events)\n   * if the specified event type is among those handled by this input.\n   */\n  enableEventType(eventType, enabled) {\n    if (eventType === 'wheel') {\n      this.options.enable = enabled;\n    }\n  }\n}","map":{"version":3,"names":["Input","userAgent","firefox","indexOf","WHEEL_DELTA_MAGIC_SCALER","WHEEL_DELTA_PER_LINE","SHIFT_MULTIPLIER","WheelInput","constructor","element","callback","options","enable","handleEvent","event","value","deltaY","globalThis","WheelEvent","deltaMode","DOM_DELTA_PIXEL","devicePixelRatio","DOM_DELTA_LINE","Math","floor","shiftKey","type","center","x","clientX","y","clientY","delta","srcEvent","pointerType","target","addEventListener","passive","destroy","removeEventListener","enableEventType","eventType","enabled"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\mjolnir.js\\src\\inputs\\wheel-input.ts"],"sourcesContent":["// mjolnir.js\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {MjolnirWheelEventRaw} from '../types';\nimport {Input, InputOptions} from './input';\n\nimport {userAgent} from '../utils/globals';\n\nconst firefox = userAgent.indexOf('firefox') !== -1;\n\n// Constants for normalizing input delta\nconst WHEEL_DELTA_MAGIC_SCALER = 4.000244140625;\nconst WHEEL_DELTA_PER_LINE = 40;\n// Slow down zoom if shift key is held for more precise zooming\nconst SHIFT_MULTIPLIER = 0.25;\n\nexport class WheelInput extends Input<MjolnirWheelEventRaw, Required<InputOptions>> {\n  constructor(\n    element: HTMLElement,\n    callback: (event: MjolnirWheelEventRaw) => void,\n    options: InputOptions\n  ) {\n    super(element, callback, {enable: true, ...options});\n\n    element.addEventListener('wheel', this.handleEvent, {passive: false});\n  }\n\n  destroy() {\n    this.element.removeEventListener('wheel', this.handleEvent);\n  }\n\n  /**\n   * Enable this input (begin processing events)\n   * if the specified event type is among those handled by this input.\n   */\n  enableEventType(eventType: string, enabled: boolean) {\n    if (eventType === 'wheel') {\n      this.options.enable = enabled;\n    }\n  }\n\n  /* eslint-disable complexity, max-statements */\n  handleEvent = (event: WheelEvent) => {\n    if (!this.options.enable) {\n      return;\n    }\n\n    let value = event.deltaY;\n    if (globalThis.WheelEvent) {\n      // Firefox doubles the values on retina screens...\n      if (firefox && event.deltaMode === globalThis.WheelEvent.DOM_DELTA_PIXEL) {\n        value /= globalThis.devicePixelRatio;\n      }\n      if (event.deltaMode === globalThis.WheelEvent.DOM_DELTA_LINE) {\n        value *= WHEEL_DELTA_PER_LINE;\n      }\n    }\n\n    if (value !== 0 && value % WHEEL_DELTA_MAGIC_SCALER === 0) {\n      // This one is definitely a mouse wheel event.\n      // Normalize this value to match trackpad.\n      value = Math.floor(value / WHEEL_DELTA_MAGIC_SCALER);\n    }\n\n    if (event.shiftKey && value) {\n      value = value * SHIFT_MULTIPLIER;\n    }\n\n    this.callback({\n      type: 'wheel',\n      center: {\n        x: event.clientX,\n        y: event.clientY\n      },\n      delta: -value,\n      srcEvent: event,\n      pointerType: 'mouse',\n      target: event.target as HTMLElement\n    });\n  };\n}\n"],"mappings":"AAAA;AACA;AACA;AAGA,SAAQA,KAAK,QAAe;AAE5B,SAAQC,SAAS,QAAC;AAElB,MAAMC,OAAO,GAAGD,SAAS,CAACE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAEnD;AACA,MAAMC,wBAAwB,GAAG,cAAc;AAC/C,MAAMC,oBAAoB,GAAG,EAAE;AAC/B;AACA,MAAMC,gBAAgB,GAAG,IAAI;AAE7B,OAAM,MAAOC,UAAW,SAAQP,KAAmD;EACjFQ,YACEC,OAAoB,EACpBC,QAA+C,EAC/CC,OAAqB;IAErB,KAAK,CAACF,OAAO,EAAEC,QAAQ,EAAE;MAACE,MAAM,EAAE,IAAI;MAAE,GAAGD;IAAO,CAAC,CAAC;IAmBtD;IACA,KAAAE,WAAW,GAAIC,KAAiB,IAAI;MAClC,IAAI,CAAC,IAAI,CAACH,OAAO,CAACC,MAAM,EAAE;QACxB;MACF;MAEA,IAAIG,KAAK,GAAGD,KAAK,CAACE,MAAM;MACxB,IAAIC,UAAU,CAACC,UAAU,EAAE;QACzB;QACA,IAAIhB,OAAO,IAAIY,KAAK,CAACK,SAAS,KAAKF,UAAU,CAACC,UAAU,CAACE,eAAe,EAAE;UACxEL,KAAK,IAAIE,UAAU,CAACI,gBAAgB;QACtC;QACA,IAAIP,KAAK,CAACK,SAAS,KAAKF,UAAU,CAACC,UAAU,CAACI,cAAc,EAAE;UAC5DP,KAAK,IAAIV,oBAAoB;QAC/B;MACF;MAEA,IAAIU,KAAK,KAAK,CAAC,IAAIA,KAAK,GAAGX,wBAAwB,KAAK,CAAC,EAAE;QACzD;QACA;QACAW,KAAK,GAAGQ,IAAI,CAACC,KAAK,CAACT,KAAK,GAAGX,wBAAwB,CAAC;MACtD;MAEA,IAAIU,KAAK,CAACW,QAAQ,IAAIV,KAAK,EAAE;QAC3BA,KAAK,GAAGA,KAAK,GAAGT,gBAAgB;MAClC;MAEA,IAAI,CAACI,QAAQ,CAAC;QACZgB,IAAI,EAAE,OAAO;QACbC,MAAM,EAAE;UACNC,CAAC,EAAEd,KAAK,CAACe,OAAO;UAChBC,CAAC,EAAEhB,KAAK,CAACiB;SACV;QACDC,KAAK,EAAE,CAACjB,KAAK;QACbkB,QAAQ,EAAEnB,KAAK;QACfoB,WAAW,EAAE,OAAO;QACpBC,MAAM,EAAErB,KAAK,CAACqB;OACf,CAAC;IACJ,CAAC;IAvDC1B,OAAO,CAAC2B,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACvB,WAAW,EAAE;MAACwB,OAAO,EAAE;IAAK,CAAC,CAAC;EACvE;EAEAC,OAAOA,CAAA;IACL,IAAI,CAAC7B,OAAO,CAAC8B,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC1B,WAAW,CAAC;EAC7D;EAEA;;;;EAIA2B,eAAeA,CAACC,SAAiB,EAAEC,OAAgB;IACjD,IAAID,SAAS,KAAK,OAAO,EAAE;MACzB,IAAI,CAAC9B,OAAO,CAACC,MAAM,GAAG8B,OAAO;IAC/B;EACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}