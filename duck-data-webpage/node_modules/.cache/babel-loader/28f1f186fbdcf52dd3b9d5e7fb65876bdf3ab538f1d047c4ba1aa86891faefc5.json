{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst isObject = value => value && typeof value === 'object';\n// Loads a deep structure of urls (objects and arrays of urls)\n// Returns an object with six key-value pairs containing the images (or image mip arrays)\n// for each cube face\nexport async function asyncDeepMap(tree, func, options = {}) {\n  return await mapSubtree(tree, func, options);\n}\nexport async function mapSubtree(object, func, options) {\n  if (Array.isArray(object)) {\n    return await mapArray(object, func, options);\n  }\n  if (isObject(object)) {\n    return await mapObject(object, func, options);\n  }\n  // TODO - ignore non-urls, non-arraybuffers?\n  const url = object;\n  return await func(url, options);\n}\n// HELPERS\nasync function mapObject(object, func, options) {\n  const promises = [];\n  const values = {};\n  for (const key in object) {\n    const url = object[key];\n    const promise = mapSubtree(url, func, options).then(value => {\n      values[key] = value;\n    });\n    promises.push(promise);\n  }\n  await Promise.all(promises);\n  return values;\n}\nasync function mapArray(urlArray, func, options = {}) {\n  const promises = urlArray.map(url => mapSubtree(url, func, options));\n  return await Promise.all(promises);\n}","map":{"version":3,"names":["isObject","value","asyncDeepMap","tree","func","options","mapSubtree","object","Array","isArray","mapArray","mapObject","url","promises","values","key","promise","then","push","Promise","all","urlArray","map"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/textures/dist/lib/texture-api/async-deep-map.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst isObject = (value) => value && typeof value === 'object';\n// Loads a deep structure of urls (objects and arrays of urls)\n// Returns an object with six key-value pairs containing the images (or image mip arrays)\n// for each cube face\nexport async function asyncDeepMap(tree, func, options = {}) {\n    return await mapSubtree(tree, func, options);\n}\nexport async function mapSubtree(object, func, options) {\n    if (Array.isArray(object)) {\n        return await mapArray(object, func, options);\n    }\n    if (isObject(object)) {\n        return await mapObject(object, func, options);\n    }\n    // TODO - ignore non-urls, non-arraybuffers?\n    const url = object;\n    return await func(url, options);\n}\n// HELPERS\nasync function mapObject(object, func, options) {\n    const promises = [];\n    const values = {};\n    for (const key in object) {\n        const url = object[key];\n        const promise = mapSubtree(url, func, options).then((value) => {\n            values[key] = value;\n        });\n        promises.push(promise);\n    }\n    await Promise.all(promises);\n    return values;\n}\nasync function mapArray(urlArray, func, options = {}) {\n    const promises = urlArray.map((url) => mapSubtree(url, func, options));\n    return await Promise.all(promises);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,MAAMA,QAAQ,GAAIC,KAAK,IAAKA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ;AAC9D;AACA;AACA;AACA,OAAO,eAAeC,YAAYA,CAACC,IAAI,EAAEC,IAAI,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EACzD,OAAO,MAAMC,UAAU,CAACH,IAAI,EAAEC,IAAI,EAAEC,OAAO,CAAC;AAChD;AACA,OAAO,eAAeC,UAAUA,CAACC,MAAM,EAAEH,IAAI,EAAEC,OAAO,EAAE;EACpD,IAAIG,KAAK,CAACC,OAAO,CAACF,MAAM,CAAC,EAAE;IACvB,OAAO,MAAMG,QAAQ,CAACH,MAAM,EAAEH,IAAI,EAAEC,OAAO,CAAC;EAChD;EACA,IAAIL,QAAQ,CAACO,MAAM,CAAC,EAAE;IAClB,OAAO,MAAMI,SAAS,CAACJ,MAAM,EAAEH,IAAI,EAAEC,OAAO,CAAC;EACjD;EACA;EACA,MAAMO,GAAG,GAAGL,MAAM;EAClB,OAAO,MAAMH,IAAI,CAACQ,GAAG,EAAEP,OAAO,CAAC;AACnC;AACA;AACA,eAAeM,SAASA,CAACJ,MAAM,EAAEH,IAAI,EAAEC,OAAO,EAAE;EAC5C,MAAMQ,QAAQ,GAAG,EAAE;EACnB,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjB,KAAK,MAAMC,GAAG,IAAIR,MAAM,EAAE;IACtB,MAAMK,GAAG,GAAGL,MAAM,CAACQ,GAAG,CAAC;IACvB,MAAMC,OAAO,GAAGV,UAAU,CAACM,GAAG,EAAER,IAAI,EAAEC,OAAO,CAAC,CAACY,IAAI,CAAEhB,KAAK,IAAK;MAC3Da,MAAM,CAACC,GAAG,CAAC,GAAGd,KAAK;IACvB,CAAC,CAAC;IACFY,QAAQ,CAACK,IAAI,CAACF,OAAO,CAAC;EAC1B;EACA,MAAMG,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;EAC3B,OAAOC,MAAM;AACjB;AACA,eAAeJ,QAAQA,CAACW,QAAQ,EAAEjB,IAAI,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EAClD,MAAMQ,QAAQ,GAAGQ,QAAQ,CAACC,GAAG,CAAEV,GAAG,IAAKN,UAAU,CAACM,GAAG,EAAER,IAAI,EAAEC,OAAO,CAAC,CAAC;EACtE,OAAO,MAAMc,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}