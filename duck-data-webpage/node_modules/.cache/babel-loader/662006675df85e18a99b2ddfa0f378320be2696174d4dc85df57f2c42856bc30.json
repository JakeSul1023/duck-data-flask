{"ast":null,"code":"const VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\n/**\n * get the prefixed property\n * @returns prefixed property name\n */\nexport function prefixed(obj, property) {\n  const camelProp = property[0].toUpperCase() + property.slice(1);\n  for (const prefix of VENDOR_PREFIXES) {\n    const prop = prefix ? prefix + camelProp : property;\n    if (prop in obj) {\n      return prop;\n    }\n  }\n  return undefined;\n}","map":{"version":3,"names":["VENDOR_PREFIXES","prefixed","obj","property","camelProp","toUpperCase","slice","prefix","prop","undefined"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\mjolnir.js\\src\\hammerjs\\utils\\prefixed.ts"],"sourcesContent":["const VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\n\n/**\n * get the prefixed property\n * @returns prefixed property name\n */\nexport function prefixed(obj: Record<string, any>, property: string): string | undefined {\n  const camelProp = property[0].toUpperCase() + property.slice(1);\n\n  for (const prefix of VENDOR_PREFIXES) {\n    const prop = prefix ? prefix + camelProp : property;\n\n    if (prop in obj) {\n      return prop;\n    }\n  }\n  return undefined;\n}\n"],"mappings":"AAAA,MAAMA,eAAe,GAAG,CAAC,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC;AAE9D;;;;AAIA,OAAM,SAAUC,QAAQA,CAACC,GAAwB,EAAEC,QAAgB;EACjE,MAAMC,SAAS,GAAGD,QAAQ,CAAC,CAAC,CAAC,CAACE,WAAW,EAAE,GAAGF,QAAQ,CAACG,KAAK,CAAC,CAAC,CAAC;EAE/D,KAAK,MAAMC,MAAM,IAAIP,eAAe,EAAE;IACpC,MAAMQ,IAAI,GAAGD,MAAM,GAAGA,MAAM,GAAGH,SAAS,GAAGD,QAAQ;IAEnD,IAAIK,IAAI,IAAIN,GAAG,EAAE;MACf,OAAOM,IAAI;IACb;EACF;EACA,OAAOC,SAAS;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}