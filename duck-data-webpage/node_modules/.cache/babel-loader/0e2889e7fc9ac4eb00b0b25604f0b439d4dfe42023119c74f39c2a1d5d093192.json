{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { getOSMTileIndices } from \"./tile-2d-traversal.js\";\nconst TILE_SIZE = 512;\nconst DEFAULT_EXTENT = [-Infinity, -Infinity, Infinity, Infinity];\nexport const urlType = {\n  type: 'object',\n  value: null,\n  validate: (value, propType) => propType.optional && value === null || typeof value === 'string' || Array.isArray(value) && value.every(url => typeof url === 'string'),\n  equal: (value1, value2) => {\n    if (value1 === value2) {\n      return true;\n    }\n    if (!Array.isArray(value1) || !Array.isArray(value2)) {\n      return false;\n    }\n    const len = value1.length;\n    if (len !== value2.length) {\n      return false;\n    }\n    for (let i = 0; i < len; i++) {\n      if (value1[i] !== value2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\nfunction transformBox(bbox, modelMatrix) {\n  const transformedCoords = [\n  // top-left\n  modelMatrix.transformAsPoint([bbox[0], bbox[1]]),\n  // top-right\n  modelMatrix.transformAsPoint([bbox[2], bbox[1]]),\n  // bottom-left\n  modelMatrix.transformAsPoint([bbox[0], bbox[3]]),\n  // bottom-right\n  modelMatrix.transformAsPoint([bbox[2], bbox[3]])];\n  const transformedBox = [\n  // Minimum x coord\n  Math.min(...transformedCoords.map(i => i[0])),\n  // Minimum y coord\n  Math.min(...transformedCoords.map(i => i[1])),\n  // Max x coord\n  Math.max(...transformedCoords.map(i => i[0])),\n  // Max y coord\n  Math.max(...transformedCoords.map(i => i[1]))];\n  return transformedBox;\n}\nfunction stringHash(s) {\n  return Math.abs(s.split('').reduce((a, b) => (a << 5) - a + b.charCodeAt(0) | 0, 0));\n}\nexport function getURLFromTemplate(template, tile) {\n  if (!template || !template.length) {\n    return null;\n  }\n  const {\n    index,\n    id\n  } = tile;\n  if (Array.isArray(template)) {\n    const i = stringHash(id) % template.length;\n    template = template[i];\n  }\n  let url = template;\n  for (const key of Object.keys(index)) {\n    const regex = new RegExp(`{${key}}`, 'g');\n    url = url.replace(regex, String(index[key]));\n  }\n  // Back-compatible support for {-y}\n  if (Number.isInteger(index.y) && Number.isInteger(index.z)) {\n    url = url.replace(/\\{-y\\}/g, String(Math.pow(2, index.z) - index.y - 1));\n  }\n  return url;\n}\n/**\n * gets the bounding box of a viewport\n */\nfunction getBoundingBox(viewport, zRange, extent) {\n  let bounds;\n  if (zRange && zRange.length === 2) {\n    const [minZ, maxZ] = zRange;\n    const bounds0 = viewport.getBounds({\n      z: minZ\n    });\n    const bounds1 = viewport.getBounds({\n      z: maxZ\n    });\n    bounds = [Math.min(bounds0[0], bounds1[0]), Math.min(bounds0[1], bounds1[1]), Math.max(bounds0[2], bounds1[2]), Math.max(bounds0[3], bounds1[3])];\n  } else {\n    bounds = viewport.getBounds();\n  }\n  if (!viewport.isGeospatial) {\n    return [\n    // Top corner should not be more then bottom corner in either direction\n    Math.max(Math.min(bounds[0], extent[2]), extent[0]), Math.max(Math.min(bounds[1], extent[3]), extent[1]),\n    // Bottom corner should not be less then top corner in either direction\n    Math.min(Math.max(bounds[2], extent[0]), extent[2]), Math.min(Math.max(bounds[3], extent[1]), extent[3])];\n  }\n  return [Math.max(bounds[0], extent[0]), Math.max(bounds[1], extent[1]), Math.min(bounds[2], extent[2]), Math.min(bounds[3], extent[3])];\n}\n/** Get culling bounds in world space */\nexport function getCullBounds({\n  viewport,\n  z,\n  cullRect\n}) {\n  const subViewports = viewport.subViewports || [viewport];\n  return subViewports.map(v => getCullBoundsInViewport(v, z || 0, cullRect));\n}\nfunction getCullBoundsInViewport(/** Current viewport */\nviewport, /** At altitude */\nz, /** Culling rectangle in screen space */\ncullRect) {\n  if (!Array.isArray(z)) {\n    const x = cullRect.x - viewport.x;\n    const y = cullRect.y - viewport.y;\n    const {\n      width,\n      height\n    } = cullRect;\n    const unprojectOption = {\n      targetZ: z\n    };\n    const topLeft = viewport.unproject([x, y], unprojectOption);\n    const topRight = viewport.unproject([x + width, y], unprojectOption);\n    const bottomLeft = viewport.unproject([x, y + height], unprojectOption);\n    const bottomRight = viewport.unproject([x + width, y + height], unprojectOption);\n    return [Math.min(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]), Math.min(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]), Math.max(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]), Math.max(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1])];\n  }\n  const bounds0 = getCullBoundsInViewport(viewport, z[0], cullRect);\n  const bounds1 = getCullBoundsInViewport(viewport, z[1], cullRect);\n  return [Math.min(bounds0[0], bounds1[0]), Math.min(bounds0[1], bounds1[1]), Math.max(bounds0[2], bounds1[2]), Math.max(bounds0[3], bounds1[3])];\n}\nfunction getIndexingCoords(bbox, scale, modelMatrixInverse) {\n  if (modelMatrixInverse) {\n    const transformedTileIndex = transformBox(bbox, modelMatrixInverse).map(i => i * scale / TILE_SIZE);\n    return transformedTileIndex;\n  }\n  return bbox.map(i => i * scale / TILE_SIZE);\n}\nfunction getScale(z, tileSize) {\n  return Math.pow(2, z) * TILE_SIZE / tileSize;\n}\n// https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Lon..2Flat._to_tile_numbers_2\nexport function osmTile2lngLat(x, y, z) {\n  const scale = getScale(z, TILE_SIZE);\n  const lng = x / scale * 360 - 180;\n  const n = Math.PI - 2 * Math.PI * y / scale;\n  const lat = 180 / Math.PI * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n  return [lng, lat];\n}\nfunction tile2XY(x, y, z, tileSize) {\n  const scale = getScale(z, tileSize);\n  return [x / scale * TILE_SIZE, y / scale * TILE_SIZE];\n}\nexport function tileToBoundingBox(viewport, x, y, z, tileSize = TILE_SIZE) {\n  if (viewport.isGeospatial) {\n    const [west, north] = osmTile2lngLat(x, y, z);\n    const [east, south] = osmTile2lngLat(x + 1, y + 1, z);\n    return {\n      west,\n      north,\n      east,\n      south\n    };\n  }\n  const [left, top] = tile2XY(x, y, z, tileSize);\n  const [right, bottom] = tile2XY(x + 1, y + 1, z, tileSize);\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\nfunction getIdentityTileIndices(viewport, z, tileSize, extent, modelMatrixInverse) {\n  const bbox = getBoundingBox(viewport, null, extent);\n  const scale = getScale(z, tileSize);\n  const [minX, minY, maxX, maxY] = getIndexingCoords(bbox, scale, modelMatrixInverse);\n  const indices = [];\n  /*\n      |  TILE  |  TILE  |  TILE  |\n        |(minX)            |(maxX)\n   */\n  for (let x = Math.floor(minX); x < maxX; x++) {\n    for (let y = Math.floor(minY); y < maxY; y++) {\n      indices.push({\n        x,\n        y,\n        z\n      });\n    }\n  }\n  return indices;\n}\n/**\n * Returns all tile indices in the current viewport. If the current zoom level is smaller\n * than minZoom, return an empty array. If the current zoom level is greater than maxZoom,\n * return tiles that are on maxZoom.\n */\n// eslint-disable-next-line complexity\nexport function getTileIndices({\n  viewport,\n  maxZoom,\n  minZoom,\n  zRange,\n  extent,\n  tileSize = TILE_SIZE,\n  modelMatrix,\n  modelMatrixInverse,\n  zoomOffset = 0\n}) {\n  let z = viewport.isGeospatial ? Math.round(viewport.zoom + Math.log2(TILE_SIZE / tileSize)) + zoomOffset : Math.ceil(viewport.zoom) + zoomOffset;\n  if (typeof minZoom === 'number' && Number.isFinite(minZoom) && z < minZoom) {\n    if (!extent) {\n      return [];\n    }\n    z = minZoom;\n  }\n  if (typeof maxZoom === 'number' && Number.isFinite(maxZoom) && z > maxZoom) {\n    z = maxZoom;\n  }\n  let transformedExtent = extent;\n  if (modelMatrix && modelMatrixInverse && extent && !viewport.isGeospatial) {\n    transformedExtent = transformBox(extent, modelMatrix);\n  }\n  return viewport.isGeospatial ? getOSMTileIndices(viewport, z, zRange, extent) : getIdentityTileIndices(viewport, z, tileSize, transformedExtent || DEFAULT_EXTENT, modelMatrixInverse);\n}\n/**\n * Returns true if s is a valid URL template\n */\nexport function isURLTemplate(s) {\n  return /(?=.*{z})(?=.*{x})(?=.*({y}|{-y}))/.test(s);\n}\nexport function isGeoBoundingBox(v) {\n  return Number.isFinite(v.west) && Number.isFinite(v.north) && Number.isFinite(v.east) && Number.isFinite(v.south);\n}","map":{"version":3,"names":["getOSMTileIndices","TILE_SIZE","DEFAULT_EXTENT","Infinity","urlType","type","value","validate","propType","optional","Array","isArray","every","url","equal","value1","value2","len","length","i","transformBox","bbox","modelMatrix","transformedCoords","transformAsPoint","transformedBox","Math","min","map","max","stringHash","s","abs","split","reduce","a","b","charCodeAt","getURLFromTemplate","template","tile","index","id","key","Object","keys","regex","RegExp","replace","String","Number","isInteger","y","z","pow","getBoundingBox","viewport","zRange","extent","bounds","minZ","maxZ","bounds0","getBounds","bounds1","isGeospatial","getCullBounds","cullRect","subViewports","v","getCullBoundsInViewport","x","width","height","unprojectOption","targetZ","topLeft","unproject","topRight","bottomLeft","bottomRight","getIndexingCoords","scale","modelMatrixInverse","transformedTileIndex","getScale","tileSize","osmTile2lngLat","lng","n","PI","lat","atan","exp","tile2XY","tileToBoundingBox","west","north","east","south","left","top","right","bottom","getIdentityTileIndices","minX","minY","maxX","maxY","indices","floor","push","getTileIndices","maxZoom","minZoom","zoomOffset","round","zoom","log2","ceil","isFinite","transformedExtent","isURLTemplate","test","isGeoBoundingBox"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\geo-layers\\src\\tileset-2d\\utils.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Viewport} from '@deck.gl/core';\nimport {Matrix4} from '@math.gl/core';\nimport {getOSMTileIndices} from './tile-2d-traversal';\nimport {Bounds, GeoBoundingBox, TileBoundingBox, TileIndex, ZRange} from './types';\n\nconst TILE_SIZE = 512;\nconst DEFAULT_EXTENT: Bounds = [-Infinity, -Infinity, Infinity, Infinity];\n\nexport type URLTemplate = string | string[] | null;\n\nexport const urlType = {\n  type: 'object' as const,\n  value: null as URLTemplate,\n  validate: (value, propType) =>\n    (propType.optional && value === null) ||\n    typeof value === 'string' ||\n    (Array.isArray(value) && value.every(url => typeof url === 'string')),\n  equal: (value1, value2) => {\n    if (value1 === value2) {\n      return true;\n    }\n    if (!Array.isArray(value1) || !Array.isArray(value2)) {\n      return false;\n    }\n    const len = value1.length;\n    if (len !== value2.length) {\n      return false;\n    }\n    for (let i = 0; i < len; i++) {\n      if (value1[i] !== value2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\nfunction transformBox(bbox: Bounds, modelMatrix: Matrix4): Bounds {\n  const transformedCoords = [\n    // top-left\n    modelMatrix.transformAsPoint([bbox[0], bbox[1]]),\n    // top-right\n    modelMatrix.transformAsPoint([bbox[2], bbox[1]]),\n    // bottom-left\n    modelMatrix.transformAsPoint([bbox[0], bbox[3]]),\n    // bottom-right\n    modelMatrix.transformAsPoint([bbox[2], bbox[3]])\n  ];\n  const transformedBox: Bounds = [\n    // Minimum x coord\n    Math.min(...transformedCoords.map(i => i[0])),\n    // Minimum y coord\n    Math.min(...transformedCoords.map(i => i[1])),\n    // Max x coord\n    Math.max(...transformedCoords.map(i => i[0])),\n    // Max y coord\n    Math.max(...transformedCoords.map(i => i[1]))\n  ];\n  return transformedBox;\n}\n\nfunction stringHash(s: string): number {\n  return Math.abs(s.split('').reduce((a, b) => ((a << 5) - a + b.charCodeAt(0)) | 0, 0));\n}\n\nexport function getURLFromTemplate(\n  template: URLTemplate,\n  tile: {\n    index: TileIndex;\n    id: string;\n  }\n): string | null {\n  if (!template || !template.length) {\n    return null;\n  }\n  const {index, id} = tile;\n\n  if (Array.isArray(template)) {\n    const i = stringHash(id) % template.length;\n    template = template[i];\n  }\n\n  let url = template;\n  for (const key of Object.keys(index)) {\n    const regex = new RegExp(`{${key}}`, 'g');\n    url = url.replace(regex, String(index[key]));\n  }\n\n  // Back-compatible support for {-y}\n  if (Number.isInteger(index.y) && Number.isInteger(index.z)) {\n    url = url.replace(/\\{-y\\}/g, String(Math.pow(2, index.z) - index.y - 1));\n  }\n  return url;\n}\n\n/**\n * gets the bounding box of a viewport\n */\nfunction getBoundingBox(viewport: Viewport, zRange: number[] | null, extent: Bounds): Bounds {\n  let bounds;\n  if (zRange && zRange.length === 2) {\n    const [minZ, maxZ] = zRange;\n    const bounds0 = viewport.getBounds({z: minZ});\n    const bounds1 = viewport.getBounds({z: maxZ});\n    bounds = [\n      Math.min(bounds0[0], bounds1[0]),\n      Math.min(bounds0[1], bounds1[1]),\n      Math.max(bounds0[2], bounds1[2]),\n      Math.max(bounds0[3], bounds1[3])\n    ];\n  } else {\n    bounds = viewport.getBounds();\n  }\n  if (!viewport.isGeospatial) {\n    return [\n      // Top corner should not be more then bottom corner in either direction\n      Math.max(Math.min(bounds[0], extent[2]), extent[0]),\n      Math.max(Math.min(bounds[1], extent[3]), extent[1]),\n      // Bottom corner should not be less then top corner in either direction\n      Math.min(Math.max(bounds[2], extent[0]), extent[2]),\n      Math.min(Math.max(bounds[3], extent[1]), extent[3])\n    ];\n  }\n  return [\n    Math.max(bounds[0], extent[0]),\n    Math.max(bounds[1], extent[1]),\n    Math.min(bounds[2], extent[2]),\n    Math.min(bounds[3], extent[3])\n  ];\n}\n\n/** Get culling bounds in world space */\nexport function getCullBounds({\n  viewport,\n  z,\n  cullRect\n}: {\n  /** Current viewport */\n  viewport: Viewport;\n  /** Current z range */\n  z: ZRange | number | null;\n  /** Culling rectangle in screen space */\n  cullRect: {x: number; y: number; width: number; height: number};\n}): [number, number, number, number][] {\n  const subViewports = viewport.subViewports || [viewport];\n  return subViewports.map(v => getCullBoundsInViewport(v, z || 0, cullRect));\n}\n\nfunction getCullBoundsInViewport(\n  /** Current viewport */\n  viewport: Viewport,\n  /** At altitude */\n  z: ZRange | number,\n  /** Culling rectangle in screen space */\n  cullRect: {x: number; y: number; width: number; height: number}\n): [number, number, number, number] {\n  if (!Array.isArray(z)) {\n    const x = cullRect.x - viewport.x;\n    const y = cullRect.y - viewport.y;\n    const {width, height} = cullRect;\n\n    const unprojectOption = {targetZ: z};\n\n    const topLeft = viewport.unproject([x, y], unprojectOption);\n    const topRight = viewport.unproject([x + width, y], unprojectOption);\n    const bottomLeft = viewport.unproject([x, y + height], unprojectOption);\n    const bottomRight = viewport.unproject([x + width, y + height], unprojectOption);\n\n    return [\n      Math.min(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]),\n      Math.min(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]),\n      Math.max(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]),\n      Math.max(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1])\n    ];\n  }\n\n  const bounds0 = getCullBoundsInViewport(viewport, z[0], cullRect);\n  const bounds1 = getCullBoundsInViewport(viewport, z[1], cullRect);\n\n  return [\n    Math.min(bounds0[0], bounds1[0]),\n    Math.min(bounds0[1], bounds1[1]),\n    Math.max(bounds0[2], bounds1[2]),\n    Math.max(bounds0[3], bounds1[3])\n  ];\n}\n\nfunction getIndexingCoords(bbox: Bounds, scale: number, modelMatrixInverse?: Matrix4): Bounds {\n  if (modelMatrixInverse) {\n    const transformedTileIndex = transformBox(bbox, modelMatrixInverse).map(\n      i => (i * scale) / TILE_SIZE\n    );\n    return transformedTileIndex as Bounds;\n  }\n  return bbox.map(i => (i * scale) / TILE_SIZE) as Bounds;\n}\n\nfunction getScale(z: number, tileSize: number): number {\n  return (Math.pow(2, z) * TILE_SIZE) / tileSize;\n}\n\n// https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Lon..2Flat._to_tile_numbers_2\nexport function osmTile2lngLat(x: number, y: number, z: number): [number, number] {\n  const scale = getScale(z, TILE_SIZE);\n  const lng = (x / scale) * 360 - 180;\n  const n = Math.PI - (2 * Math.PI * y) / scale;\n  const lat = (180 / Math.PI) * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n  return [lng, lat];\n}\n\nfunction tile2XY(x: number, y: number, z: number, tileSize: number): [number, number] {\n  const scale = getScale(z, tileSize);\n  return [(x / scale) * TILE_SIZE, (y / scale) * TILE_SIZE];\n}\nexport function tileToBoundingBox(\n  viewport: Viewport,\n  x: number,\n  y: number,\n  z: number,\n  tileSize: number = TILE_SIZE\n): TileBoundingBox {\n  if (viewport.isGeospatial) {\n    const [west, north] = osmTile2lngLat(x, y, z);\n    const [east, south] = osmTile2lngLat(x + 1, y + 1, z);\n    return {west, north, east, south};\n  }\n  const [left, top] = tile2XY(x, y, z, tileSize);\n  const [right, bottom] = tile2XY(x + 1, y + 1, z, tileSize);\n  return {left, top, right, bottom};\n}\n\nfunction getIdentityTileIndices(\n  viewport: Viewport,\n  z: number,\n  tileSize: number,\n  extent: Bounds,\n  modelMatrixInverse?: Matrix4\n) {\n  const bbox = getBoundingBox(viewport, null, extent);\n  const scale = getScale(z, tileSize);\n  const [minX, minY, maxX, maxY] = getIndexingCoords(bbox, scale, modelMatrixInverse);\n  const indices: TileIndex[] = [];\n\n  /*\n      |  TILE  |  TILE  |  TILE  |\n        |(minX)            |(maxX)\n   */\n  for (let x = Math.floor(minX); x < maxX; x++) {\n    for (let y = Math.floor(minY); y < maxY; y++) {\n      indices.push({x, y, z});\n    }\n  }\n  return indices;\n}\n\n/**\n * Returns all tile indices in the current viewport. If the current zoom level is smaller\n * than minZoom, return an empty array. If the current zoom level is greater than maxZoom,\n * return tiles that are on maxZoom.\n */\n// eslint-disable-next-line complexity\nexport function getTileIndices({\n  viewport,\n  maxZoom,\n  minZoom,\n  zRange,\n  extent,\n  tileSize = TILE_SIZE,\n  modelMatrix,\n  modelMatrixInverse,\n  zoomOffset = 0\n}: {\n  viewport: Viewport;\n  maxZoom?: number;\n  minZoom?: number;\n  zRange: ZRange | null;\n  extent?: Bounds;\n  tileSize?: number;\n  modelMatrix?: Matrix4;\n  modelMatrixInverse?: Matrix4;\n  zoomOffset?: number;\n}) {\n  let z = viewport.isGeospatial\n    ? Math.round(viewport.zoom + Math.log2(TILE_SIZE / tileSize)) + zoomOffset\n    : Math.ceil(viewport.zoom) + zoomOffset;\n  if (typeof minZoom === 'number' && Number.isFinite(minZoom) && z < minZoom) {\n    if (!extent) {\n      return [];\n    }\n    z = minZoom;\n  }\n  if (typeof maxZoom === 'number' && Number.isFinite(maxZoom) && z > maxZoom) {\n    z = maxZoom;\n  }\n  let transformedExtent = extent;\n  if (modelMatrix && modelMatrixInverse && extent && !viewport.isGeospatial) {\n    transformedExtent = transformBox(extent, modelMatrix);\n  }\n  return viewport.isGeospatial\n    ? getOSMTileIndices(viewport, z, zRange, extent)\n    : getIdentityTileIndices(\n        viewport,\n        z,\n        tileSize,\n        transformedExtent || DEFAULT_EXTENT,\n        modelMatrixInverse\n      );\n}\n\n/**\n * Returns true if s is a valid URL template\n */\nexport function isURLTemplate(s: string): boolean {\n  return /(?=.*{z})(?=.*{x})(?=.*({y}|{-y}))/.test(s);\n}\n\nexport function isGeoBoundingBox(v: any): v is GeoBoundingBox {\n  return (\n    Number.isFinite(v.west) &&\n    Number.isFinite(v.north) &&\n    Number.isFinite(v.east) &&\n    Number.isFinite(v.south)\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}