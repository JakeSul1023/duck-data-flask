{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { isObject } from \"../../javascript-utils/is-type.js\";\nimport { fetchFile } from \"../fetch/fetch-file.js\";\nimport { getGlobalLoaderOptions } from \"./option-utils.js\";\n/**\n * Gets the current fetch function from options and context\n * @param options\n * @param context\n */\nexport function getFetchFunction(options, context) {\n  const globalOptions = getGlobalLoaderOptions();\n  const loaderOptions = options || globalOptions;\n  // options.fetch can be a function\n  if (typeof loaderOptions.fetch === 'function') {\n    return loaderOptions.fetch;\n  }\n  // options.fetch can be an options object\n  if (isObject(loaderOptions.fetch)) {\n    return url => fetchFile(url, loaderOptions.fetch);\n  }\n  // else refer to context (from parent loader) if available\n  if (context?.fetch) {\n    return context?.fetch;\n  }\n  // else return the default fetch function\n  return fetchFile;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}