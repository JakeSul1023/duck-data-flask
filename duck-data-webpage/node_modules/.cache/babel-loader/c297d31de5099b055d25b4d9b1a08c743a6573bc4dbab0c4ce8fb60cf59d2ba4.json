{"ast":null,"code":"// The MIT License (MIT)\n//\n// Copyright (c) 2016 Zhipeng Jia\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n'use strict';\n\nfunction isNode() {\n  if (typeof process === 'object') {\n    if (typeof process.versions === 'object') {\n      if (typeof process.versions.node !== 'undefined') {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction isUint8Array(object) {\n  return object instanceof Uint8Array && (!isNode() || !Buffer.isBuffer(object));\n}\nfunction isArrayBuffer(object) {\n  return object instanceof ArrayBuffer;\n}\nfunction isBuffer(object) {\n  if (!isNode()) {\n    return false;\n  }\n  return Buffer.isBuffer(object);\n}\nvar SnappyDecompressor = require('./snappy_decompressor').SnappyDecompressor;\nvar SnappyCompressor = require('./snappy_compressor').SnappyCompressor;\nvar TYPE_ERROR_MSG = 'Argument compressed must be type of ArrayBuffer, Buffer, or Uint8Array';\nfunction uncompress(compressed) {\n  if (!isUint8Array(compressed) && !isArrayBuffer(compressed) && !isBuffer(compressed)) {\n    throw new TypeError(TYPE_ERROR_MSG);\n  }\n  var uint8Mode = false;\n  var arrayBufferMode = false;\n  if (isUint8Array(compressed)) {\n    uint8Mode = true;\n  } else if (isArrayBuffer(compressed)) {\n    arrayBufferMode = true;\n    compressed = new Uint8Array(compressed);\n  }\n  var decompressor = new SnappyDecompressor(compressed);\n  var length = decompressor.readUncompressedLength();\n  if (length === -1) {\n    throw new Error('Invalid Snappy bitstream');\n  }\n  var uncompressed, uncompressedView;\n  if (uint8Mode) {\n    uncompressed = new Uint8Array(length);\n    if (!decompressor.uncompressToBuffer(uncompressed)) {\n      throw new Error('Invalid Snappy bitstream');\n    }\n  } else if (arrayBufferMode) {\n    uncompressed = new ArrayBuffer(length);\n    uncompressedView = new Uint8Array(uncompressed);\n    if (!decompressor.uncompressToBuffer(uncompressedView)) {\n      throw new Error('Invalid Snappy bitstream');\n    }\n  } else {\n    uncompressed = Buffer.alloc(length);\n    if (!decompressor.uncompressToBuffer(uncompressed)) {\n      throw new Error('Invalid Snappy bitstream');\n    }\n  }\n  return uncompressed;\n}\nfunction compress(uncompressed) {\n  if (!isUint8Array(uncompressed) && !isArrayBuffer(uncompressed) && !isBuffer(uncompressed)) {\n    throw new TypeError(TYPE_ERROR_MSG);\n  }\n  var uint8Mode = false;\n  var arrayBufferMode = false;\n  if (isUint8Array(uncompressed)) {\n    uint8Mode = true;\n  } else if (isArrayBuffer(uncompressed)) {\n    arrayBufferMode = true;\n    uncompressed = new Uint8Array(uncompressed);\n  }\n  var compressor = new SnappyCompressor(uncompressed);\n  var maxLength = compressor.maxCompressedLength();\n  var compressed, compressedView;\n  var length;\n  if (uint8Mode) {\n    compressed = new Uint8Array(maxLength);\n    length = compressor.compressToBuffer(compressed);\n  } else if (arrayBufferMode) {\n    compressed = new ArrayBuffer(maxLength);\n    compressedView = new Uint8Array(compressed);\n    length = compressor.compressToBuffer(compressedView);\n  } else {\n    compressed = Buffer.alloc(maxLength);\n    length = compressor.compressToBuffer(compressed);\n  }\n  if (!compressed.slice) {\n    // ie11\n    var compressedArray = new Uint8Array(Array.prototype.slice.call(compressed, 0, length));\n    if (uint8Mode) {\n      return compressedArray;\n    } else if (arrayBufferMode) {\n      return compressedArray.buffer;\n    } else {\n      throw new Error('Not implemented');\n    }\n  }\n  return compressed.slice(0, length);\n}\nexports.uncompress = uncompress;\nexports.compress = compress;","map":{"version":3,"names":["isNode","process","versions","node","isUint8Array","object","Uint8Array","Buffer","isBuffer","isArrayBuffer","ArrayBuffer","SnappyDecompressor","require","SnappyCompressor","TYPE_ERROR_MSG","uncompress","compressed","TypeError","uint8Mode","arrayBufferMode","decompressor","length","readUncompressedLength","Error","uncompressed","uncompressedView","uncompressToBuffer","alloc","compress","compressor","maxLength","maxCompressedLength","compressedView","compressToBuffer","slice","compressedArray","Array","prototype","call","buffer","exports"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/snappyjs/index.js"],"sourcesContent":["// The MIT License (MIT)\n//\n// Copyright (c) 2016 Zhipeng Jia\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n'use strict'\n\nfunction isNode () {\n  if (typeof process === 'object') {\n    if (typeof process.versions === 'object') {\n      if (typeof process.versions.node !== 'undefined') {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nfunction isUint8Array (object) {\n  return object instanceof Uint8Array && (!isNode() || !Buffer.isBuffer(object))\n}\n\nfunction isArrayBuffer (object) {\n  return object instanceof ArrayBuffer\n}\n\nfunction isBuffer (object) {\n  if (!isNode()) {\n    return false\n  }\n  return Buffer.isBuffer(object)\n}\n\nvar SnappyDecompressor = require('./snappy_decompressor').SnappyDecompressor\nvar SnappyCompressor = require('./snappy_compressor').SnappyCompressor\n\nvar TYPE_ERROR_MSG = 'Argument compressed must be type of ArrayBuffer, Buffer, or Uint8Array'\n\nfunction uncompress (compressed) {\n  if (!isUint8Array(compressed) && !isArrayBuffer(compressed) && !isBuffer(compressed)) {\n    throw new TypeError(TYPE_ERROR_MSG)\n  }\n  var uint8Mode = false\n  var arrayBufferMode = false\n  if (isUint8Array(compressed)) {\n    uint8Mode = true\n  } else if (isArrayBuffer(compressed)) {\n    arrayBufferMode = true\n    compressed = new Uint8Array(compressed)\n  }\n  var decompressor = new SnappyDecompressor(compressed)\n  var length = decompressor.readUncompressedLength()\n  if (length === -1) {\n    throw new Error('Invalid Snappy bitstream')\n  }\n  var uncompressed, uncompressedView\n  if (uint8Mode) {\n    uncompressed = new Uint8Array(length)\n    if (!decompressor.uncompressToBuffer(uncompressed)) {\n      throw new Error('Invalid Snappy bitstream')\n    }\n  } else if (arrayBufferMode) {\n    uncompressed = new ArrayBuffer(length)\n    uncompressedView = new Uint8Array(uncompressed)\n    if (!decompressor.uncompressToBuffer(uncompressedView)) {\n      throw new Error('Invalid Snappy bitstream')\n    }\n  } else {\n    uncompressed = Buffer.alloc(length)\n    if (!decompressor.uncompressToBuffer(uncompressed)) {\n      throw new Error('Invalid Snappy bitstream')\n    }\n  }\n  return uncompressed\n}\n\nfunction compress (uncompressed) {\n  if (!isUint8Array(uncompressed) && !isArrayBuffer(uncompressed) && !isBuffer(uncompressed)) {\n    throw new TypeError(TYPE_ERROR_MSG)\n  }\n  var uint8Mode = false\n  var arrayBufferMode = false\n  if (isUint8Array(uncompressed)) {\n    uint8Mode = true\n  } else if (isArrayBuffer(uncompressed)) {\n    arrayBufferMode = true\n    uncompressed = new Uint8Array(uncompressed)\n  }\n  var compressor = new SnappyCompressor(uncompressed)\n  var maxLength = compressor.maxCompressedLength()\n  var compressed, compressedView\n  var length\n  if (uint8Mode) {\n    compressed = new Uint8Array(maxLength)\n    length = compressor.compressToBuffer(compressed)\n  } else if (arrayBufferMode) {\n    compressed = new ArrayBuffer(maxLength)\n    compressedView = new Uint8Array(compressed)\n    length = compressor.compressToBuffer(compressedView)\n  } else {\n    compressed = Buffer.alloc(maxLength)\n    length = compressor.compressToBuffer(compressed)\n  }\n  if (!compressed.slice) { // ie11\n    var compressedArray = new Uint8Array(Array.prototype.slice.call(compressed, 0, length))\n    if (uint8Mode) {\n      return compressedArray\n    } else if (arrayBufferMode) {\n      return compressedArray.buffer\n    } else {\n      throw new Error('Not implemented')\n    }\n  }\n\n  return compressed.slice(0, length)\n}\n\nexports.uncompress = uncompress\nexports.compress = compress\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}