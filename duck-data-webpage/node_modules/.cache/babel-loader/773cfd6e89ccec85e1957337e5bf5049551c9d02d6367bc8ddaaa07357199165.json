{"ast":null,"code":"// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Copyright (c) 2017 Uber Technologies, Inc.\n/* eslint-disable camelcase */\nimport { transformMat4 as vec4_transformMat4, transformQuat as vec4_transformQuat } from \"../gl-matrix/vec3.js\";\nimport { vec4_transformMat2, vec4_transformMat3 } from \"../lib/gl-matrix-extras.js\";\nimport { Vector } from \"./base/vector.js\";\nimport { config, isArray } from \"../lib/common.js\";\nimport { checkNumber } from \"../lib/validators.js\";\nlet ZERO;\n/**\n * Four-element vector class with common linear algebra operations.\n * Subclass of Array<number> meaning that it is highly compatible with other libraries\n */\nexport class Vector4 extends Vector {\n  static get ZERO() {\n    if (!ZERO) {\n      ZERO = new Vector4(0, 0, 0, 0);\n      Object.freeze(ZERO);\n    }\n    return ZERO;\n  }\n  constructor(x = 0, y = 0, z = 0, w = 0) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0, -0);\n    if (isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      // this.set(x, y, z, w);\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n        checkNumber(w);\n      }\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n      this[3] = w;\n    }\n  }\n  set(x, y, z, w) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    this[3] = w;\n    return this.check();\n  }\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    return this.check();\n  }\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n      checkNumber(object.w);\n    }\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    this[3] = object.w;\n    return this;\n  }\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    object.w = this[3];\n    return object;\n  }\n  // Getters/setters\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  get ELEMENTS() {\n    return 4;\n  }\n  get z() {\n    return this[2];\n  }\n  set z(value) {\n    this[2] = checkNumber(value);\n  }\n  get w() {\n    return this[3];\n  }\n  set w(value) {\n    this[3] = checkNumber(value);\n  }\n  transform(matrix4) {\n    vec4_transformMat4(this, this, matrix4);\n    return this.check();\n  }\n  transformByMatrix3(matrix3) {\n    vec4_transformMat3(this, this, matrix3);\n    return this.check();\n  }\n  transformByMatrix2(matrix2) {\n    vec4_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n  transformByQuaternion(quaternion) {\n    vec4_transformQuat(this, this, quaternion);\n    return this.check();\n  }\n  // three.js compatibility\n  applyMatrix4(m) {\n    m.transform(this, this);\n    return this;\n  }\n}\n//# sourceMappingURL=vector4.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}