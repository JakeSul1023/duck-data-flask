{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nexport { parseFromContext, parseSyncFromContext, parseInBatchesFromContext } from \"./loader-types.js\";\n// GENERAL UTILS\nexport { assert } from \"./lib/env-utils/assert.js\";\nexport { isBrowser, isWorker, nodeVersion, self, window, global, document } from \"./lib/env-utils/globals.js\";\nexport { log } from \"./lib/log-utils/log.js\";\n// Options and modules\nexport { mergeLoaderOptions } from \"./lib/option-utils/merge-loader-options.js\";\nexport { registerJSModules } from \"./lib/module-utils/js-module-utils.js\";\nexport { checkJSModule, getJSModule, getJSModuleOrNull } from \"./lib/module-utils/js-module-utils.js\";\n// LOADERS.GL-SPECIFIC WORKER UTILS\nexport { createLoaderWorker } from \"./lib/worker-loader-utils/create-loader-worker.js\";\nexport { parseWithWorker, canParseWithWorker } from \"./lib/worker-loader-utils/parse-with-worker.js\";\nexport { canEncodeWithWorker } from \"./lib/worker-loader-utils/encode-with-worker.js\";\n// PARSER UTILS\nexport { parseJSON } from \"./lib/parser-utils/parse-json.js\";\n// MEMORY COPY UTILS\nexport { sliceArrayBuffer, concatenateArrayBuffers, concatenateArrayBuffersFromArray, concatenateTypedArrays, compareArrayBuffers } from \"./lib/binary-utils/array-buffer-utils.js\";\nexport { padToNBytes, copyToArray, copyArrayBuffer } from \"./lib/binary-utils/memory-copy-utils.js\";\nexport { padStringToByteAlignment, copyStringToDataView, copyBinaryToDataView, copyPaddedArrayBufferToDataView, copyPaddedStringToDataView } from \"./lib/binary-utils/dataview-copy-utils.js\";\nexport { getFirstCharacters, getMagicString } from \"./lib/binary-utils/get-first-characters.js\";\n// ITERATOR UTILS\nexport { makeTextEncoderIterator, makeTextDecoderIterator, makeLineIterator, makeNumberedLineIterator } from \"./lib/iterators/text-iterators.js\";\nexport { forEach, concatenateArrayBuffersAsync } from \"./lib/iterators/async-iteration.js\";\n// REQUEST UTILS\nexport { default as RequestScheduler } from \"./lib/request-utils/request-scheduler.js\";\n// PATH HELPERS\nexport { setPathPrefix, getPathPrefix, resolvePath } from \"./lib/path-utils/file-aliases.js\";\nexport { addAliases as _addAliases } from \"./lib/path-utils/file-aliases.js\";\n// MICRO LOADERS\nexport { JSONLoader } from \"./json-loader.js\";\n// NODE support\n// Node.js emulation (can be used in browser)\n// Avoid direct use of `Buffer` which pulls in 50KB polyfill\nexport { isBuffer, toBuffer, toArrayBuffer } from \"./lib/binary-utils/memory-conversion-utils.js\";\n// Note.js wrappers (can be safely imported, but not used in browser)\n// Use instead of importing 'util' to avoid node dependencies\nexport { promisify1, promisify2 } from \"./lib/node/promisify.js\";\n// `path` replacement (avoids bundling big path polyfill)\nimport * as path from \"./lib/path-utils/path.js\";\nexport { path };\n// Use instead of importing 'stream' to avoid node dependencies`\nimport * as stream from \"./lib/node/stream.js\";\nexport { stream };\nexport { BlobFile } from \"./lib/files/blob-file.js\";\nexport { HttpFile } from \"./lib/files/http-file.js\";\nexport { NodeFileFacade as NodeFile } from \"./lib/files/node-file-facade.js\";\nexport { NodeFileSystemFacade as NodeFilesystem } from \"./lib/filesystems/node-filesystem-facade.js\";\nexport { isFileProvider } from \"./lib/file-provider/file-provider-interface.js\";\nexport { FileProvider } from \"./lib/file-provider/file-provider.js\";\nexport { FileHandleFile } from \"./lib/file-provider/file-handle-file.js\";\nexport { DataViewFile } from \"./lib/file-provider/data-view-file.js\";\nexport { DataSource } from \"./lib/sources/data-source.js\";\nexport { ImageSource } from \"./lib/sources/image-source.js\";\nexport { VectorSource } from \"./lib/sources/vector-source.js\";","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}