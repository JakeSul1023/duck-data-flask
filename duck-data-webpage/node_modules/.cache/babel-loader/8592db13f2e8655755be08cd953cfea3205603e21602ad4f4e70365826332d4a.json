{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/** Guess service type from URL */\nexport function selectSource(url, sources, options) {\n  const type = options?.type || 'auto';\n  let selectedSource = null;\n  if (type === 'auto') {\n    for (const source of sources) {\n      if (typeof url === 'string' && source.testURL && source.testURL(url)) {\n        return source;\n      }\n    }\n  } else {\n    selectedSource = getSourceOfType(type, sources);\n  }\n  if (!selectedSource && !options?.nothrow) {\n    throw new Error('Not a valid image source type');\n  }\n  return selectedSource;\n}\n/** Guess service type from URL */\nfunction getSourceOfType(type, sources) {\n  for (const service of sources) {\n    if (service.type === type) {\n      return service;\n    }\n  }\n  return null;\n}","map":{"version":3,"names":["selectSource","url","sources","options","type","selectedSource","source","testURL","getSourceOfType","nothrow","Error","service"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/core/dist/lib/api/select-source.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/** Guess service type from URL */\nexport function selectSource(url, sources, options) {\n    const type = options?.type || 'auto';\n    let selectedSource = null;\n    if (type === 'auto') {\n        for (const source of sources) {\n            if (typeof url === 'string' && source.testURL && source.testURL(url)) {\n                return source;\n            }\n        }\n    }\n    else {\n        selectedSource = getSourceOfType(type, sources);\n    }\n    if (!selectedSource && !options?.nothrow) {\n        throw new Error('Not a valid image source type');\n    }\n    return selectedSource;\n}\n/** Guess service type from URL */\nfunction getSourceOfType(type, sources) {\n    for (const service of sources) {\n        if (service.type === type) {\n            return service;\n        }\n    }\n    return null;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,SAASA,YAAYA,CAACC,GAAG,EAAEC,OAAO,EAAEC,OAAO,EAAE;EAChD,MAAMC,IAAI,GAAGD,OAAO,EAAEC,IAAI,IAAI,MAAM;EACpC,IAAIC,cAAc,GAAG,IAAI;EACzB,IAAID,IAAI,KAAK,MAAM,EAAE;IACjB,KAAK,MAAME,MAAM,IAAIJ,OAAO,EAAE;MAC1B,IAAI,OAAOD,GAAG,KAAK,QAAQ,IAAIK,MAAM,CAACC,OAAO,IAAID,MAAM,CAACC,OAAO,CAACN,GAAG,CAAC,EAAE;QAClE,OAAOK,MAAM;MACjB;IACJ;EACJ,CAAC,MACI;IACDD,cAAc,GAAGG,eAAe,CAACJ,IAAI,EAAEF,OAAO,CAAC;EACnD;EACA,IAAI,CAACG,cAAc,IAAI,CAACF,OAAO,EAAEM,OAAO,EAAE;IACtC,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EACpD;EACA,OAAOL,cAAc;AACzB;AACA;AACA,SAASG,eAAeA,CAACJ,IAAI,EAAEF,OAAO,EAAE;EACpC,KAAK,MAAMS,OAAO,IAAIT,OAAO,EAAE;IAC3B,IAAIS,OAAO,CAACP,IAAI,KAAKA,IAAI,EAAE;MACvB,OAAOO,OAAO;IAClB;EACJ;EACA,OAAO,IAAI;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}