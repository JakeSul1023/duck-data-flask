{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/** Convert an object row to an array row */\nexport function convertToObjectRow(arrayRow, headers) {\n  if (!arrayRow) {\n    throw new Error('null row');\n  }\n  const objectRow = {};\n  if (headers) {\n    for (let i = 0; i < headers.length; i++) {\n      objectRow[headers[i]] = arrayRow[i];\n    }\n  } else {\n    for (let i = 0; i < arrayRow.length; i++) {\n      const columnName = `column-${i}`;\n      objectRow[columnName] = arrayRow[i];\n    }\n  }\n  return objectRow;\n}\n/** Convert an object row to an array row */\nexport function convertToArrayRow(objectRow, headers) {\n  if (!objectRow) {\n    throw new Error('null row');\n  }\n  if (headers) {\n    const arrayRow = new Array(headers.length);\n    for (let i = 0; i < headers.length; i++) {\n      arrayRow[i] = objectRow[headers[i]];\n    }\n    return arrayRow;\n  }\n  return Object.values(objectRow);\n}\n/** Get headers from a sample array row */\nexport function inferHeadersFromArrayRow(arrayRow) {\n  const headers = [];\n  for (let i = 0; i < arrayRow.length; i++) {\n    const columnName = `column-${i}`;\n    headers.push(columnName);\n  }\n  return headers;\n}\n/** Get headers from a smaple object row */\nexport function inferHeadersFromObjectRow(row) {\n  return Object.keys(row);\n}","map":{"version":3,"names":["convertToObjectRow","arrayRow","headers","Error","objectRow","i","length","columnName","convertToArrayRow","Array","Object","values","inferHeadersFromArrayRow","push","inferHeadersFromObjectRow","row","keys"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/schema/dist/lib/table/simple-table/row-utils.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/** Convert an object row to an array row */\nexport function convertToObjectRow(arrayRow, headers) {\n    if (!arrayRow) {\n        throw new Error('null row');\n    }\n    const objectRow = {};\n    if (headers) {\n        for (let i = 0; i < headers.length; i++) {\n            objectRow[headers[i]] = arrayRow[i];\n        }\n    }\n    else {\n        for (let i = 0; i < arrayRow.length; i++) {\n            const columnName = `column-${i}`;\n            objectRow[columnName] = arrayRow[i];\n        }\n    }\n    return objectRow;\n}\n/** Convert an object row to an array row */\nexport function convertToArrayRow(objectRow, headers) {\n    if (!objectRow) {\n        throw new Error('null row');\n    }\n    if (headers) {\n        const arrayRow = new Array(headers.length);\n        for (let i = 0; i < headers.length; i++) {\n            arrayRow[i] = objectRow[headers[i]];\n        }\n        return arrayRow;\n    }\n    return Object.values(objectRow);\n}\n/** Get headers from a sample array row */\nexport function inferHeadersFromArrayRow(arrayRow) {\n    const headers = [];\n    for (let i = 0; i < arrayRow.length; i++) {\n        const columnName = `column-${i}`;\n        headers.push(columnName);\n    }\n    return headers;\n}\n/** Get headers from a smaple object row */\nexport function inferHeadersFromObjectRow(row) {\n    return Object.keys(row);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,SAASA,kBAAkBA,CAACC,QAAQ,EAAEC,OAAO,EAAE;EAClD,IAAI,CAACD,QAAQ,EAAE;IACX,MAAM,IAAIE,KAAK,CAAC,UAAU,CAAC;EAC/B;EACA,MAAMC,SAAS,GAAG,CAAC,CAAC;EACpB,IAAIF,OAAO,EAAE;IACT,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,OAAO,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;MACrCD,SAAS,CAACF,OAAO,CAACG,CAAC,CAAC,CAAC,GAAGJ,QAAQ,CAACI,CAAC,CAAC;IACvC;EACJ,CAAC,MACI;IACD,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,QAAQ,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;MACtC,MAAME,UAAU,GAAG,UAAUF,CAAC,EAAE;MAChCD,SAAS,CAACG,UAAU,CAAC,GAAGN,QAAQ,CAACI,CAAC,CAAC;IACvC;EACJ;EACA,OAAOD,SAAS;AACpB;AACA;AACA,OAAO,SAASI,iBAAiBA,CAACJ,SAAS,EAAEF,OAAO,EAAE;EAClD,IAAI,CAACE,SAAS,EAAE;IACZ,MAAM,IAAID,KAAK,CAAC,UAAU,CAAC;EAC/B;EACA,IAAID,OAAO,EAAE;IACT,MAAMD,QAAQ,GAAG,IAAIQ,KAAK,CAACP,OAAO,CAACI,MAAM,CAAC;IAC1C,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,OAAO,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;MACrCJ,QAAQ,CAACI,CAAC,CAAC,GAAGD,SAAS,CAACF,OAAO,CAACG,CAAC,CAAC,CAAC;IACvC;IACA,OAAOJ,QAAQ;EACnB;EACA,OAAOS,MAAM,CAACC,MAAM,CAACP,SAAS,CAAC;AACnC;AACA;AACA,OAAO,SAASQ,wBAAwBA,CAACX,QAAQ,EAAE;EAC/C,MAAMC,OAAO,GAAG,EAAE;EAClB,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,QAAQ,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACtC,MAAME,UAAU,GAAG,UAAUF,CAAC,EAAE;IAChCH,OAAO,CAACW,IAAI,CAACN,UAAU,CAAC;EAC5B;EACA,OAAOL,OAAO;AAClB;AACA;AACA,OAAO,SAASY,yBAAyBA,CAACC,GAAG,EAAE;EAC3C,OAAOL,MAAM,CAACM,IAAI,CAACD,GAAG,CAAC;AAC3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}