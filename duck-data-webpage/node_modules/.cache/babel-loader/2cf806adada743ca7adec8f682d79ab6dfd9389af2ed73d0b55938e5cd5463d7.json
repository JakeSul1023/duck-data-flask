{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// TODO - these utilities could be moved to the XML parser.\n// uncapitalizeKeys could be an XMLLoader option\n/**\n * Extracts a value or array and always return an array\n * Useful since XML parses to object instead of array when only a single value is provided\n */\nexport function convertXMLValueToArray(xmlValue) {\n  if (Array.isArray(xmlValue)) {\n    return xmlValue;\n  }\n  if (xmlValue && typeof xmlValue === 'object' && xmlValue['0']) {\n    // Error this is an objectified array\n  }\n  if (xmlValue) {\n    return [xmlValue];\n  }\n  return [];\n}\n/**\n * Mutates a field in place, converting it to array\n * Useful since XML parses to object instead of array when only a single value is provided\n */\nexport function convertXMLFieldToArrayInPlace(xml, key) {\n  xml[key] = convertXMLValueToArray(xml[key]);\n}","map":{"version":3,"names":["convertXMLValueToArray","xmlValue","Array","isArray","convertXMLFieldToArrayInPlace","xml","key"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/xml/dist/lib/xml-utils/xml-utils.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// TODO - these utilities could be moved to the XML parser.\n// uncapitalizeKeys could be an XMLLoader option\n/**\n * Extracts a value or array and always return an array\n * Useful since XML parses to object instead of array when only a single value is provided\n */\nexport function convertXMLValueToArray(xmlValue) {\n    if (Array.isArray(xmlValue)) {\n        return xmlValue;\n    }\n    if (xmlValue && typeof xmlValue === 'object' && xmlValue['0']) {\n        // Error this is an objectified array\n    }\n    if (xmlValue) {\n        return [xmlValue];\n    }\n    return [];\n}\n/**\n * Mutates a field in place, converting it to array\n * Useful since XML parses to object instead of array when only a single value is provided\n */\nexport function convertXMLFieldToArrayInPlace(xml, key) {\n    xml[key] = convertXMLValueToArray(xml[key]);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,sBAAsBA,CAACC,QAAQ,EAAE;EAC7C,IAAIC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;IACzB,OAAOA,QAAQ;EACnB;EACA,IAAIA,QAAQ,IAAI,OAAOA,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,CAAC,GAAG,CAAC,EAAE;IAC3D;EAAA;EAEJ,IAAIA,QAAQ,EAAE;IACV,OAAO,CAACA,QAAQ,CAAC;EACrB;EACA,OAAO,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,6BAA6BA,CAACC,GAAG,EAAEC,GAAG,EAAE;EACpDD,GAAG,CAACC,GAAG,CAAC,GAAGN,sBAAsB,CAACK,GAAG,CAACC,GAAG,CAAC,CAAC;AAC/C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}