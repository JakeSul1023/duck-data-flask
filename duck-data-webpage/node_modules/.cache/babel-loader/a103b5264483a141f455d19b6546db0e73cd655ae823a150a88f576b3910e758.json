{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { concatenateArrayBuffersAsync } from '@loaders.gl/loader-utils';\n/** Abstract hash base class */\nexport class Hash {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.hashBatches = this.hashBatches.bind(this);\n  }\n  async preload() {\n    return;\n  }\n  hashBatches(asyncIterator) {\n    try {\n      var _this = this;\n      let encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'base64';\n      return async function* () {\n        const arrayBuffers = [];\n        for await (const arrayBuffer of asyncIterator) {\n          arrayBuffers.push(arrayBuffer);\n          yield arrayBuffer;\n        }\n        const output = await _this.concatenate(arrayBuffers);\n        const hash = await _this.hash(output, encoding);\n        _this.options.crypto?.onEnd?.({\n          hash\n        });\n      }();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  // HELPERS\n  async concatenate(asyncIterator) {\n    return await concatenateArrayBuffersAsync(asyncIterator);\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}