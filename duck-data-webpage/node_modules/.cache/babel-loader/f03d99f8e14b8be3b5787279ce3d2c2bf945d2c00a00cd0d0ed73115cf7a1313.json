{"ast":null,"code":"// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { lighting } from \"../lights/lighting.js\";\nimport { vs } from \"./pbr-vertex-glsl.js\";\nimport { fs } from \"./pbr-fragment-glsl.js\";\nimport { pbrProjection } from \"./pbr-projection.js\";\n/**\n * An implementation of PBR (Physically-Based Rendering).\n * Physically Based Shading of a microfacet surface defined by a glTF material.\n */\nexport const pbrMaterial = {\n  props: {},\n  uniforms: {},\n  name: 'pbrMaterial',\n  dependencies: [lighting, pbrProjection],\n  vs,\n  fs,\n  defines: {\n    LIGHTING_FRAGMENT: 1\n    // TODO defining these as 0 breaks shader\n    // HAS_NORMALMAP: 0\n    // HAS_EMISSIVEMAP: 0,\n    // HAS_OCCLUSIONMAP: 0,\n    // HAS_BASECOLORMAP: 0,\n    // HAS_METALROUGHNESSMAP: 0,\n    // ALPHA_CUTOFF: 0\n    // USE_IBL: 0\n    // PBR_DEBUG: 0\n  },\n  getUniforms: props => props,\n  uniformTypes: {\n    // Material is unlit\n    unlit: 'i32',\n    // Base color map\n    baseColorMapEnabled: 'i32',\n    baseColorFactor: 'vec4<f32>',\n    normalMapEnabled: 'i32',\n    normalScale: 'f32',\n    // #ifdef HAS_NORMALMAP\n    emissiveMapEnabled: 'i32',\n    emissiveFactor: 'vec3<f32>',\n    // #ifdef HAS_EMISSIVEMAP\n    metallicRoughnessValues: 'vec2<f32>',\n    metallicRoughnessMapEnabled: 'i32',\n    occlusionMapEnabled: 'i32',\n    occlusionStrength: 'f32',\n    // #ifdef HAS_OCCLUSIONMAP\n    alphaCutoffEnabled: 'i32',\n    alphaCutoff: 'f32',\n    // #ifdef ALPHA_CUTOFF\n    // IBL\n    IBLenabled: 'i32',\n    scaleIBLAmbient: 'vec2<f32>',\n    // #ifdef USE_IBL\n    // debugging flags used for shader output of intermediate PBR variables\n    // #ifdef PBR_DEBUG\n    scaleDiffBaseMR: 'vec4<f32>',\n    scaleFGDSpec: 'vec4<f32>'\n  }\n};\n//# sourceMappingURL=pbr-material.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}