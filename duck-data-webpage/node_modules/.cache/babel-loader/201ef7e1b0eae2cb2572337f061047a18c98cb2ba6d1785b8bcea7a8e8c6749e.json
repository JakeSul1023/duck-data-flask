{"ast":null,"code":"import { GL } from \"../constants.js\";\n/**\n * Different methods of working with geometries depending on glType\n /**\n\n/**\n * @param mode\n * @returns draw points | lines | triangles\n */\nexport function getPrimitiveModeType(mode) {\n  switch (mode) {\n    case GL.POINTS:\n      // draw single points.\n      return GL.POINTS;\n    case GL.LINES: // draw lines. Each set of two vertices is treated as a separate line segment.\n    case GL.LINE_STRIP: // draw lines. Each vertex connects to the one after it.\n    case GL.LINE_LOOP:\n      // draw a connected group of line segments from the first vertex to the last\n      return GL.LINES;\n    case GL.TRIANGLES:\n    case GL.TRIANGLE_STRIP:\n    case GL.TRIANGLE_FAN:\n      // draw a connected group of triangles.\n      return GL.TRIANGLES;\n    default:\n      throw new Error('Unknown primitive mode');\n  }\n}\n/**\n * @param mode\n * @returns true | false\n */\nexport function isPrimitiveModeExpandable(mode) {\n  switch (mode) {\n    case GL.LINE_STRIP: // draw lines. Each vertex connects to the one after it.\n    case GL.LINE_LOOP: // draw a connected group of line segments from the first vertex to the last\n    case GL.TRIANGLE_STRIP: // draw a connected group of triangles.\n    case GL.TRIANGLE_FAN:\n      // draw a connected group of triangles.\n      return true;\n    default:\n      return false;\n  }\n}\n/**\n * Returns new length depends on glType\n * @param mode\n * @param length\n * @returns new length\n */\nexport function getPrimitiveModeExpandedLength(mode, length) {\n  switch (mode) {\n    case GL.POINTS:\n      // draw single points.\n      return length;\n    case GL.LINES:\n      // draw lines. Each set of two vertices is treated as a separate line segment.\n      return length;\n    case GL.LINE_STRIP:\n      // draw lines. Each vertex connects to the one after it.\n      return length;\n    case GL.LINE_LOOP:\n      // draw a connected group of line segments from the first vertex to the last\n      return length + 1;\n    case GL.TRIANGLES:\n      // draw triangles. Each set of three vertices creates a separate triangle.\n      return length;\n    case GL.TRIANGLE_STRIP: // draw a connected group of triangles.\n    case GL.TRIANGLE_FAN:\n      // draw a connected group of triangles.\n      return (length - 2) * 3;\n    default:\n      throw new Error('Unknown length');\n  }\n}","map":{"version":3,"names":["GL","getPrimitiveModeType","mode","POINTS","LINES","LINE_STRIP","LINE_LOOP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","Error","isPrimitiveModeExpandable","getPrimitiveModeExpandedLength","length"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/math/dist/geometry/primitives/modes.js"],"sourcesContent":["import { GL } from \"../constants.js\";\n/**\n * Different methods of working with geometries depending on glType\n /**\n\n/**\n * @param mode\n * @returns draw points | lines | triangles\n */\nexport function getPrimitiveModeType(mode) {\n    switch (mode) {\n        case GL.POINTS: // draw single points.\n            return GL.POINTS;\n        case GL.LINES: // draw lines. Each set of two vertices is treated as a separate line segment.\n        case GL.LINE_STRIP: // draw lines. Each vertex connects to the one after it.\n        case GL.LINE_LOOP: // draw a connected group of line segments from the first vertex to the last\n            return GL.LINES;\n        case GL.TRIANGLES:\n        case GL.TRIANGLE_STRIP:\n        case GL.TRIANGLE_FAN: // draw a connected group of triangles.\n            return GL.TRIANGLES;\n        default:\n            throw new Error('Unknown primitive mode');\n    }\n}\n/**\n * @param mode\n * @returns true | false\n */\nexport function isPrimitiveModeExpandable(mode) {\n    switch (mode) {\n        case GL.LINE_STRIP: // draw lines. Each vertex connects to the one after it.\n        case GL.LINE_LOOP: // draw a connected group of line segments from the first vertex to the last\n        case GL.TRIANGLE_STRIP: // draw a connected group of triangles.\n        case GL.TRIANGLE_FAN: // draw a connected group of triangles.\n            return true;\n        default:\n            return false;\n    }\n}\n/**\n * Returns new length depends on glType\n * @param mode\n * @param length\n * @returns new length\n */\nexport function getPrimitiveModeExpandedLength(mode, length) {\n    switch (mode) {\n        case GL.POINTS: // draw single points.\n            return length;\n        case GL.LINES: // draw lines. Each set of two vertices is treated as a separate line segment.\n            return length;\n        case GL.LINE_STRIP: // draw lines. Each vertex connects to the one after it.\n            return length;\n        case GL.LINE_LOOP: // draw a connected group of line segments from the first vertex to the last\n            return length + 1;\n        case GL.TRIANGLES: // draw triangles. Each set of three vertices creates a separate triangle.\n            return length;\n        case GL.TRIANGLE_STRIP: // draw a connected group of triangles.\n        case GL.TRIANGLE_FAN: // draw a connected group of triangles.\n            return (length - 2) * 3;\n        default:\n            throw new Error('Unknown length');\n    }\n}\n"],"mappings":"AAAA,SAASA,EAAE,QAAQ,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,oBAAoBA,CAACC,IAAI,EAAE;EACvC,QAAQA,IAAI;IACR,KAAKF,EAAE,CAACG,MAAM;MAAE;MACZ,OAAOH,EAAE,CAACG,MAAM;IACpB,KAAKH,EAAE,CAACI,KAAK,CAAC,CAAC;IACf,KAAKJ,EAAE,CAACK,UAAU,CAAC,CAAC;IACpB,KAAKL,EAAE,CAACM,SAAS;MAAE;MACf,OAAON,EAAE,CAACI,KAAK;IACnB,KAAKJ,EAAE,CAACO,SAAS;IACjB,KAAKP,EAAE,CAACQ,cAAc;IACtB,KAAKR,EAAE,CAACS,YAAY;MAAE;MAClB,OAAOT,EAAE,CAACO,SAAS;IACvB;MACI,MAAM,IAAIG,KAAK,CAAC,wBAAwB,CAAC;EACjD;AACJ;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,yBAAyBA,CAACT,IAAI,EAAE;EAC5C,QAAQA,IAAI;IACR,KAAKF,EAAE,CAACK,UAAU,CAAC,CAAC;IACpB,KAAKL,EAAE,CAACM,SAAS,CAAC,CAAC;IACnB,KAAKN,EAAE,CAACQ,cAAc,CAAC,CAAC;IACxB,KAAKR,EAAE,CAACS,YAAY;MAAE;MAClB,OAAO,IAAI;IACf;MACI,OAAO,KAAK;EACpB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,8BAA8BA,CAACV,IAAI,EAAEW,MAAM,EAAE;EACzD,QAAQX,IAAI;IACR,KAAKF,EAAE,CAACG,MAAM;MAAE;MACZ,OAAOU,MAAM;IACjB,KAAKb,EAAE,CAACI,KAAK;MAAE;MACX,OAAOS,MAAM;IACjB,KAAKb,EAAE,CAACK,UAAU;MAAE;MAChB,OAAOQ,MAAM;IACjB,KAAKb,EAAE,CAACM,SAAS;MAAE;MACf,OAAOO,MAAM,GAAG,CAAC;IACrB,KAAKb,EAAE,CAACO,SAAS;MAAE;MACf,OAAOM,MAAM;IACjB,KAAKb,EAAE,CAACQ,cAAc,CAAC,CAAC;IACxB,KAAKR,EAAE,CAACS,YAAY;MAAE;MAClB,OAAO,CAACI,MAAM,GAAG,CAAC,IAAI,CAAC;IAC3B;MACI,MAAM,IAAIH,KAAK,CAAC,gBAAgB,CAAC;EACzC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}