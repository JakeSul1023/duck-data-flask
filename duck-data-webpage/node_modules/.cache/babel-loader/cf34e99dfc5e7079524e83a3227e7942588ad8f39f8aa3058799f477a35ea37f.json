{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Forked from https://github.com/mapbox/geojson-vt under compatible ISC license\nimport { projectToLngLat, convertToLocalCoordinates } from \"../utils/geometry-utils.js\";\n// eslint-disable-next-line max-statements, complexity\nexport function convertTileToGeoJSON(protoTile, props) {\n  const features = [];\n  for (const rawFeature of protoTile.protoFeatures) {\n    if (!rawFeature || !rawFeature.geometry) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    let type;\n    let coordinates;\n    // raw geometry\n    switch (rawFeature.simplifiedType) {\n      case 1:\n        if (rawFeature.geometry.length === 1) {\n          type = 'Point';\n          coordinates = rawFeature.geometry[0];\n        } else {\n          type = 'MultiPoint';\n          coordinates = rawFeature.geometry;\n        }\n        break;\n      case 2:\n        if (rawFeature.geometry.length === 1) {\n          type = 'LineString';\n          coordinates = rawFeature.geometry[0];\n        } else {\n          type = 'MultiLineString';\n          coordinates = rawFeature.geometry;\n        }\n        break;\n      case 3:\n        if (rawFeature.geometry.length > 1) {\n          type = 'MultiPolygon';\n          coordinates = [rawFeature.geometry];\n        } else {\n          type = 'Polygon';\n          coordinates = rawFeature.geometry;\n        }\n        break;\n      default:\n        throw new Error(`${rawFeature.simplifiedType}is not a valid simplified type`);\n    }\n    switch (props.coordinates) {\n      case 'EPSG:4326':\n      case 'wgs84':\n        projectToLngLat(coordinates, props.tileIndex, props.extent);\n        break;\n      default:\n        convertToLocalCoordinates(coordinates, props.extent);\n        break;\n    }\n    const feature = {\n      type: 'Feature',\n      geometry: {\n        type,\n        coordinates\n      },\n      properties: rawFeature.tags || {},\n      id: rawFeature.id\n    };\n    features.push(feature);\n  }\n  if (features.length === 0) {\n    return null;\n  }\n  const table = {\n    shape: 'geojson-table',\n    type: 'FeatureCollection',\n    features\n  };\n  return table;\n}","map":{"version":3,"names":["projectToLngLat","convertToLocalCoordinates","convertTileToGeoJSON","protoTile","props","features","rawFeature","protoFeatures","geometry","type","coordinates","simplifiedType","length","Error","tileIndex","extent","feature","properties","tags","id","push","table","shape"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/mvt/dist/lib/vector-tiler/tile-to-geojson.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Forked from https://github.com/mapbox/geojson-vt under compatible ISC license\nimport { projectToLngLat, convertToLocalCoordinates } from \"../utils/geometry-utils.js\";\n// eslint-disable-next-line max-statements, complexity\nexport function convertTileToGeoJSON(protoTile, props) {\n    const features = [];\n    for (const rawFeature of protoTile.protoFeatures) {\n        if (!rawFeature || !rawFeature.geometry) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        let type;\n        let coordinates;\n        // raw geometry\n        switch (rawFeature.simplifiedType) {\n            case 1:\n                if (rawFeature.geometry.length === 1) {\n                    type = 'Point';\n                    coordinates = rawFeature.geometry[0];\n                }\n                else {\n                    type = 'MultiPoint';\n                    coordinates = rawFeature.geometry;\n                }\n                break;\n            case 2:\n                if (rawFeature.geometry.length === 1) {\n                    type = 'LineString';\n                    coordinates = rawFeature.geometry[0];\n                }\n                else {\n                    type = 'MultiLineString';\n                    coordinates = rawFeature.geometry;\n                }\n                break;\n            case 3:\n                if (rawFeature.geometry.length > 1) {\n                    type = 'MultiPolygon';\n                    coordinates = [rawFeature.geometry];\n                }\n                else {\n                    type = 'Polygon';\n                    coordinates = rawFeature.geometry;\n                }\n                break;\n            default:\n                throw new Error(`${rawFeature.simplifiedType}is not a valid simplified type`);\n        }\n        switch (props.coordinates) {\n            case 'EPSG:4326':\n            case 'wgs84':\n                projectToLngLat(coordinates, props.tileIndex, props.extent);\n                break;\n            default:\n                convertToLocalCoordinates(coordinates, props.extent);\n                break;\n        }\n        const feature = {\n            type: 'Feature',\n            geometry: {\n                type,\n                coordinates\n            },\n            properties: rawFeature.tags || {},\n            id: rawFeature.id\n        };\n        features.push(feature);\n    }\n    if (features.length === 0) {\n        return null;\n    }\n    const table = {\n        shape: 'geojson-table',\n        type: 'FeatureCollection',\n        features\n    };\n    return table;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,eAAe,EAAEC,yBAAyB,QAAQ,4BAA4B;AACvF;AACA,OAAO,SAASC,oBAAoBA,CAACC,SAAS,EAAEC,KAAK,EAAE;EACnD,MAAMC,QAAQ,GAAG,EAAE;EACnB,KAAK,MAAMC,UAAU,IAAIH,SAAS,CAACI,aAAa,EAAE;IAC9C,IAAI,CAACD,UAAU,IAAI,CAACA,UAAU,CAACE,QAAQ,EAAE;MACrC;MACA;IACJ;IACA,IAAIC,IAAI;IACR,IAAIC,WAAW;IACf;IACA,QAAQJ,UAAU,CAACK,cAAc;MAC7B,KAAK,CAAC;QACF,IAAIL,UAAU,CAACE,QAAQ,CAACI,MAAM,KAAK,CAAC,EAAE;UAClCH,IAAI,GAAG,OAAO;UACdC,WAAW,GAAGJ,UAAU,CAACE,QAAQ,CAAC,CAAC,CAAC;QACxC,CAAC,MACI;UACDC,IAAI,GAAG,YAAY;UACnBC,WAAW,GAAGJ,UAAU,CAACE,QAAQ;QACrC;QACA;MACJ,KAAK,CAAC;QACF,IAAIF,UAAU,CAACE,QAAQ,CAACI,MAAM,KAAK,CAAC,EAAE;UAClCH,IAAI,GAAG,YAAY;UACnBC,WAAW,GAAGJ,UAAU,CAACE,QAAQ,CAAC,CAAC,CAAC;QACxC,CAAC,MACI;UACDC,IAAI,GAAG,iBAAiB;UACxBC,WAAW,GAAGJ,UAAU,CAACE,QAAQ;QACrC;QACA;MACJ,KAAK,CAAC;QACF,IAAIF,UAAU,CAACE,QAAQ,CAACI,MAAM,GAAG,CAAC,EAAE;UAChCH,IAAI,GAAG,cAAc;UACrBC,WAAW,GAAG,CAACJ,UAAU,CAACE,QAAQ,CAAC;QACvC,CAAC,MACI;UACDC,IAAI,GAAG,SAAS;UAChBC,WAAW,GAAGJ,UAAU,CAACE,QAAQ;QACrC;QACA;MACJ;QACI,MAAM,IAAIK,KAAK,CAAC,GAAGP,UAAU,CAACK,cAAc,gCAAgC,CAAC;IACrF;IACA,QAAQP,KAAK,CAACM,WAAW;MACrB,KAAK,WAAW;MAChB,KAAK,OAAO;QACRV,eAAe,CAACU,WAAW,EAAEN,KAAK,CAACU,SAAS,EAAEV,KAAK,CAACW,MAAM,CAAC;QAC3D;MACJ;QACId,yBAAyB,CAACS,WAAW,EAAEN,KAAK,CAACW,MAAM,CAAC;QACpD;IACR;IACA,MAAMC,OAAO,GAAG;MACZP,IAAI,EAAE,SAAS;MACfD,QAAQ,EAAE;QACNC,IAAI;QACJC;MACJ,CAAC;MACDO,UAAU,EAAEX,UAAU,CAACY,IAAI,IAAI,CAAC,CAAC;MACjCC,EAAE,EAAEb,UAAU,CAACa;IACnB,CAAC;IACDd,QAAQ,CAACe,IAAI,CAACJ,OAAO,CAAC;EAC1B;EACA,IAAIX,QAAQ,CAACO,MAAM,KAAK,CAAC,EAAE;IACvB,OAAO,IAAI;EACf;EACA,MAAMS,KAAK,GAAG;IACVC,KAAK,EAAE,eAAe;IACtBb,IAAI,EAAE,mBAAmB;IACzBJ;EACJ,CAAC;EACD,OAAOgB,KAAK;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}