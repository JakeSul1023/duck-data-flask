{"ast":null,"code":"import { RecognizerState } from \"./recognizer-state.js\";\n/**\n * get a usable string, used as event postfix\n */\nexport function stateStr(state) {\n  if (state & RecognizerState.Cancelled) {\n    return 'cancel';\n  } else if (state & RecognizerState.Ended) {\n    return 'end';\n  } else if (state & RecognizerState.Changed) {\n    return 'move';\n  } else if (state & RecognizerState.Began) {\n    return 'start';\n  }\n  return '';\n}","map":{"version":3,"names":["RecognizerState","stateStr","state","Cancelled","Ended","Changed","Began"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\mjolnir.js\\src\\hammerjs\\recognizer\\state-str.ts"],"sourcesContent":["import {RecognizerState} from './recognizer-state';\n\n/**\n * get a usable string, used as event postfix\n */\nexport function stateStr(state: RecognizerState) {\n  if (state & RecognizerState.Cancelled) {\n    return 'cancel';\n  } else if (state & RecognizerState.Ended) {\n    return 'end';\n  } else if (state & RecognizerState.Changed) {\n    return 'move';\n  } else if (state & RecognizerState.Began) {\n    return 'start';\n  }\n  return '';\n}\n"],"mappings":"AAAA,SAAQA,eAAe,QAAC;AAExB;;;AAGA,OAAM,SAAUC,QAAQA,CAACC,KAAsB;EAC7C,IAAIA,KAAK,GAAGF,eAAe,CAACG,SAAS,EAAE;IACrC,OAAO,QAAQ;EACjB,CAAC,MAAM,IAAID,KAAK,GAAGF,eAAe,CAACI,KAAK,EAAE;IACxC,OAAO,KAAK;EACd,CAAC,MAAM,IAAIF,KAAK,GAAGF,eAAe,CAACK,OAAO,EAAE;IAC1C,OAAO,MAAM;EACf,CAAC,MAAM,IAAIH,KAAK,GAAGF,eAAe,CAACM,KAAK,EAAE;IACxC,OAAO,OAAO;EAChB;EACA,OAAO,EAAE;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}