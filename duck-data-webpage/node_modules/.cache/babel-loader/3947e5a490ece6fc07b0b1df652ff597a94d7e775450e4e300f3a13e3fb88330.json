{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { DataViewFile } from '@loaders.gl/loader-utils';\nimport { parse3DTilesArchive as parse3DTilesArchiveFromProvider } from \"./3d-tiles-archive/3d-tiles-archive-parser.js\";\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof \"4.3.2\" !== 'undefined' ? \"4.3.2\" : 'latest';\n/**\n * Loader for 3tz packages\n */\nexport const Tiles3DArchiveFileLoader = {\n  dataType: null,\n  batchType: null,\n  name: '3tz',\n  id: '3tz',\n  module: '3d-tiles',\n  version: VERSION,\n  mimeTypes: ['application/octet-stream', 'application/vnd.maxar.archive.3tz+zip'],\n  parse: parse3DTilesArchive,\n  extensions: ['3tz'],\n  options: {}\n};\n/**\n * returns a single file from the 3tz archive\n * @param data 3tz archive data\n * @param options options\n * @returns requested file\n */\nasync function parse3DTilesArchive(data, options = {}) {\n  const archive = await parse3DTilesArchiveFromProvider(new DataViewFile(new DataView(data)));\n  return archive.getFile(options['3d-tiles-archive']?.path ?? '');\n}","map":{"version":3,"names":["DataViewFile","parse3DTilesArchive","parse3DTilesArchiveFromProvider","VERSION","Tiles3DArchiveFileLoader","dataType","batchType","name","id","module","version","mimeTypes","parse","extensions","options","data","archive","DataView","getFile","path"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/3d-tiles/dist/3d-tiles-archive-loader.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { DataViewFile } from '@loaders.gl/loader-utils';\nimport { parse3DTilesArchive as parse3DTilesArchiveFromProvider } from \"./3d-tiles-archive/3d-tiles-archive-parser.js\";\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof \"4.3.2\" !== 'undefined' ? \"4.3.2\" : 'latest';\n/**\n * Loader for 3tz packages\n */\nexport const Tiles3DArchiveFileLoader = {\n    dataType: null,\n    batchType: null,\n    name: '3tz',\n    id: '3tz',\n    module: '3d-tiles',\n    version: VERSION,\n    mimeTypes: ['application/octet-stream', 'application/vnd.maxar.archive.3tz+zip'],\n    parse: parse3DTilesArchive,\n    extensions: ['3tz'],\n    options: {}\n};\n/**\n * returns a single file from the 3tz archive\n * @param data 3tz archive data\n * @param options options\n * @returns requested file\n */\nasync function parse3DTilesArchive(data, options = {}) {\n    const archive = await parse3DTilesArchiveFromProvider(new DataViewFile(new DataView(data)));\n    return archive.getFile(options['3d-tiles-archive']?.path ?? '');\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,YAAY,QAAQ,0BAA0B;AACvD,SAASC,mBAAmB,IAAIC,+BAA+B,QAAQ,+CAA+C;AACtH;AACA;AACA,MAAMC,OAAO,GAAG,OAAO,OAAO,KAAK,WAAW,GAAG,OAAO,GAAG,QAAQ;AACnE;AACA;AACA;AACA,OAAO,MAAMC,wBAAwB,GAAG;EACpCC,QAAQ,EAAE,IAAI;EACdC,SAAS,EAAE,IAAI;EACfC,IAAI,EAAE,KAAK;EACXC,EAAE,EAAE,KAAK;EACTC,MAAM,EAAE,UAAU;EAClBC,OAAO,EAAEP,OAAO;EAChBQ,SAAS,EAAE,CAAC,0BAA0B,EAAE,uCAAuC,CAAC;EAChFC,KAAK,EAAEX,mBAAmB;EAC1BY,UAAU,EAAE,CAAC,KAAK,CAAC;EACnBC,OAAO,EAAE,CAAC;AACd,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,eAAeb,mBAAmBA,CAACc,IAAI,EAAED,OAAO,GAAG,CAAC,CAAC,EAAE;EACnD,MAAME,OAAO,GAAG,MAAMd,+BAA+B,CAAC,IAAIF,YAAY,CAAC,IAAIiB,QAAQ,CAACF,IAAI,CAAC,CAAC,CAAC;EAC3F,OAAOC,OAAO,CAACE,OAAO,CAACJ,OAAO,CAAC,kBAAkB,CAAC,EAAEK,IAAI,IAAI,EAAE,CAAC;AACnE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}