{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// import type {XMLLoaderOptions} from '@loaders.gl/xml';\n// import {XMLLoader} from '@loaders.gl/xml';\n/**\n * Parses a typed data structure from raw XML for `GetDomain` response\n * @note Error handlings is fairly weak\n */\nexport function parseExceptionReport(parsedXML) {\n  // const parsedXML = XMLLoader.parseTextSync?.(text, {\n  //   ...options,\n  //   xml: {\n  //     ...options?.xml,\n  //     removeNSPrefix: true,\n  //     uncapitalizeKeys: true\n  //   }\n  // });\n  const exceptionReport = parsedXML.exceptionReport;\n  if (!exceptionReport) {\n    return;\n  }\n  const errorMessage = exceptionReport.exception?.exceptionText || exceptionReport.exception?.exceptionCode || exceptionReport.exception?.locator || 'server error';\n  throw new Error(`Catalog Server: ${errorMessage}`);\n}","map":{"version":3,"names":["parseExceptionReport","parsedXML","exceptionReport","errorMessage","exception","exceptionText","exceptionCode","locator","Error"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/wms/dist/lib/parsers/csw/parse-exception-report.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// import type {XMLLoaderOptions} from '@loaders.gl/xml';\n// import {XMLLoader} from '@loaders.gl/xml';\n/**\n * Parses a typed data structure from raw XML for `GetDomain` response\n * @note Error handlings is fairly weak\n */\nexport function parseExceptionReport(parsedXML) {\n    // const parsedXML = XMLLoader.parseTextSync?.(text, {\n    //   ...options,\n    //   xml: {\n    //     ...options?.xml,\n    //     removeNSPrefix: true,\n    //     uncapitalizeKeys: true\n    //   }\n    // });\n    const exceptionReport = parsedXML.exceptionReport;\n    if (!exceptionReport) {\n        return;\n    }\n    const errorMessage = exceptionReport.exception?.exceptionText ||\n        exceptionReport.exception?.exceptionCode ||\n        exceptionReport.exception?.locator ||\n        'server error';\n    throw new Error(`Catalog Server: ${errorMessage}`);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,oBAAoBA,CAACC,SAAS,EAAE;EAC5C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,eAAe,GAAGD,SAAS,CAACC,eAAe;EACjD,IAAI,CAACA,eAAe,EAAE;IAClB;EACJ;EACA,MAAMC,YAAY,GAAGD,eAAe,CAACE,SAAS,EAAEC,aAAa,IACzDH,eAAe,CAACE,SAAS,EAAEE,aAAa,IACxCJ,eAAe,CAACE,SAAS,EAAEG,OAAO,IAClC,cAAc;EAClB,MAAM,IAAIC,KAAK,CAAC,mBAAmBL,YAAY,EAAE,CAAC;AACtD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}