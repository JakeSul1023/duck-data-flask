{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { Layer, project32, picking, UNIT } from '@deck.gl/core';\nimport { Model, Geometry } from '@luma.gl/engine';\nimport { lineUniforms } from \"./line-layer-uniforms.js\";\nimport { shaderWGSL as source } from \"./line-layer.wgsl.js\";\nimport vs from \"./line-layer-vertex.glsl.js\";\nimport fs from \"./line-layer-fragment.glsl.js\";\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n  getSourcePosition: {\n    type: 'accessor',\n    value: x => x.sourcePosition\n  },\n  getTargetPosition: {\n    type: 'accessor',\n    value: x => x.targetPosition\n  },\n  getColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getWidth: {\n    type: 'accessor',\n    value: 1\n  },\n  widthUnits: 'pixels',\n  widthScale: {\n    type: 'number',\n    value: 1,\n    min: 0\n  },\n  widthMinPixels: {\n    type: 'number',\n    value: 0,\n    min: 0\n  },\n  widthMaxPixels: {\n    type: 'number',\n    value: Number.MAX_SAFE_INTEGER,\n    min: 0\n  }\n};\n/**\n * A layer that renders straight lines joining pairs of source and target coordinates.\n */\nclass LineLayer extends Layer {\n  getBounds() {\n    return this.getAttributeManager()?.getBounds(['instanceSourcePositions', 'instanceTargetPositions']);\n  }\n  getShaders() {\n    return super.getShaders({\n      vs,\n      fs,\n      source,\n      modules: [project32, picking, lineUniforms]\n    });\n  }\n  // This layer has its own wrapLongitude logic\n  get wrapLongitude() {\n    return false;\n  }\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instanceSourcePositions: {\n        size: 3,\n        type: 'float64',\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getSourcePosition'\n      },\n      instanceTargetPositions: {\n        size: 3,\n        type: 'float64',\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getTargetPosition'\n      },\n      instanceColors: {\n        size: this.props.colorFormat.length,\n        type: 'unorm8',\n        transition: true,\n        accessor: 'getColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getWidth',\n        defaultValue: 1\n      }\n    });\n    /* eslint-enable max-len */\n  }\n  updateState(params) {\n    super.updateState(params);\n    if (params.changeFlags.extensionsChanged) {\n      this.state.model?.destroy();\n      this.state.model = this._getModel();\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n  draw({\n    uniforms\n  }) {\n    const {\n      widthUnits,\n      widthScale,\n      widthMinPixels,\n      widthMaxPixels,\n      wrapLongitude\n    } = this.props;\n    const model = this.state.model;\n    const lineProps = {\n      widthUnits: UNIT[widthUnits],\n      widthScale,\n      widthMinPixels,\n      widthMaxPixels,\n      useShortestPath: wrapLongitude ? 1 : 0\n    };\n    model.shaderInputs.setProps({\n      line: lineProps\n    });\n    model.draw(this.context.renderPass);\n    if (wrapLongitude) {\n      // Render a second copy for the clipped lines at the 180th meridian\n      model.shaderInputs.setProps({\n        line: {\n          ...lineProps,\n          useShortestPath: -1\n        }\n      });\n      model.draw(this.context.renderPass);\n    }\n  }\n  _getModel() {\n    /*\n     *  (0, -1)-------------_(1, -1)\n     *       |          _,-\"  |\n     *       o      _,-\"      o\n     *       |  _,-\"          |\n     *   (0, 1)\"-------------(1, 1)\n     */\n    const positions = [0, -1, 0, 0, 1, 0, 1, -1, 0, 1, 1, 0];\n    return new Model(this.context.device, {\n      ...this.getShaders(),\n      id: this.props.id,\n      bufferLayout: this.getAttributeManager().getBufferLayouts(),\n      geometry: new Geometry({\n        topology: 'triangle-strip',\n        attributes: {\n          positions: {\n            size: 3,\n            value: new Float32Array(positions)\n          }\n        }\n      }),\n      isInstanced: true\n    });\n  }\n}\nLineLayer.layerName = 'LineLayer';\nLineLayer.defaultProps = defaultProps;\nexport default LineLayer;","map":{"version":3,"names":["Layer","project32","picking","UNIT","Model","Geometry","lineUniforms","shaderWGSL","source","vs","fs","DEFAULT_COLOR","defaultProps","getSourcePosition","type","value","x","sourcePosition","getTargetPosition","targetPosition","getColor","getWidth","widthUnits","widthScale","min","widthMinPixels","widthMaxPixels","Number","MAX_SAFE_INTEGER","LineLayer","getBounds","getAttributeManager","getShaders","modules","wrapLongitude","initializeState","attributeManager","addInstanced","instanceSourcePositions","size","fp64","use64bitPositions","transition","accessor","instanceTargetPositions","instanceColors","props","colorFormat","length","defaultValue","instanceWidths","updateState","params","changeFlags","extensionsChanged","state","model","destroy","_getModel","invalidateAll","draw","uniforms","lineProps","useShortestPath","shaderInputs","setProps","line","context","renderPass","positions","device","id","bufferLayout","getBufferLayouts","geometry","topology","attributes","Float32Array","isInstanced","layerName"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\layers\\src\\line-layer\\line-layer.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {\n  Layer,\n  project32,\n  picking,\n  UNIT,\n  LayerProps,\n  LayerDataSource,\n  Unit,\n  Position,\n  Accessor,\n  Color,\n  UpdateParameters,\n  DefaultProps\n} from '@deck.gl/core';\nimport {Model, Geometry} from '@luma.gl/engine';\n\nimport {lineUniforms, LineProps} from './line-layer-uniforms';\nimport {shaderWGSL as source} from './line-layer.wgsl';\nimport vs from './line-layer-vertex.glsl';\nimport fs from './line-layer-fragment.glsl';\n\nconst DEFAULT_COLOR: [number, number, number, number] = [0, 0, 0, 255];\n\nconst defaultProps: DefaultProps<LineLayerProps> = {\n  getSourcePosition: {type: 'accessor', value: (x: any) => x.sourcePosition},\n  getTargetPosition: {type: 'accessor', value: (x: any) => x.targetPosition},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getWidth: {type: 'accessor', value: 1},\n\n  widthUnits: 'pixels',\n  widthScale: {type: 'number', value: 1, min: 0},\n  widthMinPixels: {type: 'number', value: 0, min: 0},\n  widthMaxPixels: {type: 'number', value: Number.MAX_SAFE_INTEGER, min: 0}\n};\n\n/** All properties supported by LineLayer. */\nexport type LineLayerProps<DataT = unknown> = _LineLayerProps<DataT> & LayerProps;\n\n/** Properties added by LineLayer. */\ntype _LineLayerProps<DataT> = {\n  data: LayerDataSource<DataT>;\n  /**\n   * The units of the line width, one of `'meters'`, `'common'`, and `'pixels'`.\n   * @default 'pixels'\n   */\n  widthUnits?: Unit;\n\n  /**\n   * The scaling multiplier for the width of each line.\n   * @default 1\n   */\n  widthScale?: number;\n\n  /**\n   * The minimum line width in pixels.\n   * @default 0\n   */\n  widthMinPixels?: number;\n\n  /**\n   * The maximum line width in pixels.\n   * @default Number.MAX_SAFE_INTEGER\n   */\n  widthMaxPixels?: number;\n\n  /**\n   * Source position of each object.\n   * @default object => object.sourcePosition\n   */\n  getSourcePosition?: Accessor<DataT, Position>;\n\n  /**\n   * Target position of each object.\n   * @default object => object.targetPosition\n   */\n  getTargetPosition?: Accessor<DataT, Position>;\n\n  /**\n   * The rgba color is in the format of `[r, g, b, [a]]`.\n   * @default [0, 0, 0, 255]\n   */\n  getColor?: Accessor<DataT, Color>;\n\n  /**\n   * Width of each object\n   * @default 1\n   */\n  getWidth?: Accessor<DataT, number>;\n};\n\n/**\n * A layer that renders straight lines joining pairs of source and target coordinates.\n */\nexport default class LineLayer<DataT = any, ExtraProps extends {} = {}> extends Layer<\n  ExtraProps & Required<_LineLayerProps<DataT>>\n> {\n  static layerName = 'LineLayer';\n  static defaultProps = defaultProps;\n\n  state!: {\n    model?: Model;\n  };\n\n  getBounds(): [number[], number[]] | null {\n    return this.getAttributeManager()?.getBounds([\n      'instanceSourcePositions',\n      'instanceTargetPositions'\n    ]);\n  }\n\n  getShaders() {\n    return super.getShaders({vs, fs, source, modules: [project32, picking, lineUniforms]});\n  }\n\n  // This layer has its own wrapLongitude logic\n  get wrapLongitude(): boolean {\n    return false;\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager()!;\n\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instanceSourcePositions: {\n        size: 3,\n        type: 'float64',\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getSourcePosition'\n      },\n      instanceTargetPositions: {\n        size: 3,\n        type: 'float64',\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getTargetPosition'\n      },\n      instanceColors: {\n        size: this.props.colorFormat.length,\n        type: 'unorm8',\n        transition: true,\n        accessor: 'getColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getWidth',\n        defaultValue: 1\n      }\n    });\n    /* eslint-enable max-len */\n  }\n\n  updateState(params: UpdateParameters<this>): void {\n    super.updateState(params);\n\n    if (params.changeFlags.extensionsChanged) {\n      this.state.model?.destroy();\n      this.state.model = this._getModel();\n      this.getAttributeManager()!.invalidateAll();\n    }\n  }\n\n  draw({uniforms}): void {\n    const {widthUnits, widthScale, widthMinPixels, widthMaxPixels, wrapLongitude} = this.props;\n    const model = this.state.model!;\n    const lineProps: LineProps = {\n      widthUnits: UNIT[widthUnits],\n      widthScale,\n      widthMinPixels,\n      widthMaxPixels,\n      useShortestPath: wrapLongitude ? 1 : 0\n    };\n    model.shaderInputs.setProps({line: lineProps});\n    model.draw(this.context.renderPass);\n\n    if (wrapLongitude) {\n      // Render a second copy for the clipped lines at the 180th meridian\n      model.shaderInputs.setProps({line: {...lineProps, useShortestPath: -1}});\n      model.draw(this.context.renderPass);\n    }\n  }\n\n  protected _getModel(): Model {\n    /*\n     *  (0, -1)-------------_(1, -1)\n     *       |          _,-\"  |\n     *       o      _,-\"      o\n     *       |  _,-\"          |\n     *   (0, 1)\"-------------(1, 1)\n     */\n    const positions = [0, -1, 0, 0, 1, 0, 1, -1, 0, 1, 1, 0];\n\n    return new Model(this.context.device, {\n      ...this.getShaders(),\n      id: this.props.id,\n      bufferLayout: this.getAttributeManager()!.getBufferLayouts(),\n      geometry: new Geometry({\n        topology: 'triangle-strip',\n        attributes: {\n          positions: {size: 3, value: new Float32Array(positions)}\n        }\n      }),\n      isInstanced: true\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}