{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst uniformBlock = `\\\nuniform triangleUniforms {\n  float aggregationMode;\n  vec2 colorDomain;\n  float intensity;\n  float threshold;\n} triangle;\n`;\nexport const triangleUniforms = {\n  name: 'triangle',\n  vs: uniformBlock,\n  fs: uniformBlock,\n  uniformTypes: {\n    aggregationMode: 'f32',\n    colorDomain: 'vec2<f32>',\n    intensity: 'f32',\n    threshold: 'f32'\n  }\n};","map":{"version":3,"names":["uniformBlock","triangleUniforms","name","vs","fs","uniformTypes","aggregationMode","colorDomain","intensity","threshold"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\aggregation-layers\\src\\heatmap-layer\\triangle-layer-uniforms.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Texture} from '@luma.gl/core';\nimport type {ShaderModule} from '@luma.gl/shadertools';\n\nconst uniformBlock = `\\\nuniform triangleUniforms {\n  float aggregationMode;\n  vec2 colorDomain;\n  float intensity;\n  float threshold;\n} triangle;\n`;\n\nexport type TriangleProps = {\n  aggregationMode: number;\n  colorDomain: [number, number];\n  intensity: number;\n  threshold: number;\n  colorTexture: Texture;\n  maxTexture: Texture;\n  weightsTexture: Texture;\n};\n\nexport const triangleUniforms = {\n  name: 'triangle',\n  vs: uniformBlock,\n  fs: uniformBlock,\n  uniformTypes: {\n    aggregationMode: 'f32',\n    colorDomain: 'vec2<f32>',\n    intensity: 'f32',\n    threshold: 'f32'\n  }\n} as const satisfies ShaderModule<TriangleProps>;\n"],"mappings":"AAAA;AACA;AACA;AAKA,MAAMA,YAAY,GAAG;;;;;;;CAOpB;AAYD,OAAO,MAAMC,gBAAgB,GAAG;EAC9BC,IAAI,EAAE,UAAU;EAChBC,EAAE,EAAEH,YAAY;EAChBI,EAAE,EAAEJ,YAAY;EAChBK,YAAY,EAAE;IACZC,eAAe,EAAE,KAAK;IACtBC,WAAW,EAAE,WAAW;IACxBC,SAAS,EAAE,KAAK;IAChBC,SAAS,EAAE;;CAEiC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}