{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { lerp } from '@math.gl/core';\nimport Transition from \"./transition.js\";\nexport default class CPUInterpolationTransition extends Transition {\n  get value() {\n    return this._value;\n  }\n  _onUpdate() {\n    const {\n      time,\n      settings: {\n        fromValue,\n        toValue,\n        duration,\n        easing\n      }\n    } = this;\n    const t = easing(time / duration);\n    this._value = lerp(fromValue, toValue, t);\n  }\n}","map":{"version":3,"names":["lerp","Transition","CPUInterpolationTransition","value","_value","_onUpdate","time","settings","fromValue","toValue","duration","easing","t"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\core\\src\\transitions\\cpu-interpolation-transition.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {lerp} from '@math.gl/core';\nimport Transition from './transition';\n\nexport default class CPUInterpolationTransition extends Transition {\n  _value;\n\n  get value() {\n    return this._value;\n  }\n\n  _onUpdate() {\n    const {\n      time,\n      settings: {fromValue, toValue, duration, easing}\n    } = this;\n    const t = easing(time / duration);\n    this._value = lerp(fromValue, toValue, t);\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AAEA,SAAQA,IAAI,QAAO,eAAe;AAClC,OAAOC,UAAU;AAEjB,eAAc,MAAOC,0BAA2B,SAAQD,UAAU;EAGhE,IAAIE,KAAKA,CAAA;IACP,OAAO,IAAI,CAACC,MAAM;EACpB;EAEAC,SAASA,CAAA;IACP,MAAM;MACJC,IAAI;MACJC,QAAQ,EAAE;QAACC,SAAS;QAAEC,OAAO;QAAEC,QAAQ;QAAEC;MAAM;IAAC,CACjD,GAAG,IAAI;IACR,MAAMC,CAAC,GAAGD,MAAM,CAACL,IAAI,GAAGI,QAAQ,CAAC;IACjC,IAAI,CAACN,MAAM,GAAGJ,IAAI,CAACQ,SAAS,EAAEC,OAAO,EAAEG,CAAC,CAAC;EAC3C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}