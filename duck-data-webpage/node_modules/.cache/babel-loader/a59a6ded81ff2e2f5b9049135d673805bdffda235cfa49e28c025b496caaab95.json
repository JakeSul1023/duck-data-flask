{"ast":null,"code":"import { VERSION } from \"./lib/utils/version.js\";\nimport { parseGLBSync } from \"./lib/parsers/parse-glb.js\";\n/**\n * GLB Loader -\n * GLB is the binary container format for GLTF\n */\nexport const GLBLoader = {\n  dataType: null,\n  batchType: null,\n  name: 'GLB',\n  id: 'glb',\n  module: 'gltf',\n  version: VERSION,\n  extensions: ['glb'],\n  mimeTypes: ['model/gltf-binary'],\n  binary: true,\n  parse,\n  parseSync,\n  options: {\n    glb: {\n      strict: false // Enables deprecated XVIZ support (illegal CHUNK formats)\n    }\n  }\n};\nasync function parse(arrayBuffer, options) {\n  return parseSync(arrayBuffer, options);\n}\nfunction parseSync(arrayBuffer, options) {\n  const {\n    byteOffset = 0\n  } = options || {};\n  const glb = {};\n  parseGLBSync(glb, arrayBuffer, byteOffset, options?.glb);\n  return glb;\n}","map":{"version":3,"names":["VERSION","parseGLBSync","GLBLoader","dataType","batchType","name","id","module","version","extensions","mimeTypes","binary","parse","parseSync","options","glb","strict","arrayBuffer","byteOffset"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/gltf/dist/glb-loader.js"],"sourcesContent":["import { VERSION } from \"./lib/utils/version.js\";\nimport { parseGLBSync } from \"./lib/parsers/parse-glb.js\";\n/**\n * GLB Loader -\n * GLB is the binary container format for GLTF\n */\nexport const GLBLoader = {\n    dataType: null,\n    batchType: null,\n    name: 'GLB',\n    id: 'glb',\n    module: 'gltf',\n    version: VERSION,\n    extensions: ['glb'],\n    mimeTypes: ['model/gltf-binary'],\n    binary: true,\n    parse,\n    parseSync,\n    options: {\n        glb: {\n            strict: false // Enables deprecated XVIZ support (illegal CHUNK formats)\n        }\n    }\n};\nasync function parse(arrayBuffer, options) {\n    return parseSync(arrayBuffer, options);\n}\nfunction parseSync(arrayBuffer, options) {\n    const { byteOffset = 0 } = options || {};\n    const glb = {};\n    parseGLBSync(glb, arrayBuffer, byteOffset, options?.glb);\n    return glb;\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,wBAAwB;AAChD,SAASC,YAAY,QAAQ,4BAA4B;AACzD;AACA;AACA;AACA;AACA,OAAO,MAAMC,SAAS,GAAG;EACrBC,QAAQ,EAAE,IAAI;EACdC,SAAS,EAAE,IAAI;EACfC,IAAI,EAAE,KAAK;EACXC,EAAE,EAAE,KAAK;EACTC,MAAM,EAAE,MAAM;EACdC,OAAO,EAAER,OAAO;EAChBS,UAAU,EAAE,CAAC,KAAK,CAAC;EACnBC,SAAS,EAAE,CAAC,mBAAmB,CAAC;EAChCC,MAAM,EAAE,IAAI;EACZC,KAAK;EACLC,SAAS;EACTC,OAAO,EAAE;IACLC,GAAG,EAAE;MACDC,MAAM,EAAE,KAAK,CAAC;IAClB;EACJ;AACJ,CAAC;AACD,eAAeJ,KAAKA,CAACK,WAAW,EAAEH,OAAO,EAAE;EACvC,OAAOD,SAAS,CAACI,WAAW,EAAEH,OAAO,CAAC;AAC1C;AACA,SAASD,SAASA,CAACI,WAAW,EAAEH,OAAO,EAAE;EACrC,MAAM;IAAEI,UAAU,GAAG;EAAE,CAAC,GAAGJ,OAAO,IAAI,CAAC,CAAC;EACxC,MAAMC,GAAG,GAAG,CAAC,CAAC;EACdd,YAAY,CAACc,GAAG,EAAEE,WAAW,EAAEC,UAAU,EAAEJ,OAAO,EAAEC,GAAG,CAAC;EACxD,OAAOA,GAAG;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}