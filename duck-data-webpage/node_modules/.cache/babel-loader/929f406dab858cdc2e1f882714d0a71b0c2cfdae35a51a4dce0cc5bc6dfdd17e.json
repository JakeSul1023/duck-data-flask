{"ast":null,"code":"// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/**\n * Extracts a table suitable for `console.table()` from a shader layout to assist in debugging.\n * @param layout shader layout\n * @param name app should provide the most meaningful name, usually the model or pipeline name / id.\n * @returns\n */\nexport function getDebugTableForShaderLayout(layout, name) {\n  const table = {};\n  const header = 'Values'; // '`Shader Layout for ${name}`;\n  if (layout.attributes.length === 0 && !layout.varyings?.length) {\n    return {\n      'No attributes or varyings': {\n        [header]: 'N/A'\n      }\n    };\n  }\n  for (const attributeDeclaration of layout.attributes) {\n    if (attributeDeclaration) {\n      const glslDeclaration = `${attributeDeclaration.location} ${attributeDeclaration.name}: ${attributeDeclaration.type}`;\n      table[`in ${glslDeclaration}`] = {\n        [header]: attributeDeclaration.stepMode || 'vertex'\n      };\n    }\n  }\n  for (const varyingDeclaration of layout.varyings || []) {\n    const glslDeclaration = `${varyingDeclaration.location} ${varyingDeclaration.name}`;\n    table[`out ${glslDeclaration}`] = {\n      [header]: JSON.stringify(varyingDeclaration)\n    };\n  }\n  return table;\n}\n//# sourceMappingURL=debug-shader-layout.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}