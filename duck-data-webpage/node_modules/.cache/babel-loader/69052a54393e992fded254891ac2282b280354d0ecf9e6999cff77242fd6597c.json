{"ast":null,"code":"// probe.gl, MIT license\nfunction getStorage(type) {\n  try {\n    const storage = window[type];\n    const x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return storage;\n  } catch (e) {\n    return null;\n  }\n}\n// Store keys in local storage via simple interface\nexport class LocalStorage {\n  constructor(id, defaultConfig, type = 'sessionStorage') {\n    this.storage = getStorage(type);\n    this.id = id;\n    this.config = defaultConfig;\n    this._loadConfiguration();\n  }\n  getConfiguration() {\n    return this.config;\n  }\n  setConfiguration(configuration) {\n    Object.assign(this.config, configuration);\n    if (this.storage) {\n      const serialized = JSON.stringify(this.config);\n      this.storage.setItem(this.id, serialized);\n    }\n  }\n  // Get config from persistent store, if available\n  _loadConfiguration() {\n    let configuration = {};\n    if (this.storage) {\n      const serializedConfiguration = this.storage.getItem(this.id);\n      configuration = serializedConfiguration ? JSON.parse(serializedConfiguration) : {};\n    }\n    Object.assign(this.config, configuration);\n    return this;\n  }\n}","map":{"version":3,"names":["getStorage","type","storage","window","x","setItem","removeItem","e","LocalStorage","constructor","id","defaultConfig","config","_loadConfiguration","getConfiguration","setConfiguration","configuration","Object","assign","serialized","JSON","stringify","serializedConfiguration","getItem","parse"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@probe.gl\\log\\src\\utils\\local-storage.ts"],"sourcesContent":["// probe.gl, MIT license\n\nexport type StorageType = 'sessionStorage' | 'localStorage';\n\nfunction getStorage(type: StorageType): Storage | null {\n  try {\n    const storage: Storage = window[type];\n    const x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return storage;\n  } catch (e) {\n    return null;\n  }\n}\n\n// Store keys in local storage via simple interface\nexport class LocalStorage<Configuration extends {}> {\n  storage: Storage | null;\n  id: string;\n  config: Required<Configuration>;\n\n  constructor(\n    id: string,\n    defaultConfig: Required<Configuration>,\n    type: StorageType = 'sessionStorage'\n  ) {\n    this.storage = getStorage(type);\n    this.id = id;\n    this.config = defaultConfig;\n    this._loadConfiguration();\n  }\n\n  getConfiguration(): Required<Configuration> {\n    return this.config;\n  }\n\n  setConfiguration(configuration: Configuration): void {\n    Object.assign(this.config, configuration);\n    if (this.storage) {\n      const serialized = JSON.stringify(this.config);\n      this.storage.setItem(this.id, serialized);\n    }\n  }\n\n  // Get config from persistent store, if available\n  _loadConfiguration() {\n    let configuration = {};\n    if (this.storage) {\n      const serializedConfiguration = this.storage.getItem(this.id);\n      configuration = serializedConfiguration ? JSON.parse(serializedConfiguration) : {};\n    }\n    Object.assign(this.config, configuration);\n    return this;\n  }\n}\n"],"mappings":"AAAA;AAIA,SAASA,UAAUA,CAACC,IAAiB;EACnC,IAAI;IACF,MAAMC,OAAO,GAAYC,MAAM,CAACF,IAAI,CAAC;IACrC,MAAMG,CAAC,GAAG,kBAAkB;IAC5BF,OAAO,CAACG,OAAO,CAACD,CAAC,EAAEA,CAAC,CAAC;IACrBF,OAAO,CAACI,UAAU,CAACF,CAAC,CAAC;IACrB,OAAOF,OAAO;EAChB,CAAC,CAAC,OAAOK,CAAC,EAAE;IACV,OAAO,IAAI;EACb;AACF;AAEA;AACA,OAAM,MAAOC,YAAY;EAKvBC,YACEC,EAAU,EACVC,aAAsC,EACtCV,IAAA,GAAoB,gBAAgB;IAEpC,IAAI,CAACC,OAAO,GAAGF,UAAU,CAACC,IAAI,CAAC;IAC/B,IAAI,CAACS,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACE,MAAM,GAAGD,aAAa;IAC3B,IAAI,CAACE,kBAAkB,EAAE;EAC3B;EAEAC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACF,MAAM;EACpB;EAEAG,gBAAgBA,CAACC,aAA4B;IAC3CC,MAAM,CAACC,MAAM,CAAC,IAAI,CAACN,MAAM,EAAEI,aAAa,CAAC;IACzC,IAAI,IAAI,CAACd,OAAO,EAAE;MAChB,MAAMiB,UAAU,GAAGC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACT,MAAM,CAAC;MAC9C,IAAI,CAACV,OAAO,CAACG,OAAO,CAAC,IAAI,CAACK,EAAE,EAAES,UAAU,CAAC;IAC3C;EACF;EAEA;EACAN,kBAAkBA,CAAA;IAChB,IAAIG,aAAa,GAAG,EAAE;IACtB,IAAI,IAAI,CAACd,OAAO,EAAE;MAChB,MAAMoB,uBAAuB,GAAG,IAAI,CAACpB,OAAO,CAACqB,OAAO,CAAC,IAAI,CAACb,EAAE,CAAC;MAC7DM,aAAa,GAAGM,uBAAuB,GAAGF,IAAI,CAACI,KAAK,CAACF,uBAAuB,CAAC,GAAG,EAAE;IACpF;IACAL,MAAM,CAACC,MAAM,CAAC,IAAI,CAACN,MAAM,EAAEI,aAAa,CAAC;IACzC,OAAO,IAAI;EACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}