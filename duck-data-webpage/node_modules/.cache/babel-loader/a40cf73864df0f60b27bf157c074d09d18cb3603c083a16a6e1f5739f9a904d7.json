{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport main from \"./solid-polygon-layer-vertex-main.glsl.js\";\nexport default `\\\n#version 300 es\n#define SHADER_NAME solid-polygon-layer-vertex-shader-side\n#define IS_SIDE_VERTEX\nin vec2 positions;\nin vec3 vertexPositions;\nin vec3 nextVertexPositions;\nin vec3 vertexPositions64Low;\nin vec3 nextVertexPositions64Low;\nin float elevations;\nin float instanceVertexValid;\n${main}\nvoid main(void) {\nif(instanceVertexValid < 0.5){\ngl_Position = vec4(0.);\nreturn;\n}\nPolygonProps props;\nvec3 pos;\nvec3 pos64Low;\nvec3 nextPos;\nvec3 nextPos64Low;\n#if RING_WINDING_ORDER_CW == 1\npos = vertexPositions;\npos64Low = vertexPositions64Low;\nnextPos = nextVertexPositions;\nnextPos64Low = nextVertexPositions64Low;\n#else\npos = nextVertexPositions;\npos64Low = nextVertexPositions64Low;\nnextPos = vertexPositions;\nnextPos64Low = vertexPositions64Low;\n#endif\nprops.positions = mix(pos, nextPos, positions.x);\nprops.positions64Low = mix(pos64Low, nextPos64Low, positions.x);\nprops.normal = vec3(\npos.y - nextPos.y + (pos64Low.y - nextPos64Low.y),\nnextPos.x - pos.x + (nextPos64Low.x - pos64Low.x),\n0.0);\nprops.elevations = elevations * positions.y;\ncalculatePosition(props);\n}\n`;","map":{"version":3,"names":["main"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\layers\\src\\solid-polygon-layer\\solid-polygon-layer-vertex-side.glsl.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport main from './solid-polygon-layer-vertex-main.glsl';\n\nexport default `\\\n#version 300 es\n#define SHADER_NAME solid-polygon-layer-vertex-shader-side\n#define IS_SIDE_VERTEX\n\nin vec2 positions;\n\nin vec3 vertexPositions;\nin vec3 nextVertexPositions;\nin vec3 vertexPositions64Low;\nin vec3 nextVertexPositions64Low;\nin float elevations;\nin float instanceVertexValid;\n\n${main}\n\nvoid main(void) {\n  if(instanceVertexValid < 0.5){\n    gl_Position = vec4(0.);\n    return;\n  }\n\n  PolygonProps props;\n\n  vec3 pos;\n  vec3 pos64Low;\n  vec3 nextPos;\n  vec3 nextPos64Low;\n\n  #if RING_WINDING_ORDER_CW == 1\n    pos = vertexPositions;\n    pos64Low = vertexPositions64Low;\n    nextPos = nextVertexPositions;\n    nextPos64Low = nextVertexPositions64Low;\n  #else\n    pos = nextVertexPositions;\n    pos64Low = nextVertexPositions64Low;\n    nextPos = vertexPositions;\n    nextPos64Low = vertexPositions64Low;\n  #endif\n\n  props.positions = mix(pos, nextPos, positions.x);\n  props.positions64Low = mix(pos64Low, nextPos64Low, positions.x);\n\n  props.normal = vec3(\n    pos.y - nextPos.y + (pos64Low.y - nextPos64Low.y),\n    nextPos.x - pos.x + (nextPos64Low.x - pos64Low.x),\n    0.0);\n\n  props.elevations = elevations * positions.y;\n\n  calculatePosition(props);\n}\n`;\n"],"mappings":"AAAA;AACA;AACA;AAEA,OAAOA,IAAI;AAEX,eAAe;;;;;;;;;;;EAcbA,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAuCL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}