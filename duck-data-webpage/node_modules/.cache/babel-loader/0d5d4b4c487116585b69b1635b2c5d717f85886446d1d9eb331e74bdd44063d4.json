{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { encodeGLBSync } from \"./lib/encoders/encode-glb.js\";\nimport { VERSION } from \"./lib/utils/version.js\";\n/**\n * GLB exporter\n * GLB is the binary container format for GLTF\n */\nexport const GLBWriter = {\n  name: 'GLB',\n  id: 'glb',\n  module: 'gltf',\n  version: VERSION,\n  extensions: ['glb'],\n  mimeTypes: ['model/gltf-binary'],\n  binary: true,\n  options: {\n    glb: {}\n  },\n  encode: async (glb, options = {}) => encodeSync(glb, options),\n  encodeSync\n};\nfunction encodeSync(glb, options) {\n  const {\n    byteOffset = 0\n  } = options ?? {};\n  // Calculate length and allocate buffer\n  const byteLength = encodeGLBSync(glb, null, byteOffset, options);\n  const arrayBuffer = new ArrayBuffer(byteLength);\n  // Encode into buffer\n  const dataView = new DataView(arrayBuffer);\n  encodeGLBSync(glb, dataView, byteOffset, options);\n  return arrayBuffer;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}