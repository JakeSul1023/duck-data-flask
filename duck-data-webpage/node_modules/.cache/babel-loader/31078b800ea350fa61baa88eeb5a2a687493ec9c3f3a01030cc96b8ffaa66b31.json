{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Forked from https://github.com/mapbox/geojson-vt under compatible ISC license\n/**\n * Transforms the coordinates of each protoFeature in the given protoTile from\n * mercator-projected space into (extent x extent) protoTile space.\n */\nexport function transformTile(protoTile, extent) {\n  if (protoTile.transformed) {\n    return protoTile;\n  }\n  const z2 = 1 << protoTile.z;\n  const tx = protoTile.x;\n  const ty = protoTile.y;\n  for (const protoFeature of protoTile.protoFeatures) {\n    const geom = protoFeature.geometry;\n    const simplifiedType = protoFeature.simplifiedType;\n    protoFeature.geometry = [];\n    if (simplifiedType === 1) {\n      for (let j = 0; j < geom.length; j += 2) {\n        protoFeature.geometry.push(transformPoint(geom[j], geom[j + 1], extent, z2, tx, ty));\n      }\n    } else {\n      for (let j = 0; j < geom.length; j++) {\n        const ring = [];\n        for (let k = 0; k < geom[j].length; k += 2) {\n          ring.push(transformPoint(geom[j][k], geom[j][k + 1], extent, z2, tx, ty));\n        }\n        protoFeature.geometry.push(ring);\n      }\n    }\n  }\n  protoTile.transformed = true;\n  return protoTile;\n}\n// eslint-disable-next-line max-params\nfunction transformPoint(x, y, extent, z2, tx, ty) {\n  return [Math.round(extent * (x * z2 - tx)), Math.round(extent * (y * z2 - ty))];\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}