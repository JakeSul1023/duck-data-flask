{"ast":null,"code":"// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// NOTE: Modules other than `@luma.gl/webgl` should not import `GL` from\n// `@luma.gl/constants`. Locally we use `GLEnum` instead of `GL` to avoid\n// conflicts with the `babel-plugin-inline-webgl-constants` plugin.\n// eslint-disable-next-line no-shadow\nexport var GLEnum;\n(function (GLEnum) {\n  GLEnum[GLEnum[\"POINTS\"] = 0] = \"POINTS\";\n  GLEnum[GLEnum[\"LINES\"] = 1] = \"LINES\";\n  GLEnum[GLEnum[\"LINE_LOOP\"] = 2] = \"LINE_LOOP\";\n  GLEnum[GLEnum[\"LINE_STRIP\"] = 3] = \"LINE_STRIP\";\n  GLEnum[GLEnum[\"TRIANGLES\"] = 4] = \"TRIANGLES\";\n  GLEnum[GLEnum[\"TRIANGLE_STRIP\"] = 5] = \"TRIANGLE_STRIP\";\n  GLEnum[GLEnum[\"TRIANGLE_FAN\"] = 6] = \"TRIANGLE_FAN\";\n})(GLEnum || (GLEnum = {}));\nexport function convertGLDrawModeToTopology(drawMode) {\n  // prettier-ignore\n  switch (drawMode) {\n    case GLEnum.POINTS:\n      return 'point-list';\n    case GLEnum.LINES:\n      return 'line-list';\n    case GLEnum.LINE_STRIP:\n      return 'line-strip';\n    case GLEnum.TRIANGLES:\n      return 'triangle-list';\n    case GLEnum.TRIANGLE_STRIP:\n      return 'triangle-strip';\n    default:\n      throw new Error(String(drawMode));\n  }\n}\n//# sourceMappingURL=gl-utils.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}