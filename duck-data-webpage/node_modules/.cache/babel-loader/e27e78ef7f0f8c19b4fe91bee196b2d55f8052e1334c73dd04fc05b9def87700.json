{"ast":null,"code":"import { VERSION } from \"./lib/utils/version.js\";\nimport { parseGLBSync } from \"./lib/parsers/parse-glb.js\";\n/**\n * GLB Loader -\n * GLB is the binary container format for GLTF\n */\nexport const GLBLoader = {\n  dataType: null,\n  batchType: null,\n  name: 'GLB',\n  id: 'glb',\n  module: 'gltf',\n  version: VERSION,\n  extensions: ['glb'],\n  mimeTypes: ['model/gltf-binary'],\n  binary: true,\n  parse,\n  parseSync,\n  options: {\n    glb: {\n      strict: false // Enables deprecated XVIZ support (illegal CHUNK formats)\n    }\n  }\n};\nasync function parse(arrayBuffer, options) {\n  return parseSync(arrayBuffer, options);\n}\nfunction parseSync(arrayBuffer, options) {\n  const {\n    byteOffset = 0\n  } = options || {};\n  const glb = {};\n  parseGLBSync(glb, arrayBuffer, byteOffset, options?.glb);\n  return glb;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}