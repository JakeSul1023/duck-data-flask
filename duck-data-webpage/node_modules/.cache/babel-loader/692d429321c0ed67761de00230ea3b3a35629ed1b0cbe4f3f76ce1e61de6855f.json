{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { mergeLoaderOptions } from '@loaders.gl/loader-utils';\nimport { XMLLoader } from \"./xml-loader.js\";\n/**\n * Loader for HTML files\n * Essentially a copy of the XMLLoader with different mime types, file extensions and content tests.\n * This split enables applications can control whether they want HTML responses to be parsed by the XML loader or not.\n * This loader does not have any additional understanding of the structure of HTML or the document.\n */\nexport const HTMLLoader = {\n  ...XMLLoader,\n  name: 'HTML',\n  id: 'html',\n  extensions: ['html', 'htm'],\n  mimeTypes: ['text/html'],\n  testText: testHTMLFile,\n  parse: async (arrayBuffer, options) => parseTextSync(new TextDecoder().decode(arrayBuffer), options),\n  parseTextSync: (text, options) => parseTextSync(text, options)\n};\nfunction testHTMLFile(text) {\n  // TODO - There could be space first.\n  return text.startsWith('<html');\n}\nfunction parseTextSync(text, options) {\n  // fast-xml-parser can recognize HTML entities\n  // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#htmlentities\n  // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/5.Entities.md\n  options = mergeLoaderOptions(options, {\n    xml: {\n      _parser: 'fast-xml-parser',\n      _fastXML: {\n        htmlEntities: true\n      }\n    }\n  });\n  return XMLLoader.parseTextSync?.(text, options);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}