{"ast":null,"code":"// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/** Holds a list of key frames (timestamped values) */\nexport class KeyFrames {\n  startIndex = -1;\n  endIndex = -1;\n  factor = 0;\n  times = [];\n  values = [];\n  _lastTime = -1;\n  constructor(keyFrames) {\n    this.setKeyFrames(keyFrames);\n    this.setTime(0);\n  }\n  setKeyFrames(keyFrames) {\n    const numKeys = keyFrames.length;\n    this.times.length = numKeys;\n    this.values.length = numKeys;\n    for (let i = 0; i < numKeys; ++i) {\n      this.times[i] = keyFrames[i][0];\n      this.values[i] = keyFrames[i][1];\n    }\n    this._calculateKeys(this._lastTime);\n  }\n  setTime(time) {\n    time = Math.max(0, time);\n    if (time !== this._lastTime) {\n      this._calculateKeys(time);\n      this._lastTime = time;\n    }\n  }\n  getStartTime() {\n    return this.times[this.startIndex];\n  }\n  getEndTime() {\n    return this.times[this.endIndex];\n  }\n  getStartData() {\n    return this.values[this.startIndex];\n  }\n  getEndData() {\n    return this.values[this.endIndex];\n  }\n  _calculateKeys(time) {\n    let index = 0;\n    const numKeys = this.times.length;\n    for (index = 0; index < numKeys - 2; ++index) {\n      if (this.times[index + 1] > time) {\n        break;\n      }\n    }\n    this.startIndex = index;\n    this.endIndex = index + 1;\n    const startTime = this.times[this.startIndex];\n    const endTime = this.times[this.endIndex];\n    this.factor = Math.min(Math.max(0, (time - startTime) / (endTime - startTime)), 1);\n  }\n}","map":{"version":3,"names":["KeyFrames","startIndex","endIndex","factor","times","values","_lastTime","constructor","keyFrames","setKeyFrames","setTime","numKeys","length","i","_calculateKeys","time","Math","max","getStartTime","getEndTime","getStartData","getEndData","index","startTime","endTime","min"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@luma.gl\\engine\\src\\animation\\key-frames.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// keyframes\nexport type KeyFrame<T> = [number, T];\n\n/** Holds a list of key frames (timestamped values) */\nexport class KeyFrames<T = number> {\n  startIndex: number = -1;\n  endIndex: number = -1;\n  factor: number = 0;\n  times: number[] = [];\n  values: T[] = [];\n  private _lastTime = -1;\n\n  constructor(keyFrames: KeyFrame<T>[]) {\n    this.setKeyFrames(keyFrames);\n    this.setTime(0);\n  }\n\n  setKeyFrames(keyFrames: KeyFrame<T>[]): void {\n    const numKeys = keyFrames.length;\n    this.times.length = numKeys;\n    this.values.length = numKeys;\n\n    for (let i = 0; i < numKeys; ++i) {\n      this.times[i] = keyFrames[i][0];\n      this.values[i] = keyFrames[i][1];\n    }\n\n    this._calculateKeys(this._lastTime);\n  }\n\n  setTime(time: number): void {\n    time = Math.max(0, time);\n\n    if (time !== this._lastTime) {\n      this._calculateKeys(time);\n      this._lastTime = time;\n    }\n  }\n\n  getStartTime(): number {\n    return this.times[this.startIndex];\n  }\n\n  getEndTime(): number {\n    return this.times[this.endIndex];\n  }\n\n  getStartData(): T {\n    return this.values[this.startIndex];\n  }\n\n  getEndData(): T {\n    return this.values[this.endIndex];\n  }\n\n  _calculateKeys(time: number): void {\n    let index = 0;\n    const numKeys = this.times.length;\n\n    for (index = 0; index < numKeys - 2; ++index) {\n      if (this.times[index + 1] > time) {\n        break;\n      }\n    }\n\n    this.startIndex = index;\n    this.endIndex = index + 1;\n\n    const startTime = this.times[this.startIndex];\n    const endTime = this.times[this.endIndex];\n    this.factor = Math.min(Math.max(0, (time - startTime) / (endTime - startTime)), 1);\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AAKA;AACA,OAAM,MAAOA,SAAS;EACpBC,UAAU,GAAW,CAAC,CAAC;EACvBC,QAAQ,GAAW,CAAC,CAAC;EACrBC,MAAM,GAAW,CAAC;EAClBC,KAAK,GAAa,EAAE;EACpBC,MAAM,GAAQ,EAAE;EACRC,SAAS,GAAG,CAAC,CAAC;EAEtBC,YAAYC,SAAwB;IAClC,IAAI,CAACC,YAAY,CAACD,SAAS,CAAC;IAC5B,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC;EACjB;EAEAD,YAAYA,CAACD,SAAwB;IACnC,MAAMG,OAAO,GAAGH,SAAS,CAACI,MAAM;IAChC,IAAI,CAACR,KAAK,CAACQ,MAAM,GAAGD,OAAO;IAC3B,IAAI,CAACN,MAAM,CAACO,MAAM,GAAGD,OAAO;IAE5B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,OAAO,EAAE,EAAEE,CAAC,EAAE;MAChC,IAAI,CAACT,KAAK,CAACS,CAAC,CAAC,GAAGL,SAAS,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC;MAC/B,IAAI,CAACR,MAAM,CAACQ,CAAC,CAAC,GAAGL,SAAS,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC;IAEA,IAAI,CAACC,cAAc,CAAC,IAAI,CAACR,SAAS,CAAC;EACrC;EAEAI,OAAOA,CAACK,IAAY;IAClBA,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEF,IAAI,CAAC;IAExB,IAAIA,IAAI,KAAK,IAAI,CAACT,SAAS,EAAE;MAC3B,IAAI,CAACQ,cAAc,CAACC,IAAI,CAAC;MACzB,IAAI,CAACT,SAAS,GAAGS,IAAI;IACvB;EACF;EAEAG,YAAYA,CAAA;IACV,OAAO,IAAI,CAACd,KAAK,CAAC,IAAI,CAACH,UAAU,CAAC;EACpC;EAEAkB,UAAUA,CAAA;IACR,OAAO,IAAI,CAACf,KAAK,CAAC,IAAI,CAACF,QAAQ,CAAC;EAClC;EAEAkB,YAAYA,CAAA;IACV,OAAO,IAAI,CAACf,MAAM,CAAC,IAAI,CAACJ,UAAU,CAAC;EACrC;EAEAoB,UAAUA,CAAA;IACR,OAAO,IAAI,CAAChB,MAAM,CAAC,IAAI,CAACH,QAAQ,CAAC;EACnC;EAEAY,cAAcA,CAACC,IAAY;IACzB,IAAIO,KAAK,GAAG,CAAC;IACb,MAAMX,OAAO,GAAG,IAAI,CAACP,KAAK,CAACQ,MAAM;IAEjC,KAAKU,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGX,OAAO,GAAG,CAAC,EAAE,EAAEW,KAAK,EAAE;MAC5C,IAAI,IAAI,CAAClB,KAAK,CAACkB,KAAK,GAAG,CAAC,CAAC,GAAGP,IAAI,EAAE;QAChC;MACF;IACF;IAEA,IAAI,CAACd,UAAU,GAAGqB,KAAK;IACvB,IAAI,CAACpB,QAAQ,GAAGoB,KAAK,GAAG,CAAC;IAEzB,MAAMC,SAAS,GAAG,IAAI,CAACnB,KAAK,CAAC,IAAI,CAACH,UAAU,CAAC;IAC7C,MAAMuB,OAAO,GAAG,IAAI,CAACpB,KAAK,CAAC,IAAI,CAACF,QAAQ,CAAC;IACzC,IAAI,CAACC,MAAM,GAAGa,IAAI,CAACS,GAAG,CAACT,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CAACF,IAAI,GAAGQ,SAAS,KAAKC,OAAO,GAAGD,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;EACpF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}