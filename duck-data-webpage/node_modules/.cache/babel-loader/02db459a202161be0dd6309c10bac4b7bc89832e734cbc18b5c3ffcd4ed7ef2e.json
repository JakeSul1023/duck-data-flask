{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport Viewport from \"../viewports/viewport.js\";\nimport { getMeterZoom } from '@math.gl/web-mercator';\nimport { Matrix4, _SphericalCoordinates as SphericalCoordinates } from '@math.gl/core';\nexport default class FirstPersonViewport extends Viewport {\n  constructor(props) {\n    // TODO - push direction handling into Matrix4.lookAt\n    const {\n      longitude,\n      latitude,\n      modelMatrix,\n      bearing = 0,\n      pitch = 0,\n      up = [0, 0, 1]\n    } = props;\n    // Always calculate direction from bearing and pitch\n    const spherical = new SphericalCoordinates({\n      bearing,\n      // Avoid \"pixel project matrix not invertible\" error\n      pitch: pitch === -90 ? 0.0001 : 90 + pitch\n    });\n    const dir = spherical.toVector3().normalize();\n    // Direction is relative to model coordinates, of course\n    const center = modelMatrix ? new Matrix4(modelMatrix).transformAsVector(dir) : dir;\n    // Just the direction. All the positioning is done in viewport.js\n    const zoom = Number.isFinite(latitude) ? getMeterZoom({\n      latitude: latitude\n    }) : 0;\n    const scale = Math.pow(2, zoom);\n    const viewMatrix = new Matrix4().lookAt({\n      eye: [0, 0, 0],\n      center,\n      up\n    }).scale(scale);\n    super({\n      ...props,\n      zoom,\n      viewMatrix\n    });\n    this.latitude = latitude;\n    this.longitude = longitude;\n  }\n}\n//# sourceMappingURL=first-person-viewport.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}