{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Forked from https://github.com/mapbox/geojson-vt under compatible ISC license\nimport { projectToLngLat, convertToLocalCoordinates } from \"../utils/geometry-utils.js\";\n// eslint-disable-next-line max-statements, complexity\nexport function convertTileToGeoJSON(protoTile, props) {\n  const features = [];\n  for (const rawFeature of protoTile.protoFeatures) {\n    if (!rawFeature || !rawFeature.geometry) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    let type;\n    let coordinates;\n    // raw geometry\n    switch (rawFeature.simplifiedType) {\n      case 1:\n        if (rawFeature.geometry.length === 1) {\n          type = 'Point';\n          coordinates = rawFeature.geometry[0];\n        } else {\n          type = 'MultiPoint';\n          coordinates = rawFeature.geometry;\n        }\n        break;\n      case 2:\n        if (rawFeature.geometry.length === 1) {\n          type = 'LineString';\n          coordinates = rawFeature.geometry[0];\n        } else {\n          type = 'MultiLineString';\n          coordinates = rawFeature.geometry;\n        }\n        break;\n      case 3:\n        if (rawFeature.geometry.length > 1) {\n          type = 'MultiPolygon';\n          coordinates = [rawFeature.geometry];\n        } else {\n          type = 'Polygon';\n          coordinates = rawFeature.geometry;\n        }\n        break;\n      default:\n        throw new Error(`${rawFeature.simplifiedType}is not a valid simplified type`);\n    }\n    switch (props.coordinates) {\n      case 'EPSG:4326':\n      case 'wgs84':\n        projectToLngLat(coordinates, props.tileIndex, props.extent);\n        break;\n      default:\n        convertToLocalCoordinates(coordinates, props.extent);\n        break;\n    }\n    const feature = {\n      type: 'Feature',\n      geometry: {\n        type,\n        coordinates\n      },\n      properties: rawFeature.tags || {},\n      id: rawFeature.id\n    };\n    features.push(feature);\n  }\n  if (features.length === 0) {\n    return null;\n  }\n  const table = {\n    shape: 'geojson-table',\n    type: 'FeatureCollection',\n    features\n  };\n  return table;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}