{"ast":null,"code":"// probe.gl, MIT license\nimport { window, process, isBrowser } from '@probe.gl/env';\n/** Get best timer available. */\nexport function getHiResTimestamp() {\n  let timestamp;\n  if (isBrowser() && window.performance) {\n    timestamp = window?.performance?.now?.();\n  } else if ('hrtime' in process) {\n    // @ts-ignore\n    const timeParts = process?.hrtime?.();\n    timestamp = timeParts[0] * 1000 + timeParts[1] / 1e6;\n  } else {\n    timestamp = Date.now();\n  }\n  return timestamp;\n}","map":{"version":3,"names":["window","process","isBrowser","getHiResTimestamp","timestamp","performance","now","timeParts","hrtime","Date"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@probe.gl\\log\\src\\utils\\hi-res-timestamp.ts"],"sourcesContent":["// probe.gl, MIT license\n\nimport {window, process, isBrowser} from '@probe.gl/env';\n\n/** Get best timer available. */\nexport function getHiResTimestamp() {\n  let timestamp;\n  if (isBrowser() && window.performance) {\n    timestamp = window?.performance?.now?.();\n  } else if ('hrtime' in process) {\n    // @ts-ignore\n    const timeParts = process?.hrtime?.();\n    timestamp = timeParts[0] * 1000 + timeParts[1] / 1e6;\n  } else {\n    timestamp = Date.now();\n  }\n\n  return timestamp;\n}\n"],"mappings":"AAAA;AAEA,SAAQA,MAAM,EAAEC,OAAO,EAAEC,SAAS,QAAO,eAAe;AAExD;AACA,OAAM,SAAUC,iBAAiBA,CAAA;EAC/B,IAAIC,SAAS;EACb,IAAIF,SAAS,EAAE,IAAIF,MAAM,CAACK,WAAW,EAAE;IACrCD,SAAS,GAAGJ,MAAM,EAAEK,WAAW,EAAEC,GAAG,GAAE,CAAE;EAC1C,CAAC,MAAM,IAAI,QAAQ,IAAIL,OAAO,EAAE;IAC9B;IACA,MAAMM,SAAS,GAAGN,OAAO,EAAEO,MAAM,GAAE,CAAE;IACrCJ,SAAS,GAAGG,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,GAAGA,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG;EACtD,CAAC,MAAM;IACLH,SAAS,GAAGK,IAAI,CAACH,GAAG,EAAE;EACxB;EAEA,OAAOF,SAAS;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}