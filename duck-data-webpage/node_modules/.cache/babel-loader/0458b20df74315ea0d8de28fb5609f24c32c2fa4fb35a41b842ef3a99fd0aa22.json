{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/**\n * Parses `data` using a specified loader\n * @param data\n * @param loaders\n * @param options\n * @param context\n */\n// implementation signature\nexport async function parseFromContext(data, loaders, options, context) {\n  return context._parse(data, loaders, options, context);\n}\n/**\n * Parses `data` synchronously using the specified loader, parse function provided via the loader context\n */\nexport function parseSyncFromContext(data, loader, options, context) {\n  if (!context._parseSync) {\n    throw new Error('parseSync');\n  }\n  return context._parseSync(data, loader, options, context);\n}\n/**\n * Parses `data` synchronously using a specified loader, parse function provided via the loader context\n */\nexport async function parseInBatchesFromContext(data, loader, options, context) {\n  if (!context._parseInBatches) {\n    throw new Error('parseInBatches');\n  }\n  return context._parseInBatches(data, loader, options, context);\n}","map":{"version":3,"names":["parseFromContext","data","loaders","options","context","_parse","parseSyncFromContext","loader","_parseSync","Error","parseInBatchesFromContext","_parseInBatches"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/loader-utils/dist/loader-types.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/**\n * Parses `data` using a specified loader\n * @param data\n * @param loaders\n * @param options\n * @param context\n */\n// implementation signature\nexport async function parseFromContext(data, loaders, options, context) {\n    return context._parse(data, loaders, options, context);\n}\n/**\n * Parses `data` synchronously using the specified loader, parse function provided via the loader context\n */\nexport function parseSyncFromContext(data, loader, options, context) {\n    if (!context._parseSync) {\n        throw new Error('parseSync');\n    }\n    return context._parseSync(data, loader, options, context);\n}\n/**\n * Parses `data` synchronously using a specified loader, parse function provided via the loader context\n */\nexport async function parseInBatchesFromContext(data, loader, options, context) {\n    if (!context._parseInBatches) {\n        throw new Error('parseInBatches');\n    }\n    return context._parseInBatches(data, loader, options, context);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeA,gBAAgBA,CAACC,IAAI,EAAEC,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAE;EACpE,OAAOA,OAAO,CAACC,MAAM,CAACJ,IAAI,EAAEC,OAAO,EAAEC,OAAO,EAAEC,OAAO,CAAC;AAC1D;AACA;AACA;AACA;AACA,OAAO,SAASE,oBAAoBA,CAACL,IAAI,EAAEM,MAAM,EAAEJ,OAAO,EAAEC,OAAO,EAAE;EACjE,IAAI,CAACA,OAAO,CAACI,UAAU,EAAE;IACrB,MAAM,IAAIC,KAAK,CAAC,WAAW,CAAC;EAChC;EACA,OAAOL,OAAO,CAACI,UAAU,CAACP,IAAI,EAAEM,MAAM,EAAEJ,OAAO,EAAEC,OAAO,CAAC;AAC7D;AACA;AACA;AACA;AACA,OAAO,eAAeM,yBAAyBA,CAACT,IAAI,EAAEM,MAAM,EAAEJ,OAAO,EAAEC,OAAO,EAAE;EAC5E,IAAI,CAACA,OAAO,CAACO,eAAe,EAAE;IAC1B,MAAM,IAAIF,KAAK,CAAC,gBAAgB,CAAC;EACrC;EACA,OAAOL,OAAO,CAACO,eAAe,CAACV,IAAI,EAAEM,MAAM,EAAEJ,OAAO,EAAEC,OAAO,CAAC;AAClE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}