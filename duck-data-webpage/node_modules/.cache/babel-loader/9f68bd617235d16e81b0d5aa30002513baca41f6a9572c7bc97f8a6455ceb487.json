{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { StreamingXMLParser } from \"./streaming-xml-parser.js\";\nimport { uncapitalizeKeys } from \"../xml-utils/uncapitalize.js\";\nimport { XMLParser as FastXMLParser } from 'fast-xml-parser';\nexport function parseXMLSync(text, options) {\n  if (options?._parser && options._parser !== 'fast-xml-parser') {\n    throw new Error(options?._parser);\n  }\n  const fastXMLOptions = {\n    // Default FastXML options\n    // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#allowbooleanattributes\n    allowBooleanAttributes: true,\n    // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#ignoredeclaration\n    ignoreDeclaration: true,\n    // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#removensprefix\n    removeNSPrefix: options?.removeNSPrefix,\n    // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#textnodename\n    textNodeName: options?.textNodeName,\n    // Let's application specify keys that are always arrays\n    isArray: (name, jpath, isLeafNode, isAttribute) => {\n      const array = Boolean(options?.arrayPaths?.some(path => jpath === path));\n      return array;\n    },\n    // Application overrides\n    ...options?._fastXML\n  };\n  const xml = fastParseXML(text, fastXMLOptions);\n  // Note - could be done with FastXML tag processing\n  return options?.uncapitalizeKeys ? uncapitalizeKeys(xml) : xml;\n}\nexport function fastParseXML(text, options) {\n  const parser = new FastXMLParser({\n    ignoreAttributes: false,\n    attributeNamePrefix: '',\n    ...options\n  });\n  const parsedXML = parser.parse(text);\n  return parsedXML;\n}\n/**\n * @todo Build a streaming XML parser based on sax-js\n * @param text\n * @param options\n * @returns\n */\nexport function parseXMLInBatches(text, options = {}) {\n  const parser = new StreamingXMLParser({\n    ...options,\n    strict: true\n  });\n  parser.write(text);\n  parser.close();\n  return parser.result;\n}","map":{"version":3,"names":["StreamingXMLParser","uncapitalizeKeys","XMLParser","FastXMLParser","parseXMLSync","text","options","_parser","Error","fastXMLOptions","allowBooleanAttributes","ignoreDeclaration","removeNSPrefix","textNodeName","isArray","name","jpath","isLeafNode","isAttribute","array","Boolean","arrayPaths","some","path","_fastXML","xml","fastParseXML","parser","ignoreAttributes","attributeNamePrefix","parsedXML","parse","parseXMLInBatches","strict","write","close","result"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/xml/dist/lib/parsers/parse-xml.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { StreamingXMLParser } from \"./streaming-xml-parser.js\";\nimport { uncapitalizeKeys } from \"../xml-utils/uncapitalize.js\";\nimport { XMLParser as FastXMLParser } from 'fast-xml-parser';\nexport function parseXMLSync(text, options) {\n    if (options?._parser && options._parser !== 'fast-xml-parser') {\n        throw new Error(options?._parser);\n    }\n    const fastXMLOptions = {\n        // Default FastXML options\n        // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#allowbooleanattributes\n        allowBooleanAttributes: true,\n        // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#ignoredeclaration\n        ignoreDeclaration: true,\n        // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#removensprefix\n        removeNSPrefix: options?.removeNSPrefix,\n        // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#textnodename\n        textNodeName: options?.textNodeName,\n        // Let's application specify keys that are always arrays\n        isArray: (name, jpath, isLeafNode, isAttribute) => {\n            const array = Boolean(options?.arrayPaths?.some((path) => jpath === path));\n            return array;\n        },\n        // Application overrides\n        ...options?._fastXML\n    };\n    const xml = fastParseXML(text, fastXMLOptions);\n    // Note - could be done with FastXML tag processing\n    return options?.uncapitalizeKeys ? uncapitalizeKeys(xml) : xml;\n}\nexport function fastParseXML(text, options) {\n    const parser = new FastXMLParser({\n        ignoreAttributes: false,\n        attributeNamePrefix: '',\n        ...options\n    });\n    const parsedXML = parser.parse(text);\n    return parsedXML;\n}\n/**\n * @todo Build a streaming XML parser based on sax-js\n * @param text\n * @param options\n * @returns\n */\nexport function parseXMLInBatches(text, options = {}) {\n    const parser = new StreamingXMLParser({\n        ...options,\n        strict: true\n    });\n    parser.write(text);\n    parser.close();\n    return parser.result;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,kBAAkB,QAAQ,2BAA2B;AAC9D,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,SAASC,SAAS,IAAIC,aAAa,QAAQ,iBAAiB;AAC5D,OAAO,SAASC,YAAYA,CAACC,IAAI,EAAEC,OAAO,EAAE;EACxC,IAAIA,OAAO,EAAEC,OAAO,IAAID,OAAO,CAACC,OAAO,KAAK,iBAAiB,EAAE;IAC3D,MAAM,IAAIC,KAAK,CAACF,OAAO,EAAEC,OAAO,CAAC;EACrC;EACA,MAAME,cAAc,GAAG;IACnB;IACA;IACAC,sBAAsB,EAAE,IAAI;IAC5B;IACAC,iBAAiB,EAAE,IAAI;IACvB;IACAC,cAAc,EAAEN,OAAO,EAAEM,cAAc;IACvC;IACAC,YAAY,EAAEP,OAAO,EAAEO,YAAY;IACnC;IACAC,OAAO,EAAEA,CAACC,IAAI,EAAEC,KAAK,EAAEC,UAAU,EAAEC,WAAW,KAAK;MAC/C,MAAMC,KAAK,GAAGC,OAAO,CAACd,OAAO,EAAEe,UAAU,EAAEC,IAAI,CAAEC,IAAI,IAAKP,KAAK,KAAKO,IAAI,CAAC,CAAC;MAC1E,OAAOJ,KAAK;IAChB,CAAC;IACD;IACA,GAAGb,OAAO,EAAEkB;EAChB,CAAC;EACD,MAAMC,GAAG,GAAGC,YAAY,CAACrB,IAAI,EAAEI,cAAc,CAAC;EAC9C;EACA,OAAOH,OAAO,EAAEL,gBAAgB,GAAGA,gBAAgB,CAACwB,GAAG,CAAC,GAAGA,GAAG;AAClE;AACA,OAAO,SAASC,YAAYA,CAACrB,IAAI,EAAEC,OAAO,EAAE;EACxC,MAAMqB,MAAM,GAAG,IAAIxB,aAAa,CAAC;IAC7ByB,gBAAgB,EAAE,KAAK;IACvBC,mBAAmB,EAAE,EAAE;IACvB,GAAGvB;EACP,CAAC,CAAC;EACF,MAAMwB,SAAS,GAAGH,MAAM,CAACI,KAAK,CAAC1B,IAAI,CAAC;EACpC,OAAOyB,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,iBAAiBA,CAAC3B,IAAI,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EAClD,MAAMqB,MAAM,GAAG,IAAI3B,kBAAkB,CAAC;IAClC,GAAGM,OAAO;IACV2B,MAAM,EAAE;EACZ,CAAC,CAAC;EACFN,MAAM,CAACO,KAAK,CAAC7B,IAAI,CAAC;EAClBsB,MAAM,CAACQ,KAAK,CAAC,CAAC;EACd,OAAOR,MAAM,CAACS,MAAM;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}