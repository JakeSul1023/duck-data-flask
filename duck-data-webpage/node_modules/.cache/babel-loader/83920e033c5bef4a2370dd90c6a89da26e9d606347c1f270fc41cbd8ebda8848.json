{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// LAYERS\nexport function getSchemaFromTileJSONLayer(layer) {\n  const fields = [];\n  if (layer.fields) {\n    for (const field of layer.fields) {\n      fields.push({\n        name: field.name,\n        type: getDataTypeFromTileJSONField(field),\n        metadata: getMetadataFromTileJSONField(field)\n      });\n    }\n  }\n  return {\n    metadata: getMetadataFromTileJSONLayer(layer),\n    fields\n  };\n}\nfunction getMetadataFromTileJSONLayer(layer) {\n  const metadata = {};\n  for (const [key, value] of Object.entries(layer)) {\n    if (key !== 'fields' && value) {\n      metadata[key] = JSON.stringify(value);\n    }\n  }\n  return metadata;\n}\n// FIELDS\nfunction getDataTypeFromTileJSONField(field) {\n  switch (field.type.toLowerCase()) {\n    case 'float32':\n      return 'float32';\n    case 'number':\n    case 'float64':\n      return 'float64';\n    case 'string':\n    case 'utf8':\n      return 'utf8';\n    case 'boolean':\n      return 'bool';\n    default:\n      return 'null';\n  }\n}\nfunction getMetadataFromTileJSONField(field) {\n  const metadata = {};\n  for (const [key, value] of Object.entries(field)) {\n    if (key !== 'name' && value) {\n      metadata[key] = JSON.stringify(value);\n    }\n  }\n  return metadata;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}