{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { COMPONENT_SYMBOL, PROP_TYPES_SYMBOL, ASYNC_ORIGINAL_SYMBOL, ASYNC_RESOLVED_SYMBOL, ASYNC_DEFAULTS_SYMBOL } from \"./constants.js\";\nimport { createProps } from \"./create-props.js\";\nlet counter = 0;\nclass Component {\n  constructor(...propObjects) {\n    // Merge supplied props with default props and freeze them.\n    /* eslint-disable prefer-spread */\n    this.props = createProps(this, propObjects);\n    /* eslint-enable prefer-spread */\n    this.id = this.props.id; // The layer's id, used for matching with layers from last render cycle\n    this.count = counter++; // Keep track of how many layer instances you are generating\n  }\n  // clone this layer with modified props\n  clone(newProps) {\n    const {\n      props\n    } = this;\n    // Async props cannot be copied with Object.assign, copy them separately\n    const asyncProps = {};\n    // See async props definition in create-props.js\n    for (const key in props[ASYNC_DEFAULTS_SYMBOL]) {\n      if (key in props[ASYNC_RESOLVED_SYMBOL]) {\n        asyncProps[key] = props[ASYNC_RESOLVED_SYMBOL][key];\n      } else if (key in props[ASYNC_ORIGINAL_SYMBOL]) {\n        asyncProps[key] = props[ASYNC_ORIGINAL_SYMBOL][key];\n      }\n    }\n    // Some custom layer implementation may not support multiple arguments in the constructor\n    // @ts-ignore\n    return new this.constructor({\n      ...props,\n      ...asyncProps,\n      ...newProps\n    });\n  }\n}\nComponent.componentName = 'Component';\nComponent.defaultProps = {};\nexport default Component;","map":{"version":3,"names":["COMPONENT_SYMBOL","PROP_TYPES_SYMBOL","ASYNC_ORIGINAL_SYMBOL","ASYNC_RESOLVED_SYMBOL","ASYNC_DEFAULTS_SYMBOL","createProps","counter","Component","constructor","propObjects","props","id","count","clone","newProps","asyncProps","key","componentName","defaultProps"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\core\\src\\lifecycle\\component.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {\n  COMPONENT_SYMBOL,\n  PROP_TYPES_SYMBOL,\n  ASYNC_ORIGINAL_SYMBOL,\n  ASYNC_RESOLVED_SYMBOL,\n  ASYNC_DEFAULTS_SYMBOL\n} from './constants';\nimport {PropType} from './prop-types';\nimport {createProps} from './create-props';\n\nlet counter = 0;\n\nexport type StatefulComponentProps<PropsT extends {}> = PropsT & {\n  id: string;\n  [COMPONENT_SYMBOL]: Component<PropsT>;\n  [PROP_TYPES_SYMBOL]: Record<string, PropType>;\n  [ASYNC_DEFAULTS_SYMBOL]: Partial<PropsT>;\n  [ASYNC_ORIGINAL_SYMBOL]: Partial<PropsT>;\n  [ASYNC_RESOLVED_SYMBOL]: Partial<PropsT>;\n};\n\nexport default class Component<PropsT extends {} = {}> {\n  static componentName: string = 'Component';\n  static defaultProps: Readonly<{}> = {};\n\n  id: string;\n  props: StatefulComponentProps<PropsT>;\n  count: number;\n\n  constructor(...propObjects: Partial<PropsT>[]) {\n    // Merge supplied props with default props and freeze them.\n    /* eslint-disable prefer-spread */\n    this.props = createProps<PropsT>(this, propObjects);\n    /* eslint-enable prefer-spread */\n\n    this.id = this.props.id; // The layer's id, used for matching with layers from last render cycle\n    this.count = counter++; // Keep track of how many layer instances you are generating\n  }\n\n  // clone this layer with modified props\n  clone(newProps: Partial<PropsT>) {\n    const {props} = this;\n\n    // Async props cannot be copied with Object.assign, copy them separately\n    const asyncProps: Partial<PropsT> = {};\n\n    // See async props definition in create-props.js\n    for (const key in props[ASYNC_DEFAULTS_SYMBOL]) {\n      if (key in props[ASYNC_RESOLVED_SYMBOL]) {\n        asyncProps[key] = props[ASYNC_RESOLVED_SYMBOL][key];\n      } else if (key in props[ASYNC_ORIGINAL_SYMBOL]) {\n        asyncProps[key] = props[ASYNC_ORIGINAL_SYMBOL][key];\n      }\n    }\n\n    // Some custom layer implementation may not support multiple arguments in the constructor\n    // @ts-ignore\n    return new this.constructor({...props, ...asyncProps, ...newProps});\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AAEA,SACEA,gBAAgB,EAChBC,iBAAiB,EACjBC,qBAAqB,EACrBC,qBAAqB,EACrBC,qBAAqB,QACtB;AAED,SAAQC,WAAW,QAAC;AAEpB,IAAIC,OAAO,GAAG,CAAC;AAWf,MAAqBC,SAAS;EAQ5BC,YAAY,GAAGC,WAA8B;IAC3C;IACA;IACA,IAAI,CAACC,KAAK,GAAGL,WAAW,CAAS,IAAI,EAAEI,WAAW,CAAC;IACnD;IAEA,IAAI,CAACE,EAAE,GAAG,IAAI,CAACD,KAAK,CAACC,EAAE,CAAC,CAAC;IACzB,IAAI,CAACC,KAAK,GAAGN,OAAO,EAAE,CAAC,CAAC;EAC1B;EAEA;EACAO,KAAKA,CAACC,QAAyB;IAC7B,MAAM;MAACJ;IAAK,CAAC,GAAG,IAAI;IAEpB;IACA,MAAMK,UAAU,GAAoB,EAAE;IAEtC;IACA,KAAK,MAAMC,GAAG,IAAIN,KAAK,CAACN,qBAAqB,CAAC,EAAE;MAC9C,IAAIY,GAAG,IAAIN,KAAK,CAACP,qBAAqB,CAAC,EAAE;QACvCY,UAAU,CAACC,GAAG,CAAC,GAAGN,KAAK,CAACP,qBAAqB,CAAC,CAACa,GAAG,CAAC;MACrD,CAAC,MAAM,IAAIA,GAAG,IAAIN,KAAK,CAACR,qBAAqB,CAAC,EAAE;QAC9Ca,UAAU,CAACC,GAAG,CAAC,GAAGN,KAAK,CAACR,qBAAqB,CAAC,CAACc,GAAG,CAAC;MACrD;IACF;IAEA;IACA;IACA,OAAO,IAAI,IAAI,CAACR,WAAW,CAAC;MAAC,GAAGE,KAAK;MAAE,GAAGK,UAAU;MAAE,GAAGD;IAAQ,CAAC,CAAC;EACrE;;AApCOP,SAAA,CAAAU,aAAa,GAAW,WAAW;AACnCV,SAAA,CAAAW,YAAY,GAAiB,EAAE;eAFnBX,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}