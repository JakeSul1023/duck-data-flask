{"ast":null,"code":"// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/** Holds a list of key frames (timestamped values) */\nexport class KeyFrames {\n  startIndex = -1;\n  endIndex = -1;\n  factor = 0;\n  times = [];\n  values = [];\n  _lastTime = -1;\n  constructor(keyFrames) {\n    this.setKeyFrames(keyFrames);\n    this.setTime(0);\n  }\n  setKeyFrames(keyFrames) {\n    const numKeys = keyFrames.length;\n    this.times.length = numKeys;\n    this.values.length = numKeys;\n    for (let i = 0; i < numKeys; ++i) {\n      this.times[i] = keyFrames[i][0];\n      this.values[i] = keyFrames[i][1];\n    }\n    this._calculateKeys(this._lastTime);\n  }\n  setTime(time) {\n    time = Math.max(0, time);\n    if (time !== this._lastTime) {\n      this._calculateKeys(time);\n      this._lastTime = time;\n    }\n  }\n  getStartTime() {\n    return this.times[this.startIndex];\n  }\n  getEndTime() {\n    return this.times[this.endIndex];\n  }\n  getStartData() {\n    return this.values[this.startIndex];\n  }\n  getEndData() {\n    return this.values[this.endIndex];\n  }\n  _calculateKeys(time) {\n    let index = 0;\n    const numKeys = this.times.length;\n    for (index = 0; index < numKeys - 2; ++index) {\n      if (this.times[index + 1] > time) {\n        break;\n      }\n    }\n    this.startIndex = index;\n    this.endIndex = index + 1;\n    const startTime = this.times[this.startIndex];\n    const endTime = this.times[this.endIndex];\n    this.factor = Math.min(Math.max(0, (time - startTime) / (endTime - startTime)), 1);\n  }\n}\n//# sourceMappingURL=key-frames.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}