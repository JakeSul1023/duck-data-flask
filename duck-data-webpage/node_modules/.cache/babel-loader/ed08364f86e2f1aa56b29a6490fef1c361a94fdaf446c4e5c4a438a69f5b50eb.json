{"ast":null,"code":"// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* eslint-disable camelcase */\n// Define local device feature strings to optimize minification\nconst texture_compression_bc = 'texture-compression-bc';\nconst texture_compression_astc = 'texture-compression-astc';\nconst texture_compression_etc2 = 'texture-compression-etc2';\nconst texture_compression_etc1_webgl = 'texture-compression-etc1-webgl';\nconst texture_compression_pvrtc_webgl = 'texture-compression-pvrtc-webgl';\nconst texture_compression_atc_webgl = 'texture-compression-atc-webgl';\nconst float32_renderable = 'float32-renderable-webgl';\nconst float16_renderable = 'float16-renderable-webgl';\nconst rgb9e5ufloat_renderable = 'rgb9e5ufloat-renderable-webgl';\nconst snorm8_renderable = 'snorm8-renderable-webgl';\nconst norm16_renderable = 'norm16-renderable-webgl';\nconst snorm16_renderable = 'snorm16-renderable-webgl';\nconst float32_filterable = 'float32-filterable';\nconst float16_filterable = 'float16-filterable-webgl';\nexport function getTextureFormatDefinition(format) {\n  const info = TEXTURE_FORMAT_TABLE[format];\n  if (!info) {\n    throw new Error(`Unsupported texture format ${format}`);\n  }\n  return info;\n}\nexport function getTextureFormatTable() {\n  return TEXTURE_FORMAT_TABLE;\n}\n// prettier-ignore\nconst TEXTURE_FORMAT_TABLE = {\n  // 8-bit formats\n  'r8unorm': {},\n  'r8snorm': {\n    render: snorm8_renderable\n  },\n  'r8uint': {},\n  'r8sint': {},\n  // 16-bit formats\n  'rg8unorm': {},\n  'rg8snorm': {\n    render: snorm8_renderable\n  },\n  'rg8uint': {},\n  'rg8sint': {},\n  'r16uint': {},\n  'r16sint': {},\n  'r16float': {\n    render: float16_renderable,\n    filter: 'float16-filterable-webgl'\n  },\n  'r16unorm-webgl': {\n    f: norm16_renderable\n  },\n  'r16snorm-webgl': {\n    f: snorm16_renderable\n  },\n  // Packed 16-bit formats\n  'rgba4unorm-webgl': {\n    channels: 'rgba',\n    bitsPerChannel: [4, 4, 4, 4],\n    packed: true\n  },\n  'rgb565unorm-webgl': {\n    channels: 'rgb',\n    bitsPerChannel: [5, 6, 5, 0],\n    packed: true\n  },\n  'rgb5a1unorm-webgl': {\n    channels: 'rgba',\n    bitsPerChannel: [5, 5, 5, 1],\n    packed: true\n  },\n  // 24-bit formats\n  'rgb8unorm-webgl': {},\n  'rgb8snorm-webgl': {},\n  // 32-bit formats  \n  'rgba8unorm': {},\n  'rgba8unorm-srgb': {},\n  'rgba8snorm': {\n    render: snorm8_renderable\n  },\n  'rgba8uint': {},\n  'rgba8sint': {},\n  // 32-bit, reverse colors, webgpu only\n  'bgra8unorm': {},\n  'bgra8unorm-srgb': {},\n  'rg16uint': {},\n  'rg16sint': {},\n  'rg16float': {\n    render: float16_renderable,\n    filter: float16_filterable\n  },\n  'rg16unorm-webgl': {\n    render: norm16_renderable\n  },\n  'rg16snorm-webgl': {\n    render: snorm16_renderable\n  },\n  'r32uint': {},\n  'r32sint': {},\n  'r32float': {\n    render: float32_renderable,\n    filter: float32_filterable\n  },\n  // Packed 32 bit formats\n  'rgb9e5ufloat': {\n    channels: 'rgb',\n    packed: true,\n    render: rgb9e5ufloat_renderable\n  },\n  // , filter: true},\n  'rg11b10ufloat': {\n    channels: 'rgb',\n    bitsPerChannel: [11, 11, 10, 0],\n    packed: true,\n    p: 1,\n    render: float32_renderable\n  },\n  'rgb10a2unorm': {\n    channels: 'rgba',\n    bitsPerChannel: [10, 10, 10, 2],\n    packed: true,\n    p: 1\n  },\n  'rgb10a2uint-webgl': {\n    channels: 'rgba',\n    bitsPerChannel: [10, 10, 10, 2],\n    packed: true,\n    p: 1,\n    wgpu: false\n  },\n  // 48-bit formats\n  'rgb16unorm-webgl': {\n    f: norm16_renderable\n  },\n  // rgb not renderable\n  'rgb16snorm-webgl': {\n    f: norm16_renderable\n  },\n  // rgb not renderable\n  // 64-bit formats\n  'rg32uint': {},\n  'rg32sint': {},\n  'rg32float': {\n    render: false,\n    filter: float32_filterable\n  },\n  'rgba16uint': {},\n  'rgba16sint': {},\n  'rgba16float': {\n    render: float16_renderable,\n    filter: float16_filterable\n  },\n  'rgba16unorm-webgl': {\n    render: norm16_renderable\n  },\n  'rgba16snorm-webgl': {\n    render: snorm16_renderable\n  },\n  // 96-bit formats (deprecated!)\n  'rgb32float-webgl': {\n    render: float32_renderable,\n    filter: float32_filterable\n  },\n  // 128-bit formats\n  'rgba32uint': {},\n  'rgba32sint': {},\n  'rgba32float': {\n    render: float32_renderable,\n    filter: float32_filterable\n  },\n  // Depth/stencil\n  // Depth and stencil formats\n  stencil8: {\n    attachment: 'stencil',\n    bitsPerChannel: [8, 0, 0, 0],\n    dataType: 'uint8'\n  },\n  'depth16unorm': {\n    attachment: 'depth',\n    bitsPerChannel: [16, 0, 0, 0],\n    dataType: 'uint16'\n  },\n  'depth24plus': {\n    attachment: 'depth',\n    bitsPerChannel: [24, 0, 0, 0],\n    dataType: 'uint32'\n  },\n  'depth32float': {\n    attachment: 'depth',\n    bitsPerChannel: [32, 0, 0, 0],\n    dataType: 'float32'\n  },\n  // The depth component of the \"depth24plus\" and \"depth24plus-stencil8\" formats may be implemented as either a 24-bit depth value or a \"depth32float\" value.\n  'depth24plus-stencil8': {\n    attachment: 'depth-stencil',\n    bitsPerChannel: [24, 8, 0, 0],\n    packed: true\n  },\n  // \"depth32float-stencil8\" feature\n  'depth32float-stencil8': {\n    attachment: 'depth-stencil',\n    bitsPerChannel: [32, 8, 0, 0],\n    packed: true\n  },\n  // BC compressed formats: check device.features.has(\"texture-compression-bc\");\n  'bc1-rgb-unorm-webgl': {\n    f: texture_compression_bc\n  },\n  'bc1-rgb-unorm-srgb-webgl': {\n    f: texture_compression_bc\n  },\n  'bc1-rgba-unorm': {\n    f: texture_compression_bc\n  },\n  'bc1-rgba-unorm-srgb': {\n    f: texture_compression_bc\n  },\n  'bc2-rgba-unorm': {\n    f: texture_compression_bc\n  },\n  'bc2-rgba-unorm-srgb': {\n    f: texture_compression_bc\n  },\n  'bc3-rgba-unorm': {\n    f: texture_compression_bc\n  },\n  'bc3-rgba-unorm-srgb': {\n    f: texture_compression_bc\n  },\n  'bc4-r-unorm': {\n    f: texture_compression_bc\n  },\n  'bc4-r-snorm': {\n    f: texture_compression_bc\n  },\n  'bc5-rg-unorm': {\n    f: texture_compression_bc\n  },\n  'bc5-rg-snorm': {\n    f: texture_compression_bc\n  },\n  'bc6h-rgb-ufloat': {\n    f: texture_compression_bc\n  },\n  'bc6h-rgb-float': {\n    f: texture_compression_bc\n  },\n  'bc7-rgba-unorm': {\n    f: texture_compression_bc\n  },\n  'bc7-rgba-unorm-srgb': {\n    f: texture_compression_bc\n  },\n  // WEBGL_compressed_texture_etc: device.features.has(\"texture-compression-etc2\")\n  // Note: Supposedly guaranteed availability compressed formats in WebGL2, but through CPU decompression\n  'etc2-rgb8unorm': {\n    f: texture_compression_etc2\n  },\n  'etc2-rgb8unorm-srgb': {\n    f: texture_compression_etc2\n  },\n  'etc2-rgb8a1unorm': {\n    f: texture_compression_etc2\n  },\n  'etc2-rgb8a1unorm-srgb': {\n    f: texture_compression_etc2\n  },\n  'etc2-rgba8unorm': {\n    f: texture_compression_etc2\n  },\n  'etc2-rgba8unorm-srgb': {\n    f: texture_compression_etc2\n  },\n  'eac-r11unorm': {\n    f: texture_compression_etc2\n  },\n  'eac-r11snorm': {\n    f: texture_compression_etc2\n  },\n  'eac-rg11unorm': {\n    f: texture_compression_etc2\n  },\n  'eac-rg11snorm': {\n    f: texture_compression_etc2\n  },\n  // X_ASTC compressed formats: device.features.has(\"texture-compression-astc\")\n  'astc-4x4-unorm': {\n    f: texture_compression_astc\n  },\n  'astc-4x4-unorm-srgb': {\n    f: texture_compression_astc\n  },\n  'astc-5x4-unorm': {\n    f: texture_compression_astc\n  },\n  'astc-5x4-unorm-srgb': {\n    f: texture_compression_astc\n  },\n  'astc-5x5-unorm': {\n    f: texture_compression_astc\n  },\n  'astc-5x5-unorm-srgb': {\n    f: texture_compression_astc\n  },\n  'astc-6x5-unorm': {\n    f: texture_compression_astc\n  },\n  'astc-6x5-unorm-srgb': {\n    f: texture_compression_astc\n  },\n  'astc-6x6-unorm': {\n    f: texture_compression_astc\n  },\n  'astc-6x6-unorm-srgb': {\n    f: texture_compression_astc\n  },\n  'astc-8x5-unorm': {\n    f: texture_compression_astc\n  },\n  'astc-8x5-unorm-srgb': {\n    f: texture_compression_astc\n  },\n  'astc-8x6-unorm': {\n    f: texture_compression_astc\n  },\n  'astc-8x6-unorm-srgb': {\n    f: texture_compression_astc\n  },\n  'astc-8x8-unorm': {\n    f: texture_compression_astc\n  },\n  'astc-8x8-unorm-srgb': {\n    f: texture_compression_astc\n  },\n  'astc-10x5-unorm': {\n    f: texture_compression_astc\n  },\n  'astc-10x5-unorm-srgb': {\n    f: texture_compression_astc\n  },\n  'astc-10x6-unorm': {\n    f: texture_compression_astc\n  },\n  'astc-10x6-unorm-srgb': {\n    f: texture_compression_astc\n  },\n  'astc-10x8-unorm': {\n    f: texture_compression_astc\n  },\n  'astc-10x8-unorm-srgb': {\n    f: texture_compression_astc\n  },\n  'astc-10x10-unorm': {\n    f: texture_compression_astc\n  },\n  'astc-10x10-unorm-srgb': {\n    f: texture_compression_astc\n  },\n  'astc-12x10-unorm': {\n    f: texture_compression_astc\n  },\n  'astc-12x10-unorm-srgb': {\n    f: texture_compression_astc\n  },\n  'astc-12x12-unorm': {\n    f: texture_compression_astc\n  },\n  'astc-12x12-unorm-srgb': {\n    f: texture_compression_astc\n  },\n  // WEBGL_compressed_texture_pvrtc\n  'pvrtc-rgb4unorm-webgl': {\n    f: texture_compression_pvrtc_webgl\n  },\n  'pvrtc-rgba4unorm-webgl': {\n    f: texture_compression_pvrtc_webgl\n  },\n  'pvrtc-rbg2unorm-webgl': {\n    f: texture_compression_pvrtc_webgl\n  },\n  'pvrtc-rgba2unorm-webgl': {\n    f: texture_compression_pvrtc_webgl\n  },\n  // WEBGL_compressed_texture_etc1\n  'etc1-rbg-unorm-webgl': {\n    f: texture_compression_etc1_webgl\n  },\n  // WEBGL_compressed_texture_atc\n  'atc-rgb-unorm-webgl': {\n    f: texture_compression_atc_webgl\n  },\n  'atc-rgba-unorm-webgl': {\n    f: texture_compression_atc_webgl\n  },\n  'atc-rgbai-unorm-webgl': {\n    f: texture_compression_atc_webgl\n  }\n};","map":{"version":3,"names":["texture_compression_bc","texture_compression_astc","texture_compression_etc2","texture_compression_etc1_webgl","texture_compression_pvrtc_webgl","texture_compression_atc_webgl","float32_renderable","float16_renderable","rgb9e5ufloat_renderable","snorm8_renderable","norm16_renderable","snorm16_renderable","float32_filterable","float16_filterable","getTextureFormatDefinition","format","info","TEXTURE_FORMAT_TABLE","Error","getTextureFormatTable","render","filter","f","channels","bitsPerChannel","packed","p","wgpu","stencil8","attachment","dataType"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@luma.gl\\core\\src\\gpu-type-utils\\texture-format-table.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {TextureFormat} from './texture-formats';\nimport {TextureFeature} from './texture-features';\nimport {TextureFormatInfo} from './texture-format-info';\n\n/* eslint-disable camelcase */\n\n// Define local device feature strings to optimize minification\nconst texture_compression_bc: TextureFeature = 'texture-compression-bc';\nconst texture_compression_astc: TextureFeature = 'texture-compression-astc';\nconst texture_compression_etc2: TextureFeature = 'texture-compression-etc2';\nconst texture_compression_etc1_webgl: TextureFeature = 'texture-compression-etc1-webgl';\nconst texture_compression_pvrtc_webgl: TextureFeature = 'texture-compression-pvrtc-webgl';\nconst texture_compression_atc_webgl: TextureFeature = 'texture-compression-atc-webgl';\n\nconst float32_renderable: TextureFeature = 'float32-renderable-webgl';\nconst float16_renderable: TextureFeature = 'float16-renderable-webgl';\nconst rgb9e5ufloat_renderable: TextureFeature = 'rgb9e5ufloat-renderable-webgl';\nconst snorm8_renderable: TextureFeature = 'snorm8-renderable-webgl';\nconst norm16_renderable: TextureFeature = 'norm16-renderable-webgl';\nconst snorm16_renderable: TextureFeature = 'snorm16-renderable-webgl';\n\nconst float32_filterable: TextureFeature = 'float32-filterable';\nconst float16_filterable: TextureFeature = 'float16-filterable-webgl';\n\n/** https://www.w3.org/TR/webgpu/#texture-format-caps */\n\n/** Internal type representing texture capabilities */\ntype TextureFormatDefinition = Partial<TextureFormatInfo> & {\n  /** for compressed texture formats */\n  f?: TextureFeature;\n  /** renderable if feature is present. false means the spec does not support this format */\n  render?: TextureFeature | false;\n  /** filterable if feature is present. false means the spec does not support this format */\n  filter?: TextureFeature | false;\n  blend?: TextureFeature | false;\n  store?: TextureFeature | false;\n\n  /** (bytes per pixel), for memory usage calculations. */\n  b?: number;\n  /** channels */\n  c?: number;\n  bpp?: number;\n  /** packed */\n  p?: number;\n\n  /** If not supported on WebGPU */\n  wgpu?: false;\n};\n\nexport function getTextureFormatDefinition(format: TextureFormat): TextureFormatDefinition {\n  const info = TEXTURE_FORMAT_TABLE[format];\n  if (!info) {\n    throw new Error(`Unsupported texture format ${format}`);\n  }\n  return info;\n}\n\nexport function getTextureFormatTable(): Readonly<Record<TextureFormat, TextureFormatDefinition>> {\n  return TEXTURE_FORMAT_TABLE;\n}\n\n// prettier-ignore\nconst TEXTURE_FORMAT_TABLE: Readonly<Record<TextureFormat, TextureFormatDefinition>> = {\n  // 8-bit formats\n  'r8unorm': {},\n  'r8snorm': {render: snorm8_renderable},\n  'r8uint': {},\n  'r8sint': {},\n\n  // 16-bit formats\n  'rg8unorm': {},\n  'rg8snorm': {render: snorm8_renderable},\n  'rg8uint': {},\n  'rg8sint': {},\n\n  'r16uint': {},\n  'r16sint': {},\n  'r16float': {render: float16_renderable, filter: 'float16-filterable-webgl'},\n  'r16unorm-webgl': {f: norm16_renderable},\n  'r16snorm-webgl': {f: snorm16_renderable},\n\n  // Packed 16-bit formats\n  'rgba4unorm-webgl': {channels: 'rgba', bitsPerChannel: [4, 4, 4, 4], packed: true},\n  'rgb565unorm-webgl': {channels: 'rgb', bitsPerChannel: [5, 6, 5, 0], packed: true},\n  'rgb5a1unorm-webgl': {channels: 'rgba', bitsPerChannel: [5, 5, 5, 1], packed: true},\n\n  // 24-bit formats\n  'rgb8unorm-webgl': {},\n  'rgb8snorm-webgl': {},\n\n  // 32-bit formats  \n  'rgba8unorm': {},\n  'rgba8unorm-srgb': {},\n  'rgba8snorm': {render: snorm8_renderable},\n  'rgba8uint': {},\n  'rgba8sint': {},\n\n  // 32-bit, reverse colors, webgpu only\n  'bgra8unorm': {},\n  'bgra8unorm-srgb': {},\n\n  'rg16uint': {},\n  'rg16sint': {},\n  'rg16float': {render: float16_renderable, filter: float16_filterable},\n  'rg16unorm-webgl': {render: norm16_renderable},\n  'rg16snorm-webgl': {render: snorm16_renderable},\n\n  'r32uint': {},\n  'r32sint': {},\n  'r32float': {render: float32_renderable, filter: float32_filterable},\n\n  // Packed 32 bit formats\n  'rgb9e5ufloat': {channels: 'rgb', packed: true, render: rgb9e5ufloat_renderable}, // , filter: true},\n  'rg11b10ufloat': {channels: 'rgb', bitsPerChannel: [11, 11, 10, 0], packed: true, p: 1,render: float32_renderable},\n  'rgb10a2unorm': {channels: 'rgba',  bitsPerChannel: [10, 10, 10, 2], packed: true, p: 1},\n  'rgb10a2uint-webgl': {channels: 'rgba', bitsPerChannel: [10, 10, 10, 2], packed: true, p: 1, wgpu: false},\n\n  // 48-bit formats\n  'rgb16unorm-webgl': {f: norm16_renderable}, // rgb not renderable\n  'rgb16snorm-webgl': {f: norm16_renderable}, // rgb not renderable\n\n  // 64-bit formats\n  'rg32uint': {},\n  'rg32sint': {},\n  'rg32float': {render: false, filter: float32_filterable},\n  'rgba16uint': {},\n  'rgba16sint': {},\n  'rgba16float': {render: float16_renderable, filter: float16_filterable},\n  'rgba16unorm-webgl': {render: norm16_renderable},\n  'rgba16snorm-webgl': {render: snorm16_renderable},\n\n  // 96-bit formats (deprecated!)\n  'rgb32float-webgl': {render: float32_renderable, filter: float32_filterable},\n  \n  // 128-bit formats\n  'rgba32uint': {},\n  'rgba32sint': {},\n  'rgba32float': {render: float32_renderable, filter: float32_filterable},\n\n  // Depth/stencil\n  \n  // Depth and stencil formats\n  stencil8: {attachment: 'stencil', bitsPerChannel: [8, 0, 0, 0], dataType: 'uint8'},\n  'depth16unorm': {attachment: 'depth',  bitsPerChannel: [16, 0, 0, 0], dataType: 'uint16'},\n  'depth24plus': {attachment: 'depth', bitsPerChannel: [24, 0, 0, 0], dataType: 'uint32'},\n  'depth32float': {attachment: 'depth', bitsPerChannel: [32, 0, 0, 0], dataType: 'float32'},\n  // The depth component of the \"depth24plus\" and \"depth24plus-stencil8\" formats may be implemented as either a 24-bit depth value or a \"depth32float\" value.\n  'depth24plus-stencil8': {attachment: 'depth-stencil', bitsPerChannel: [24, 8, 0, 0], packed: true},\n  // \"depth32float-stencil8\" feature\n  'depth32float-stencil8': {attachment: 'depth-stencil', bitsPerChannel: [32, 8, 0, 0], packed: true},\n\n  // BC compressed formats: check device.features.has(\"texture-compression-bc\");\n\n  'bc1-rgb-unorm-webgl': {f: texture_compression_bc},\n  'bc1-rgb-unorm-srgb-webgl': {f: texture_compression_bc},\n\n  'bc1-rgba-unorm': {f: texture_compression_bc},\n  'bc1-rgba-unorm-srgb': {f: texture_compression_bc},\n  'bc2-rgba-unorm': {f: texture_compression_bc},\n  'bc2-rgba-unorm-srgb': {f: texture_compression_bc},\n  'bc3-rgba-unorm': {f: texture_compression_bc},\n  'bc3-rgba-unorm-srgb': {f: texture_compression_bc},\n  'bc4-r-unorm': {f: texture_compression_bc},\n  'bc4-r-snorm': {f: texture_compression_bc},\n  'bc5-rg-unorm': {f: texture_compression_bc},\n  'bc5-rg-snorm': {f: texture_compression_bc},\n  'bc6h-rgb-ufloat': {f: texture_compression_bc},\n  'bc6h-rgb-float': {f: texture_compression_bc},\n  'bc7-rgba-unorm': {f: texture_compression_bc},\n  'bc7-rgba-unorm-srgb': {f: texture_compression_bc},\n\n  // WEBGL_compressed_texture_etc: device.features.has(\"texture-compression-etc2\")\n  // Note: Supposedly guaranteed availability compressed formats in WebGL2, but through CPU decompression\n\n  'etc2-rgb8unorm': {f: texture_compression_etc2},\n  'etc2-rgb8unorm-srgb': {f: texture_compression_etc2},\n  'etc2-rgb8a1unorm': {f: texture_compression_etc2},\n  'etc2-rgb8a1unorm-srgb': {f: texture_compression_etc2},\n  'etc2-rgba8unorm': {f: texture_compression_etc2},\n  'etc2-rgba8unorm-srgb': {f: texture_compression_etc2},\n\n  'eac-r11unorm': {f: texture_compression_etc2},\n  'eac-r11snorm': {f: texture_compression_etc2},\n  'eac-rg11unorm': {f: texture_compression_etc2},\n  'eac-rg11snorm': {f: texture_compression_etc2},\n\n  // X_ASTC compressed formats: device.features.has(\"texture-compression-astc\")\n\n  'astc-4x4-unorm': {f: texture_compression_astc},\n  'astc-4x4-unorm-srgb': {f: texture_compression_astc},\n  'astc-5x4-unorm': {f: texture_compression_astc},\n  'astc-5x4-unorm-srgb': {f: texture_compression_astc},\n  'astc-5x5-unorm': {f: texture_compression_astc},\n  'astc-5x5-unorm-srgb': {f: texture_compression_astc},\n  'astc-6x5-unorm': {f: texture_compression_astc},\n  'astc-6x5-unorm-srgb': {f: texture_compression_astc},\n  'astc-6x6-unorm': {f: texture_compression_astc},\n  'astc-6x6-unorm-srgb': {f: texture_compression_astc},\n  'astc-8x5-unorm': {f: texture_compression_astc},\n  'astc-8x5-unorm-srgb': {f: texture_compression_astc},\n  'astc-8x6-unorm': {f: texture_compression_astc},\n  'astc-8x6-unorm-srgb': {f: texture_compression_astc},\n  'astc-8x8-unorm': {f: texture_compression_astc},\n  'astc-8x8-unorm-srgb': {f: texture_compression_astc},\n  'astc-10x5-unorm': {f: texture_compression_astc},\n  'astc-10x5-unorm-srgb': {f: texture_compression_astc},\n  'astc-10x6-unorm': {f: texture_compression_astc},\n  'astc-10x6-unorm-srgb': {f: texture_compression_astc},\n  'astc-10x8-unorm': {f: texture_compression_astc},\n  'astc-10x8-unorm-srgb': {f: texture_compression_astc},\n  'astc-10x10-unorm': {f: texture_compression_astc},\n  'astc-10x10-unorm-srgb': {f: texture_compression_astc},\n  'astc-12x10-unorm': {f: texture_compression_astc},\n  'astc-12x10-unorm-srgb': {f: texture_compression_astc},\n  'astc-12x12-unorm': {f: texture_compression_astc},\n  'astc-12x12-unorm-srgb': {f: texture_compression_astc},\n\n  // WEBGL_compressed_texture_pvrtc\n\n  'pvrtc-rgb4unorm-webgl': {f: texture_compression_pvrtc_webgl},\n  'pvrtc-rgba4unorm-webgl': {f: texture_compression_pvrtc_webgl},\n  'pvrtc-rbg2unorm-webgl': {f: texture_compression_pvrtc_webgl},\n  'pvrtc-rgba2unorm-webgl': {f: texture_compression_pvrtc_webgl},\n\n  // WEBGL_compressed_texture_etc1\n\n  'etc1-rbg-unorm-webgl': {f: texture_compression_etc1_webgl},\n\n  // WEBGL_compressed_texture_atc\n\n  'atc-rgb-unorm-webgl': {f: texture_compression_atc_webgl},\n  'atc-rgba-unorm-webgl': {f: texture_compression_atc_webgl},\n  'atc-rgbai-unorm-webgl': {f: texture_compression_atc_webgl}\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}