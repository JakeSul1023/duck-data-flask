{"ast":null,"code":"import { WorkerFarm } from '@loaders.gl/worker-utils';\nimport { isBrowser } from \"../env-utils/globals.js\";\n/**\n * Determines if a loader can parse with worker\n * @param loader\n * @param options\n */\nexport function canEncodeWithWorker(writer, options) {\n  if (!WorkerFarm.isSupported()) {\n    return false;\n  }\n  // Node workers are still experimental\n  if (!isBrowser && !options?._nodeWorkers) {\n    return false;\n  }\n  return writer.worker && options?.worker;\n}","map":{"version":3,"names":["WorkerFarm","isBrowser","canEncodeWithWorker","writer","options","isSupported","_nodeWorkers","worker"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/loader-utils/dist/lib/worker-loader-utils/encode-with-worker.js"],"sourcesContent":["import { WorkerFarm } from '@loaders.gl/worker-utils';\nimport { isBrowser } from \"../env-utils/globals.js\";\n/**\n * Determines if a loader can parse with worker\n * @param loader\n * @param options\n */\nexport function canEncodeWithWorker(writer, options) {\n    if (!WorkerFarm.isSupported()) {\n        return false;\n    }\n    // Node workers are still experimental\n    if (!isBrowser && !options?._nodeWorkers) {\n        return false;\n    }\n    return writer.worker && options?.worker;\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,0BAA0B;AACrD,SAASC,SAAS,QAAQ,yBAAyB;AACnD;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,mBAAmBA,CAACC,MAAM,EAAEC,OAAO,EAAE;EACjD,IAAI,CAACJ,UAAU,CAACK,WAAW,CAAC,CAAC,EAAE;IAC3B,OAAO,KAAK;EAChB;EACA;EACA,IAAI,CAACJ,SAAS,IAAI,CAACG,OAAO,EAAEE,YAAY,EAAE;IACtC,OAAO,KAAK;EAChB;EACA,OAAOH,MAAM,CAACI,MAAM,IAAIH,OAAO,EAAEG,MAAM;AAC3C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}