{"ast":null,"code":"import { InputEvent, COMPUTE_INTERVAL } from \"./input-consts.js\";\nimport { getVelocity } from \"./get-velocity.js\";\nimport { getDirection } from \"./get-direction.js\";\n/**\n * velocity is calculated every x ms\n */\nexport function computeIntervalInputData(session, input) {\n  const last = session.lastInterval || input;\n  const deltaTime = input.timeStamp - last.timeStamp;\n  let velocity;\n  let velocityX;\n  let velocityY;\n  let direction;\n  if (input.eventType !== InputEvent.Cancel && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n    const deltaX = input.deltaX - last.deltaX;\n    const deltaY = input.deltaY - last.deltaY;\n    const v = getVelocity(deltaTime, deltaX, deltaY);\n    velocityX = v.x;\n    velocityY = v.y;\n    velocity = Math.abs(v.x) > Math.abs(v.y) ? v.x : v.y;\n    direction = getDirection(deltaX, deltaY);\n    session.lastInterval = input;\n  } else {\n    // use latest velocity info if it doesn't overtake a minimum period\n    velocity = last.velocity;\n    velocityX = last.velocityX;\n    velocityY = last.velocityY;\n    direction = last.direction;\n  }\n  input.velocity = velocity;\n  input.velocityX = velocityX;\n  input.velocityY = velocityY;\n  input.direction = direction;\n}","map":{"version":3,"names":["InputEvent","COMPUTE_INTERVAL","getVelocity","getDirection","computeIntervalInputData","session","input","last","lastInterval","deltaTime","timeStamp","velocity","velocityX","velocityY","direction","eventType","Cancel","undefined","deltaX","deltaY","v","x","y","Math","abs"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\mjolnir.js\\src\\hammerjs\\input\\compute-interval-input-data.ts"],"sourcesContent":["import {InputEvent, COMPUTE_INTERVAL} from './input-consts';\nimport {getVelocity} from './get-velocity';\nimport {getDirection} from './get-direction';\n\nimport type {Session, HammerInput} from './types';\n\n/**\n * velocity is calculated every x ms\n */\nexport function computeIntervalInputData(session: Session, input: HammerInput) {\n  const last = session.lastInterval || input;\n  const deltaTime = input.timeStamp - last.timeStamp;\n  let velocity;\n  let velocityX;\n  let velocityY;\n  let direction;\n\n  if (\n    input.eventType !== InputEvent.Cancel &&\n    (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)\n  ) {\n    const deltaX = input.deltaX - last.deltaX;\n    const deltaY = input.deltaY - last.deltaY;\n\n    const v = getVelocity(deltaTime, deltaX, deltaY);\n    velocityX = v.x;\n    velocityY = v.y;\n    velocity = Math.abs(v.x) > Math.abs(v.y) ? v.x : v.y;\n    direction = getDirection(deltaX, deltaY);\n\n    session.lastInterval = input;\n  } else {\n    // use latest velocity info if it doesn't overtake a minimum period\n    velocity = last.velocity;\n    velocityX = last.velocityX;\n    velocityY = last.velocityY;\n    direction = last.direction;\n  }\n\n  input.velocity = velocity;\n  input.velocityX = velocityX;\n  input.velocityY = velocityY;\n  input.direction = direction;\n}\n"],"mappings":"AAAA,SAAQA,UAAU,EAAEC,gBAAgB,QAAC;AACrC,SAAQC,WAAW,QAAC;AACpB,SAAQC,YAAY,QAAC;AAIrB;;;AAGA,OAAM,SAAUC,wBAAwBA,CAACC,OAAgB,EAAEC,KAAkB;EAC3E,MAAMC,IAAI,GAAGF,OAAO,CAACG,YAAY,IAAIF,KAAK;EAC1C,MAAMG,SAAS,GAAGH,KAAK,CAACI,SAAS,GAAGH,IAAI,CAACG,SAAS;EAClD,IAAIC,QAAQ;EACZ,IAAIC,SAAS;EACb,IAAIC,SAAS;EACb,IAAIC,SAAS;EAEb,IACER,KAAK,CAACS,SAAS,KAAKf,UAAU,CAACgB,MAAM,KACpCP,SAAS,GAAGR,gBAAgB,IAAIM,IAAI,CAACI,QAAQ,KAAKM,SAAS,CAAC,EAC7D;IACA,MAAMC,MAAM,GAAGZ,KAAK,CAACY,MAAM,GAAGX,IAAI,CAACW,MAAM;IACzC,MAAMC,MAAM,GAAGb,KAAK,CAACa,MAAM,GAAGZ,IAAI,CAACY,MAAM;IAEzC,MAAMC,CAAC,GAAGlB,WAAW,CAACO,SAAS,EAAES,MAAM,EAAEC,MAAM,CAAC;IAChDP,SAAS,GAAGQ,CAAC,CAACC,CAAC;IACfR,SAAS,GAAGO,CAAC,CAACE,CAAC;IACfX,QAAQ,GAAGY,IAAI,CAACC,GAAG,CAACJ,CAAC,CAACC,CAAC,CAAC,GAAGE,IAAI,CAACC,GAAG,CAACJ,CAAC,CAACE,CAAC,CAAC,GAAGF,CAAC,CAACC,CAAC,GAAGD,CAAC,CAACE,CAAC;IACpDR,SAAS,GAAGX,YAAY,CAACe,MAAM,EAAEC,MAAM,CAAC;IAExCd,OAAO,CAACG,YAAY,GAAGF,KAAK;EAC9B,CAAC,MAAM;IACL;IACAK,QAAQ,GAAGJ,IAAI,CAACI,QAAQ;IACxBC,SAAS,GAAGL,IAAI,CAACK,SAAS;IAC1BC,SAAS,GAAGN,IAAI,CAACM,SAAS;IAC1BC,SAAS,GAAGP,IAAI,CAACO,SAAS;EAC5B;EAEAR,KAAK,CAACK,QAAQ,GAAGA,QAAQ;EACzBL,KAAK,CAACM,SAAS,GAAGA,SAAS;EAC3BN,KAAK,CAACO,SAAS,GAAGA,SAAS;EAC3BP,KAAK,CAACQ,SAAS,GAAGA,SAAS;AAC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}