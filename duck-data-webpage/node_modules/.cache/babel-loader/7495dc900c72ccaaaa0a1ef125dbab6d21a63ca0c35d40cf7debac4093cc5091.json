{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst uniformBlock = `\\\nuniform layerUniforms {\n  uniform float opacity;\n} layer;\n`;\nexport const layerUniforms = {\n  name: 'layer',\n  vs: uniformBlock,\n  fs: uniformBlock,\n  getUniforms: props => {\n    return {\n      // apply gamma to opacity to make it visually \"linear\"\n      // TODO - v10: use raw opacity?\n      opacity: Math.pow(props.opacity, 1 / 2.2)\n    };\n  },\n  uniformTypes: {\n    opacity: 'f32'\n  }\n};","map":{"version":3,"names":["uniformBlock","layerUniforms","name","vs","fs","getUniforms","props","opacity","Math","pow","uniformTypes"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\core\\src\\shaderlib\\misc\\layer-uniforms.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {ShaderModule} from '@luma.gl/shadertools';\nimport type {LayerProps} from '../../types/layer-props';\n\nconst uniformBlock = `\\\nuniform layerUniforms {\n  uniform float opacity;\n} layer;\n`;\n\nexport type LayerUniforms = {\n  opacity?: number;\n};\n\nexport const layerUniforms = {\n  name: 'layer',\n  vs: uniformBlock,\n  fs: uniformBlock,\n  getUniforms: (props: Partial<LayerProps>) => {\n    return {\n      // apply gamma to opacity to make it visually \"linear\"\n      // TODO - v10: use raw opacity?\n      opacity: Math.pow(props.opacity!, 1 / 2.2)\n    };\n  },\n  uniformTypes: {\n    opacity: 'f32'\n  }\n} as const satisfies ShaderModule<LayerProps, LayerUniforms>;\n"],"mappings":"AAAA;AACA;AACA;AAKA,MAAMA,YAAY,GAAG;;;;CAIpB;AAMD,OAAO,MAAMC,aAAa,GAAG;EAC3BC,IAAI,EAAE,OAAO;EACbC,EAAE,EAAEH,YAAY;EAChBI,EAAE,EAAEJ,YAAY;EAChBK,WAAW,EAAGC,KAA0B,IAAI;IAC1C,OAAO;MACL;MACA;MACAC,OAAO,EAAEC,IAAI,CAACC,GAAG,CAACH,KAAK,CAACC,OAAQ,EAAE,CAAC,GAAG,GAAG;KAC1C;EACH,CAAC;EACDG,YAAY,EAAE;IACZH,OAAO,EAAE;;CAE+C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}