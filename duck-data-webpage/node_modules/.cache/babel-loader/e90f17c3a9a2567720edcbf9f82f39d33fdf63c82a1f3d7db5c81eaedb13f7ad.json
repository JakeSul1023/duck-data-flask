{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { fp32 } from '@luma.gl/shadertools';\nimport geometry from \"../misc/geometry.js\";\nimport { getUniformsFromViewport } from \"./viewport-uniforms.js\";\nimport { projectWGSL } from \"./project.wgsl.js\";\nimport { projectGLSL } from \"./project.glsl.js\";\nconst INITIAL_MODULE_OPTIONS = {};\nfunction getUniforms(opts = INITIAL_MODULE_OPTIONS) {\n  if ('viewport' in opts) {\n    return getUniformsFromViewport(opts);\n  }\n  return {};\n}\nexport default {\n  name: 'project',\n  dependencies: [fp32, geometry],\n  source: projectWGSL,\n  vs: projectGLSL,\n  getUniforms,\n  uniformTypes: {\n    wrapLongitude: 'f32',\n    coordinateSystem: 'i32',\n    commonUnitsPerMeter: 'vec3<f32>',\n    projectionMode: 'i32',\n    scale: 'f32',\n    commonUnitsPerWorldUnit: 'vec3<f32>',\n    commonUnitsPerWorldUnit2: 'vec3<f32>',\n    center: 'vec4<f32>',\n    modelMatrix: 'mat4x4<f32>',\n    viewProjectionMatrix: 'mat4x4<f32>',\n    viewportSize: 'vec2<f32>',\n    devicePixelRatio: 'f32',\n    focalDistance: 'f32',\n    cameraPosition: 'vec3<f32>',\n    coordinateOrigin: 'vec3<f32>',\n    commonOrigin: 'vec3<f32>',\n    pseudoMeters: 'f32'\n  }\n  // @ts-ignore TODO v9.1\n};","map":{"version":3,"names":["fp32","geometry","getUniformsFromViewport","projectWGSL","projectGLSL","INITIAL_MODULE_OPTIONS","getUniforms","opts","name","dependencies","source","vs","uniformTypes","wrapLongitude","coordinateSystem","commonUnitsPerMeter","projectionMode","scale","commonUnitsPerWorldUnit","commonUnitsPerWorldUnit2","center","modelMatrix","viewProjectionMatrix","viewportSize","devicePixelRatio","focalDistance","cameraPosition","coordinateOrigin","commonOrigin","pseudoMeters"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\core\\src\\shaderlib\\project\\project.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {fp32, ShaderModule} from '@luma.gl/shadertools';\nimport geometry from '../misc/geometry';\nimport {getUniformsFromViewport} from './viewport-uniforms';\nimport {projectWGSL} from './project.wgsl';\nimport {projectGLSL} from './project.glsl';\n\nimport type {ProjectProps, ProjectUniforms} from './viewport-uniforms';\n\nconst INITIAL_MODULE_OPTIONS = {};\n\nfunction getUniforms(opts: ProjectProps | {} = INITIAL_MODULE_OPTIONS) {\n  if ('viewport' in opts) {\n    return getUniformsFromViewport(opts);\n  }\n  return {};\n}\n\nexport default {\n  name: 'project',\n  dependencies: [fp32, geometry],\n  source: projectWGSL,\n  vs: projectGLSL,\n  getUniforms,\n  uniformTypes: {\n    wrapLongitude: 'f32',\n    coordinateSystem: 'i32',\n    commonUnitsPerMeter: 'vec3<f32>',\n    projectionMode: 'i32',\n    scale: 'f32',\n    commonUnitsPerWorldUnit: 'vec3<f32>',\n    commonUnitsPerWorldUnit2: 'vec3<f32>',\n    center: 'vec4<f32>',\n    modelMatrix: 'mat4x4<f32>',\n    viewProjectionMatrix: 'mat4x4<f32>',\n    viewportSize: 'vec2<f32>',\n    devicePixelRatio: 'f32',\n    focalDistance: 'f32',\n    cameraPosition: 'vec3<f32>',\n    coordinateOrigin: 'vec3<f32>',\n    commonOrigin: 'vec3<f32>',\n    pseudoMeters: 'f32'\n  }\n  // @ts-ignore TODO v9.1\n} as const satisfies ShaderModule<ProjectProps, ProjectUniforms, {}>;\n"],"mappings":"AAAA;AACA;AACA;AAEA,SAAQA,IAAI,QAAqB,sBAAsB;AACvD,OAAOC,QAAQ;AACf,SAAQC,uBAAuB,QAAC;AAChC,SAAQC,WAAW,QAAC;AACpB,SAAQC,WAAW,QAAC;AAIpB,MAAMC,sBAAsB,GAAG,EAAE;AAEjC,SAASC,WAAWA,CAACC,IAAA,GAA0BF,sBAAsB;EACnE,IAAI,UAAU,IAAIE,IAAI,EAAE;IACtB,OAAOL,uBAAuB,CAACK,IAAI,CAAC;EACtC;EACA,OAAO,EAAE;AACX;AAEA,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE,CAACT,IAAI,EAAEC,QAAQ,CAAC;EAC9BS,MAAM,EAAEP,WAAW;EACnBQ,EAAE,EAAEP,WAAW;EACfE,WAAW;EACXM,YAAY,EAAE;IACZC,aAAa,EAAE,KAAK;IACpBC,gBAAgB,EAAE,KAAK;IACvBC,mBAAmB,EAAE,WAAW;IAChCC,cAAc,EAAE,KAAK;IACrBC,KAAK,EAAE,KAAK;IACZC,uBAAuB,EAAE,WAAW;IACpCC,wBAAwB,EAAE,WAAW;IACrCC,MAAM,EAAE,WAAW;IACnBC,WAAW,EAAE,aAAa;IAC1BC,oBAAoB,EAAE,aAAa;IACnCC,YAAY,EAAE,WAAW;IACzBC,gBAAgB,EAAE,KAAK;IACvBC,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,WAAW;IAC3BC,gBAAgB,EAAE,WAAW;IAC7BC,YAAY,EAAE,WAAW;IACzBC,YAAY,EAAE;;EAEhB;CACkE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}