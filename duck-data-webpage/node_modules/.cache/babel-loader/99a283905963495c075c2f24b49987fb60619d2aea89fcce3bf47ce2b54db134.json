{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport deckLog from \"../utils/log.js\";\nimport { getLoggers } from \"./loggers.js\";\n/* debug utility */\nlet loggers = {};\n// Conditionally load default loggers in development mode\n// eslint-disable-next-line\nif (process.env.NODE_ENV !== 'production') {\n  loggers = getLoggers(deckLog);\n}\nexport function register(handlers) {\n  loggers = handlers;\n}\nexport default function debug(eventType, arg1, arg2, arg3) {\n  if (deckLog.level > 0 && loggers[eventType]) {\n    // Not using rest parameters to defeat perf hit from array construction\n    loggers[eventType].call(null, arg1, arg2, arg3);\n  }\n}","map":{"version":3,"names":["deckLog","getLoggers","loggers","process","env","NODE_ENV","register","handlers","debug","eventType","arg1","arg2","arg3","level","call"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\core\\src\\debug\\index.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport deckLog from '../utils/log';\nimport {getLoggers} from './loggers';\n\n/* debug utility */\n\nlet loggers: Record<string, Function> = {};\n\n// Conditionally load default loggers in development mode\n// eslint-disable-next-line\nif (process.env.NODE_ENV !== 'production') {\n  loggers = getLoggers(deckLog);\n}\n\nexport function register(handlers: Record<string, Function>): void {\n  loggers = handlers;\n}\n\nexport default function debug(eventType: string, arg1?: any, arg2?: any, arg3?: any): void {\n  if (deckLog.level > 0 && loggers[eventType]) {\n    // Not using rest parameters to defeat perf hit from array construction\n    loggers[eventType].call(null, arg1, arg2, arg3);\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AAEA,OAAOA,OAAO;AACd,SAAQC,UAAU,QAAC;AAEnB;AAEA,IAAIC,OAAO,GAA6B,EAAE;AAE1C;AACA;AACA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCH,OAAO,GAAGD,UAAU,CAACD,OAAO,CAAC;AAC/B;AAEA,OAAM,SAAUM,QAAQA,CAACC,QAAkC;EACzDL,OAAO,GAAGK,QAAQ;AACpB;AAEA,eAAc,SAAUC,KAAKA,CAACC,SAAiB,EAAEC,IAAU,EAAEC,IAAU,EAAEC,IAAU;EACjF,IAAIZ,OAAO,CAACa,KAAK,GAAG,CAAC,IAAIX,OAAO,CAACO,SAAS,CAAC,EAAE;IAC3C;IACAP,OAAO,CAACO,SAAS,CAAC,CAACK,IAAI,CAAC,IAAI,EAAEJ,IAAI,EAAEC,IAAI,EAAEC,IAAI,CAAC;EACjD;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}