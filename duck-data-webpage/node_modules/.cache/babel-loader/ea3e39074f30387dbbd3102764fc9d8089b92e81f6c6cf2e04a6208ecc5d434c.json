{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { Vector3 } from '@math.gl/core';\nimport { makeOrientedBoundingBoxFromPoints } from '@math.gl/culling';\nimport { getS2OrientedBoundingBoxCornerPoints, getS2LngLat } from \"../../utils/s2/index.js\";\nimport { Ellipsoid } from '@math.gl/geospatial';\n/**\n * Converts S2VolumeInfo to OrientedBoundingBox\n * @param {S2VolumeInfo} s2VolumeInfo - s2 volume to convert\n * @returns Oriented Bounding Box of type Box\n */\nexport function convertS2BoundingVolumetoOBB(s2VolumeInfo) {\n  const token = s2VolumeInfo.token;\n  const heightInfo = {\n    minimumHeight: s2VolumeInfo.minimumHeight,\n    maximumHeight: s2VolumeInfo.maximumHeight\n  };\n  const corners = getS2OrientedBoundingBoxCornerPoints(token, heightInfo);\n  // Add a point that doesn't allow the box dive under the Earth\n  const center = getS2LngLat(token);\n  const centerLng = center[0];\n  const centerLat = center[1];\n  const point = Ellipsoid.WGS84.cartographicToCartesian([centerLng, centerLat, heightInfo.maximumHeight]);\n  const centerPointAdditional = new Vector3(point[0], point[1], point[2]);\n  corners.push(centerPointAdditional);\n  // corners should be an array of Vector3 (XYZ)\n  const obb = makeOrientedBoundingBoxFromPoints(corners);\n  const box = [...obb.center, ...obb.halfAxes];\n  return box;\n}","map":{"version":3,"names":["Vector3","makeOrientedBoundingBoxFromPoints","getS2OrientedBoundingBoxCornerPoints","getS2LngLat","Ellipsoid","convertS2BoundingVolumetoOBB","s2VolumeInfo","token","heightInfo","minimumHeight","maximumHeight","corners","center","centerLng","centerLat","point","WGS84","cartographicToCartesian","centerPointAdditional","push","obb","box","halfAxes"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/3d-tiles/dist/lib/utils/obb/s2-corners-to-obb.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { Vector3 } from '@math.gl/core';\nimport { makeOrientedBoundingBoxFromPoints } from '@math.gl/culling';\nimport { getS2OrientedBoundingBoxCornerPoints, getS2LngLat } from \"../../utils/s2/index.js\";\nimport { Ellipsoid } from '@math.gl/geospatial';\n/**\n * Converts S2VolumeInfo to OrientedBoundingBox\n * @param {S2VolumeInfo} s2VolumeInfo - s2 volume to convert\n * @returns Oriented Bounding Box of type Box\n */\nexport function convertS2BoundingVolumetoOBB(s2VolumeInfo) {\n    const token = s2VolumeInfo.token;\n    const heightInfo = {\n        minimumHeight: s2VolumeInfo.minimumHeight,\n        maximumHeight: s2VolumeInfo.maximumHeight\n    };\n    const corners = getS2OrientedBoundingBoxCornerPoints(token, heightInfo);\n    // Add a point that doesn't allow the box dive under the Earth\n    const center = getS2LngLat(token);\n    const centerLng = center[0];\n    const centerLat = center[1];\n    const point = Ellipsoid.WGS84.cartographicToCartesian([\n        centerLng,\n        centerLat,\n        heightInfo.maximumHeight\n    ]);\n    const centerPointAdditional = new Vector3(point[0], point[1], point[2]);\n    corners.push(centerPointAdditional);\n    // corners should be an array of Vector3 (XYZ)\n    const obb = makeOrientedBoundingBoxFromPoints(corners);\n    const box = [...obb.center, ...obb.halfAxes];\n    return box;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,OAAO,QAAQ,eAAe;AACvC,SAASC,iCAAiC,QAAQ,kBAAkB;AACpE,SAASC,oCAAoC,EAAEC,WAAW,QAAQ,yBAAyB;AAC3F,SAASC,SAAS,QAAQ,qBAAqB;AAC/C;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,4BAA4BA,CAACC,YAAY,EAAE;EACvD,MAAMC,KAAK,GAAGD,YAAY,CAACC,KAAK;EAChC,MAAMC,UAAU,GAAG;IACfC,aAAa,EAAEH,YAAY,CAACG,aAAa;IACzCC,aAAa,EAAEJ,YAAY,CAACI;EAChC,CAAC;EACD,MAAMC,OAAO,GAAGT,oCAAoC,CAACK,KAAK,EAAEC,UAAU,CAAC;EACvE;EACA,MAAMI,MAAM,GAAGT,WAAW,CAACI,KAAK,CAAC;EACjC,MAAMM,SAAS,GAAGD,MAAM,CAAC,CAAC,CAAC;EAC3B,MAAME,SAAS,GAAGF,MAAM,CAAC,CAAC,CAAC;EAC3B,MAAMG,KAAK,GAAGX,SAAS,CAACY,KAAK,CAACC,uBAAuB,CAAC,CAClDJ,SAAS,EACTC,SAAS,EACTN,UAAU,CAACE,aAAa,CAC3B,CAAC;EACF,MAAMQ,qBAAqB,GAAG,IAAIlB,OAAO,CAACe,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC;EACvEJ,OAAO,CAACQ,IAAI,CAACD,qBAAqB,CAAC;EACnC;EACA,MAAME,GAAG,GAAGnB,iCAAiC,CAACU,OAAO,CAAC;EACtD,MAAMU,GAAG,GAAG,CAAC,GAAGD,GAAG,CAACR,MAAM,EAAE,GAAGQ,GAAG,CAACE,QAAQ,CAAC;EAC5C,OAAOD,GAAG;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}