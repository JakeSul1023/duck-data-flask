{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { mergeLoaderOptions } from '@loaders.gl/loader-utils';\nimport { XMLLoader } from \"./xml-loader.js\";\n/**\n * Loader for HTML files\n * Essentially a copy of the XMLLoader with different mime types, file extensions and content tests.\n * This split enables applications can control whether they want HTML responses to be parsed by the XML loader or not.\n * This loader does not have any additional understanding of the structure of HTML or the document.\n */\nexport const HTMLLoader = {\n  ...XMLLoader,\n  name: 'HTML',\n  id: 'html',\n  extensions: ['html', 'htm'],\n  mimeTypes: ['text/html'],\n  testText: testHTMLFile,\n  parse: async (arrayBuffer, options) => parseTextSync(new TextDecoder().decode(arrayBuffer), options),\n  parseTextSync: (text, options) => parseTextSync(text, options)\n};\nfunction testHTMLFile(text) {\n  // TODO - There could be space first.\n  return text.startsWith('<html');\n}\nfunction parseTextSync(text, options) {\n  // fast-xml-parser can recognize HTML entities\n  // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#htmlentities\n  // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/5.Entities.md\n  options = mergeLoaderOptions(options, {\n    xml: {\n      _parser: 'fast-xml-parser',\n      _fastXML: {\n        htmlEntities: true\n      }\n    }\n  });\n  return XMLLoader.parseTextSync?.(text, options);\n}","map":{"version":3,"names":["mergeLoaderOptions","XMLLoader","HTMLLoader","name","id","extensions","mimeTypes","testText","testHTMLFile","parse","arrayBuffer","options","parseTextSync","TextDecoder","decode","text","startsWith","xml","_parser","_fastXML","htmlEntities"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/xml/dist/html-loader.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { mergeLoaderOptions } from '@loaders.gl/loader-utils';\nimport { XMLLoader } from \"./xml-loader.js\";\n/**\n * Loader for HTML files\n * Essentially a copy of the XMLLoader with different mime types, file extensions and content tests.\n * This split enables applications can control whether they want HTML responses to be parsed by the XML loader or not.\n * This loader does not have any additional understanding of the structure of HTML or the document.\n */\nexport const HTMLLoader = {\n    ...XMLLoader,\n    name: 'HTML',\n    id: 'html',\n    extensions: ['html', 'htm'],\n    mimeTypes: ['text/html'],\n    testText: testHTMLFile,\n    parse: async (arrayBuffer, options) => parseTextSync(new TextDecoder().decode(arrayBuffer), options),\n    parseTextSync: (text, options) => parseTextSync(text, options)\n};\nfunction testHTMLFile(text) {\n    // TODO - There could be space first.\n    return text.startsWith('<html');\n}\nfunction parseTextSync(text, options) {\n    // fast-xml-parser can recognize HTML entities\n    // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#htmlentities\n    // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/5.Entities.md\n    options = mergeLoaderOptions(options, {\n        xml: {\n            _parser: 'fast-xml-parser',\n            _fastXML: {\n                htmlEntities: true\n            }\n        }\n    });\n    return XMLLoader.parseTextSync?.(text, options);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,kBAAkB,QAAQ,0BAA0B;AAC7D,SAASC,SAAS,QAAQ,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAG;EACtB,GAAGD,SAAS;EACZE,IAAI,EAAE,MAAM;EACZC,EAAE,EAAE,MAAM;EACVC,UAAU,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;EAC3BC,SAAS,EAAE,CAAC,WAAW,CAAC;EACxBC,QAAQ,EAAEC,YAAY;EACtBC,KAAK,EAAE,MAAAA,CAAOC,WAAW,EAAEC,OAAO,KAAKC,aAAa,CAAC,IAAIC,WAAW,CAAC,CAAC,CAACC,MAAM,CAACJ,WAAW,CAAC,EAAEC,OAAO,CAAC;EACpGC,aAAa,EAAEA,CAACG,IAAI,EAAEJ,OAAO,KAAKC,aAAa,CAACG,IAAI,EAAEJ,OAAO;AACjE,CAAC;AACD,SAASH,YAAYA,CAACO,IAAI,EAAE;EACxB;EACA,OAAOA,IAAI,CAACC,UAAU,CAAC,OAAO,CAAC;AACnC;AACA,SAASJ,aAAaA,CAACG,IAAI,EAAEJ,OAAO,EAAE;EAClC;EACA;EACA;EACAA,OAAO,GAAGX,kBAAkB,CAACW,OAAO,EAAE;IAClCM,GAAG,EAAE;MACDC,OAAO,EAAE,iBAAiB;MAC1BC,QAAQ,EAAE;QACNC,YAAY,EAAE;MAClB;IACJ;EACJ,CAAC,CAAC;EACF,OAAOnB,SAAS,CAACW,aAAa,GAAGG,IAAI,EAAEJ,OAAO,CAAC;AACnD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}