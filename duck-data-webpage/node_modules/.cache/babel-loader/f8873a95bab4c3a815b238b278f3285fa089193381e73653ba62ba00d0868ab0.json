{"ast":null,"code":"// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/**\n * Minimal class that represents a \"componentized\" rendering life cycle\n * (resource construction, repeated rendering, resource destruction)\n *\n * @note A motivation for this class compared to the raw animation loop is\n * that it simplifies TypeScript code by allowing resources to be typed unconditionally\n * since they are allocated in the constructor rather than in onInitialized\n *\n * @note Introduced in luma.gl v9\n *\n * @example AnimationLoopTemplate is intended to be subclassed,\n * but the subclass should not be instantiated directly. Instead the subclass\n * (i.e. the constructor of the subclass) should be used\n * as an argument to create an AnimationLoop.\n */\nexport class AnimationLoopTemplate {\n  constructor(animationProps) {}\n  async onInitialize(animationProps) {\n    return null;\n  }\n}","map":{"version":3,"names":["AnimationLoopTemplate","constructor","animationProps","onInitialize"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@luma.gl\\engine\\src\\animation-loop\\animation-loop-template.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {AnimationProps} from './animation-props';\n\n/**\n * Minimal class that represents a \"componentized\" rendering life cycle\n * (resource construction, repeated rendering, resource destruction)\n *\n * @note A motivation for this class compared to the raw animation loop is\n * that it simplifies TypeScript code by allowing resources to be typed unconditionally\n * since they are allocated in the constructor rather than in onInitialized\n *\n * @note Introduced in luma.gl v9\n *\n * @example AnimationLoopTemplate is intended to be subclassed,\n * but the subclass should not be instantiated directly. Instead the subclass\n * (i.e. the constructor of the subclass) should be used\n * as an argument to create an AnimationLoop.\n */\nexport abstract class AnimationLoopTemplate {\n  constructor(animationProps?: AnimationProps) {}\n  async onInitialize(animationProps: AnimationProps): Promise<unknown> {\n    return null;\n  }\n  abstract onRender(animationProps: AnimationProps): unknown;\n  abstract onFinalize(animationProps: AnimationProps): void;\n}\n"],"mappings":"AAAA;AACA;AACA;AAIA;;;;;;;;;;;;;;;AAeA,OAAM,MAAgBA,qBAAqB;EACzCC,YAAYC,cAA+B,GAAG;EAC9C,MAAMC,YAAYA,CAACD,cAA8B;IAC/C,OAAO,IAAI;EACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}