{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/**\n * Creates a source from a service\n * If type is not supplied, will try to automatically detect the the\n * @param url URL to the data source\n * @param type type of source. if not known, set to 'auto'\n * @returns an DataSource instance\n */\nexport function createDataSource(data, sources, props) {\n  const {\n    type = 'auto'\n  } = props;\n  const source = type === 'auto' ? selectSource(data, sources) : getSourceOfType(type, sources);\n  if (!source) {\n    throw new Error('Not a valid image source type');\n  }\n  return source.createDataSource(data, props);\n}\n// TODO - use selectSource...\n/** Guess service type from URL */\nfunction selectSource(url, sources) {\n  for (const service of sources) {\n    // @ts-expect-error\n    if (service.testURL && service.testURL(url)) {\n      return service;\n    }\n  }\n  return null;\n}\n/** Guess service type from URL */\nfunction getSourceOfType(type, sources) {\n  for (const service of sources) {\n    if (service.type === type) {\n      return service;\n    }\n  }\n  return null;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}