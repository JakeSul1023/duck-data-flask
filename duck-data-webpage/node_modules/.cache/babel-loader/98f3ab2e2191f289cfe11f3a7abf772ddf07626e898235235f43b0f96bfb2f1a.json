{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { normalizeTransitionSettings } from \"./attribute/transition-settings.js\";\nimport CPUInterpolationTransition from \"../transitions/cpu-interpolation-transition.js\";\nimport CPUSpringTransition from \"../transitions/cpu-spring-transition.js\";\nimport log from \"../utils/log.js\";\nconst TRANSITION_TYPES = {\n  interpolation: CPUInterpolationTransition,\n  spring: CPUSpringTransition\n};\nexport default class UniformTransitionManager {\n  constructor(timeline) {\n    this.transitions = new Map();\n    this.timeline = timeline;\n  }\n  get active() {\n    return this.transitions.size > 0;\n  }\n  add(key, fromValue, toValue, settings) {\n    const {\n      transitions\n    } = this;\n    if (transitions.has(key)) {\n      const transition = transitions.get(key);\n      // value may not be available if `update()` has not been called. Fallback to `fromValue`\n      const {\n        value = transition.settings.fromValue\n      } = transition;\n      // start from interrupted position\n      fromValue = value;\n      this.remove(key);\n    }\n    settings = normalizeTransitionSettings(settings);\n    if (!settings) {\n      return;\n    }\n    const TransitionType = TRANSITION_TYPES[settings.type];\n    if (!TransitionType) {\n      log.error(`unsupported transition type '${settings.type}'`)();\n      return;\n    }\n    const transition = new TransitionType(this.timeline);\n    transition.start({\n      ...settings,\n      fromValue,\n      toValue\n    });\n    transitions.set(key, transition);\n  }\n  remove(key) {\n    const {\n      transitions\n    } = this;\n    if (transitions.has(key)) {\n      transitions.get(key).cancel();\n      transitions.delete(key);\n    }\n  }\n  update() {\n    const propsInTransition = {};\n    for (const [key, transition] of this.transitions) {\n      transition.update();\n      propsInTransition[key] = transition.value;\n      if (!transition.inProgress) {\n        // transition ended\n        this.remove(key);\n      }\n    }\n    return propsInTransition;\n  }\n  clear() {\n    for (const key of this.transitions.keys()) {\n      this.remove(key);\n    }\n  }\n}","map":{"version":3,"names":["normalizeTransitionSettings","CPUInterpolationTransition","CPUSpringTransition","log","TRANSITION_TYPES","interpolation","spring","UniformTransitionManager","constructor","timeline","transitions","Map","active","size","add","key","fromValue","toValue","settings","has","transition","get","value","remove","TransitionType","type","error","start","set","cancel","delete","update","propsInTransition","inProgress","clear","keys"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\core\\src\\lib\\uniform-transition-manager.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {normalizeTransitionSettings} from './attribute/transition-settings';\nimport CPUInterpolationTransition from '../transitions/cpu-interpolation-transition';\nimport CPUSpringTransition from '../transitions/cpu-spring-transition';\nimport log from '../utils/log';\n\nconst TRANSITION_TYPES = {\n  interpolation: CPUInterpolationTransition,\n  spring: CPUSpringTransition\n};\n\nexport default class UniformTransitionManager {\n  transitions = new Map();\n  timeline;\n\n  constructor(timeline) {\n    this.timeline = timeline;\n  }\n\n  get active() {\n    return this.transitions.size > 0;\n  }\n\n  add(key, fromValue, toValue, settings) {\n    const {transitions} = this;\n    if (transitions.has(key)) {\n      const transition = transitions.get(key);\n      // value may not be available if `update()` has not been called. Fallback to `fromValue`\n      const {value = transition.settings.fromValue} = transition;\n      // start from interrupted position\n      fromValue = value;\n      this.remove(key);\n    }\n\n    settings = normalizeTransitionSettings(settings);\n    if (!settings) {\n      return;\n    }\n\n    const TransitionType = TRANSITION_TYPES[settings.type];\n    if (!TransitionType) {\n      log.error(`unsupported transition type '${settings.type}'`)();\n      return;\n    }\n    const transition = new TransitionType(this.timeline);\n    transition.start({\n      ...settings,\n      fromValue,\n      toValue\n    });\n    transitions.set(key, transition);\n  }\n\n  remove(key) {\n    const {transitions} = this;\n    if (transitions.has(key)) {\n      transitions.get(key).cancel();\n      transitions.delete(key);\n    }\n  }\n\n  update() {\n    const propsInTransition = {};\n\n    for (const [key, transition] of this.transitions) {\n      transition.update();\n      propsInTransition[key] = transition.value;\n      if (!transition.inProgress) {\n        // transition ended\n        this.remove(key);\n      }\n    }\n\n    return propsInTransition;\n  }\n\n  clear() {\n    for (const key of this.transitions.keys()) {\n      this.remove(key);\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AAEA,SAAQA,2BAA2B,QAAC;AACpC,OAAOC,0BAA0B;AACjC,OAAOC,mBAAmB;AAC1B,OAAOC,GAAG;AAEV,MAAMC,gBAAgB,GAAG;EACvBC,aAAa,EAAEJ,0BAA0B;EACzCK,MAAM,EAAEJ;CACT;AAED,eAAc,MAAOK,wBAAwB;EAI3CC,YAAYC,QAAQ;IAHpB,KAAAC,WAAW,GAAG,IAAIC,GAAG,EAAE;IAIrB,IAAI,CAACF,QAAQ,GAAGA,QAAQ;EAC1B;EAEA,IAAIG,MAAMA,CAAA;IACR,OAAO,IAAI,CAACF,WAAW,CAACG,IAAI,GAAG,CAAC;EAClC;EAEAC,GAAGA,CAACC,GAAG,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ;IACnC,MAAM;MAACR;IAAW,CAAC,GAAG,IAAI;IAC1B,IAAIA,WAAW,CAACS,GAAG,CAACJ,GAAG,CAAC,EAAE;MACxB,MAAMK,UAAU,GAAGV,WAAW,CAACW,GAAG,CAACN,GAAG,CAAC;MACvC;MACA,MAAM;QAACO,KAAK,GAAGF,UAAU,CAACF,QAAQ,CAACF;MAAS,CAAC,GAAGI,UAAU;MAC1D;MACAJ,SAAS,GAAGM,KAAK;MACjB,IAAI,CAACC,MAAM,CAACR,GAAG,CAAC;IAClB;IAEAG,QAAQ,GAAGlB,2BAA2B,CAACkB,QAAQ,CAAC;IAChD,IAAI,CAACA,QAAQ,EAAE;MACb;IACF;IAEA,MAAMM,cAAc,GAAGpB,gBAAgB,CAACc,QAAQ,CAACO,IAAI,CAAC;IACtD,IAAI,CAACD,cAAc,EAAE;MACnBrB,GAAG,CAACuB,KAAK,CAAC,gCAAgCR,QAAQ,CAACO,IAAI,GAAG,CAAC,EAAE;MAC7D;IACF;IACA,MAAML,UAAU,GAAG,IAAII,cAAc,CAAC,IAAI,CAACf,QAAQ,CAAC;IACpDW,UAAU,CAACO,KAAK,CAAC;MACf,GAAGT,QAAQ;MACXF,SAAS;MACTC;KACD,CAAC;IACFP,WAAW,CAACkB,GAAG,CAACb,GAAG,EAAEK,UAAU,CAAC;EAClC;EAEAG,MAAMA,CAACR,GAAG;IACR,MAAM;MAACL;IAAW,CAAC,GAAG,IAAI;IAC1B,IAAIA,WAAW,CAACS,GAAG,CAACJ,GAAG,CAAC,EAAE;MACxBL,WAAW,CAACW,GAAG,CAACN,GAAG,CAAC,CAACc,MAAM,EAAE;MAC7BnB,WAAW,CAACoB,MAAM,CAACf,GAAG,CAAC;IACzB;EACF;EAEAgB,MAAMA,CAAA;IACJ,MAAMC,iBAAiB,GAAG,EAAE;IAE5B,KAAK,MAAM,CAACjB,GAAG,EAAEK,UAAU,CAAC,IAAI,IAAI,CAACV,WAAW,EAAE;MAChDU,UAAU,CAACW,MAAM,EAAE;MACnBC,iBAAiB,CAACjB,GAAG,CAAC,GAAGK,UAAU,CAACE,KAAK;MACzC,IAAI,CAACF,UAAU,CAACa,UAAU,EAAE;QAC1B;QACA,IAAI,CAACV,MAAM,CAACR,GAAG,CAAC;MAClB;IACF;IAEA,OAAOiB,iBAAiB;EAC1B;EAEAE,KAAKA,CAAA;IACH,KAAK,MAAMnB,GAAG,IAAI,IAAI,CAACL,WAAW,CAACyB,IAAI,EAAE,EAAE;MACzC,IAAI,CAACZ,MAAM,CAACR,GAAG,CAAC;IAClB;EACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}