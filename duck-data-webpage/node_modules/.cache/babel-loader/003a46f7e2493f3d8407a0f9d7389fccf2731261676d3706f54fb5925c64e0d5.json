{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { isBrowser } from \"../env-utils/globals.js\";\nconst NOT_IMPLEMENTED = new Error('Not implemented');\n/** This class is a facade that gets replaced with an actual NodeFile instance  */\nexport class NodeFileFacade {\n  handle;\n  size = 0;\n  bigsize = 0n;\n  url = '';\n  constructor(url, flags, mode) {\n    // Return the actual implementation instance\n    if (globalThis.loaders?.NodeFile) {\n      return new globalThis.loaders.NodeFile(url, flags, mode);\n    }\n    if (isBrowser) {\n      throw new Error('Can\\'t instantiate NodeFile in browser.');\n    }\n    throw new Error('Can\\'t instantiate NodeFile. Make sure to import @loaders.gl/polyfills first.');\n  }\n  /** Read data */\n  async read(start, length) {\n    throw NOT_IMPLEMENTED;\n  }\n  /** Write to file. The number of bytes written will be returned */\n  async write(arrayBuffer, offset, length) {\n    throw NOT_IMPLEMENTED;\n  }\n  /** Get information about file */\n  async stat() {\n    throw NOT_IMPLEMENTED;\n  }\n  /** Truncates the file descriptor. Only available on NodeFile. */\n  async truncate(length) {\n    throw NOT_IMPLEMENTED;\n  }\n  /** Append data to a file. Only available on NodeFile. */\n  async append(data) {\n    throw NOT_IMPLEMENTED;\n  }\n  /** Close the file */\n  async close() {}\n}","map":{"version":3,"names":["isBrowser","NOT_IMPLEMENTED","Error","NodeFileFacade","handle","size","bigsize","url","constructor","flags","mode","globalThis","loaders","NodeFile","read","start","length","write","arrayBuffer","offset","stat","truncate","append","data","close"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/loader-utils/dist/lib/files/node-file-facade.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { isBrowser } from \"../env-utils/globals.js\";\nconst NOT_IMPLEMENTED = new Error('Not implemented');\n/** This class is a facade that gets replaced with an actual NodeFile instance  */\nexport class NodeFileFacade {\n    handle;\n    size = 0;\n    bigsize = 0n;\n    url = '';\n    constructor(url, flags, mode) {\n        // Return the actual implementation instance\n        if (globalThis.loaders?.NodeFile) {\n            return new globalThis.loaders.NodeFile(url, flags, mode);\n        }\n        if (isBrowser) {\n            throw new Error('Can\\'t instantiate NodeFile in browser.');\n        }\n        throw new Error('Can\\'t instantiate NodeFile. Make sure to import @loaders.gl/polyfills first.');\n    }\n    /** Read data */\n    async read(start, length) {\n        throw NOT_IMPLEMENTED;\n    }\n    /** Write to file. The number of bytes written will be returned */\n    async write(arrayBuffer, offset, length) {\n        throw NOT_IMPLEMENTED;\n    }\n    /** Get information about file */\n    async stat() {\n        throw NOT_IMPLEMENTED;\n    }\n    /** Truncates the file descriptor. Only available on NodeFile. */\n    async truncate(length) {\n        throw NOT_IMPLEMENTED;\n    }\n    /** Append data to a file. Only available on NodeFile. */\n    async append(data) {\n        throw NOT_IMPLEMENTED;\n    }\n    /** Close the file */\n    async close() { }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,yBAAyB;AACnD,MAAMC,eAAe,GAAG,IAAIC,KAAK,CAAC,iBAAiB,CAAC;AACpD;AACA,OAAO,MAAMC,cAAc,CAAC;EACxBC,MAAM;EACNC,IAAI,GAAG,CAAC;EACRC,OAAO,GAAG,EAAE;EACZC,GAAG,GAAG,EAAE;EACRC,WAAWA,CAACD,GAAG,EAAEE,KAAK,EAAEC,IAAI,EAAE;IAC1B;IACA,IAAIC,UAAU,CAACC,OAAO,EAAEC,QAAQ,EAAE;MAC9B,OAAO,IAAIF,UAAU,CAACC,OAAO,CAACC,QAAQ,CAACN,GAAG,EAAEE,KAAK,EAAEC,IAAI,CAAC;IAC5D;IACA,IAAIV,SAAS,EAAE;MACX,MAAM,IAAIE,KAAK,CAAC,yCAAyC,CAAC;IAC9D;IACA,MAAM,IAAIA,KAAK,CAAC,+EAA+E,CAAC;EACpG;EACA;EACA,MAAMY,IAAIA,CAACC,KAAK,EAAEC,MAAM,EAAE;IACtB,MAAMf,eAAe;EACzB;EACA;EACA,MAAMgB,KAAKA,CAACC,WAAW,EAAEC,MAAM,EAAEH,MAAM,EAAE;IACrC,MAAMf,eAAe;EACzB;EACA;EACA,MAAMmB,IAAIA,CAAA,EAAG;IACT,MAAMnB,eAAe;EACzB;EACA;EACA,MAAMoB,QAAQA,CAACL,MAAM,EAAE;IACnB,MAAMf,eAAe;EACzB;EACA;EACA,MAAMqB,MAAMA,CAACC,IAAI,EAAE;IACf,MAAMtB,eAAe;EACzB;EACA;EACA,MAAMuB,KAAKA,CAAA,EAAG,CAAE;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}