{"ast":null,"code":"// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { isNumericArray } from '@math.gl/types';\nexport function isUniformValue(value) {\n  return isNumericArray(value) !== null || typeof value === 'number' || typeof value === 'boolean';\n}\nexport function splitUniformsAndBindings(uniforms) {\n  const result = {\n    bindings: {},\n    uniforms: {}\n  };\n  Object.keys(uniforms).forEach(name => {\n    const uniform = uniforms[name];\n    if (isUniformValue(uniform)) {\n      result.uniforms[name] = uniform;\n    } else {\n      result.bindings[name] = uniform;\n    }\n  });\n  return result;\n}\n//# sourceMappingURL=split-uniforms-and-bindings.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}