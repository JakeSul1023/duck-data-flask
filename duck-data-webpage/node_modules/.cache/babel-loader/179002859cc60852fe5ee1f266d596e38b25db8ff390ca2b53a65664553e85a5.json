{"ast":null,"code":"import { TOUCH_ACTION_COMPUTE } from \"./touchaction-Consts.js\";\nimport cleanTouchActions from \"./clean-touch-actions.js\";\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n */\nexport class TouchAction {\n  constructor(manager, value) {\n    this.actions = '';\n    this.manager = manager;\n    this.set(value);\n  }\n  /**\n   * set the touchAction value on the element or enable the polyfill\n   */\n  set(value) {\n    // find out the touch-action by the event handlers\n    if (value === TOUCH_ACTION_COMPUTE) {\n      value = this.compute();\n    }\n    if (this.manager.element) {\n      this.manager.element.style.touchAction = value;\n      this.actions = value;\n    }\n  }\n  /**\n   * just re-set the touchAction value\n   */\n  update() {\n    this.set(this.manager.options.touchAction);\n  }\n  /**\n   * compute the value for the touchAction property based on the recognizer's settings\n   */\n  compute() {\n    let actions = [];\n    for (const recognizer of this.manager.recognizers) {\n      if (recognizer.options.enable) {\n        actions = actions.concat(recognizer.getTouchAction());\n      }\n    }\n    return cleanTouchActions(actions.join(' '));\n  }\n}\n//# sourceMappingURL=touchaction.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}