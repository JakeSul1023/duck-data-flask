{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst BROWSER_PREFIXES = ['', 'WEBKIT_', 'MOZ_'];\nconst WEBGL_EXTENSIONS = {\n  /* eslint-disable camelcase */\n  WEBGL_compressed_texture_s3tc: 'dxt',\n  WEBGL_compressed_texture_s3tc_srgb: 'dxt-srgb',\n  WEBGL_compressed_texture_etc1: 'etc1',\n  WEBGL_compressed_texture_etc: 'etc2',\n  WEBGL_compressed_texture_pvrtc: 'pvrtc',\n  WEBGL_compressed_texture_atc: 'atc',\n  WEBGL_compressed_texture_astc: 'astc',\n  EXT_texture_compression_rgtc: 'rgtc'\n  /* eslint-enable camelcase */\n};\nlet formats = null;\n/**\n * Returns a list of formats.\n * Creates a temporary WebGLRenderingContext if none is provided.\n *\n * @param gl - Optional context.\n */\nexport function getSupportedGPUTextureFormats(gl) {\n  if (!formats) {\n    gl = gl || getWebGLContext() || undefined;\n    formats = new Set();\n    for (const prefix of BROWSER_PREFIXES) {\n      for (const extension in WEBGL_EXTENSIONS) {\n        if (gl && gl.getExtension(`${prefix}${extension}`)) {\n          const gpuTextureFormat = WEBGL_EXTENSIONS[extension];\n          formats.add(gpuTextureFormat);\n        }\n      }\n    }\n  }\n  return formats;\n}\n/**\n * @returns {WebGLRenderingContext?}\n */\nfunction getWebGLContext() {\n  try {\n    const canvas = document.createElement('canvas');\n    return canvas.getContext('webgl');\n  } catch (error) {\n    return null;\n  }\n}","map":{"version":3,"names":["BROWSER_PREFIXES","WEBGL_EXTENSIONS","WEBGL_compressed_texture_s3tc","WEBGL_compressed_texture_s3tc_srgb","WEBGL_compressed_texture_etc1","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_pvrtc","WEBGL_compressed_texture_atc","WEBGL_compressed_texture_astc","EXT_texture_compression_rgtc","formats","getSupportedGPUTextureFormats","gl","getWebGLContext","undefined","Set","prefix","extension","getExtension","gpuTextureFormat","add","canvas","document","createElement","getContext","error"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/textures/dist/lib/utils/texture-formats.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst BROWSER_PREFIXES = ['', 'WEBKIT_', 'MOZ_'];\nconst WEBGL_EXTENSIONS = {\n    /* eslint-disable camelcase */\n    WEBGL_compressed_texture_s3tc: 'dxt',\n    WEBGL_compressed_texture_s3tc_srgb: 'dxt-srgb',\n    WEBGL_compressed_texture_etc1: 'etc1',\n    WEBGL_compressed_texture_etc: 'etc2',\n    WEBGL_compressed_texture_pvrtc: 'pvrtc',\n    WEBGL_compressed_texture_atc: 'atc',\n    WEBGL_compressed_texture_astc: 'astc',\n    EXT_texture_compression_rgtc: 'rgtc'\n    /* eslint-enable camelcase */\n};\nlet formats = null;\n/**\n * Returns a list of formats.\n * Creates a temporary WebGLRenderingContext if none is provided.\n *\n * @param gl - Optional context.\n */\nexport function getSupportedGPUTextureFormats(gl) {\n    if (!formats) {\n        gl = gl || getWebGLContext() || undefined;\n        formats = new Set();\n        for (const prefix of BROWSER_PREFIXES) {\n            for (const extension in WEBGL_EXTENSIONS) {\n                if (gl && gl.getExtension(`${prefix}${extension}`)) {\n                    const gpuTextureFormat = WEBGL_EXTENSIONS[extension];\n                    formats.add(gpuTextureFormat);\n                }\n            }\n        }\n    }\n    return formats;\n}\n/**\n * @returns {WebGLRenderingContext?}\n */\nfunction getWebGLContext() {\n    try {\n        const canvas = document.createElement('canvas');\n        return canvas.getContext('webgl');\n    }\n    catch (error) {\n        return null;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,MAAMA,gBAAgB,GAAG,CAAC,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC;AAChD,MAAMC,gBAAgB,GAAG;EACrB;EACAC,6BAA6B,EAAE,KAAK;EACpCC,kCAAkC,EAAE,UAAU;EAC9CC,6BAA6B,EAAE,MAAM;EACrCC,4BAA4B,EAAE,MAAM;EACpCC,8BAA8B,EAAE,OAAO;EACvCC,4BAA4B,EAAE,KAAK;EACnCC,6BAA6B,EAAE,MAAM;EACrCC,4BAA4B,EAAE;EAC9B;AACJ,CAAC;AACD,IAAIC,OAAO,GAAG,IAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,6BAA6BA,CAACC,EAAE,EAAE;EAC9C,IAAI,CAACF,OAAO,EAAE;IACVE,EAAE,GAAGA,EAAE,IAAIC,eAAe,CAAC,CAAC,IAAIC,SAAS;IACzCJ,OAAO,GAAG,IAAIK,GAAG,CAAC,CAAC;IACnB,KAAK,MAAMC,MAAM,IAAIhB,gBAAgB,EAAE;MACnC,KAAK,MAAMiB,SAAS,IAAIhB,gBAAgB,EAAE;QACtC,IAAIW,EAAE,IAAIA,EAAE,CAACM,YAAY,CAAC,GAAGF,MAAM,GAAGC,SAAS,EAAE,CAAC,EAAE;UAChD,MAAME,gBAAgB,GAAGlB,gBAAgB,CAACgB,SAAS,CAAC;UACpDP,OAAO,CAACU,GAAG,CAACD,gBAAgB,CAAC;QACjC;MACJ;IACJ;EACJ;EACA,OAAOT,OAAO;AAClB;AACA;AACA;AACA;AACA,SAASG,eAAeA,CAAA,EAAG;EACvB,IAAI;IACA,MAAMQ,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/C,OAAOF,MAAM,CAACG,UAAU,CAAC,OAAO,CAAC;EACrC,CAAC,CACD,OAAOC,KAAK,EAAE;IACV,OAAO,IAAI;EACf;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}