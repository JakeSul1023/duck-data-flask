{"ast":null,"code":"// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { Stats } from '@probe.gl/stats';\n/**\n * Helper class managing a collection of probe.gl stats objects\n */\nexport class StatsManager {\n  stats = new Map();\n  getStats(name) {\n    return this.get(name);\n  }\n  get(name) {\n    if (!this.stats.has(name)) {\n      this.stats.set(name, new Stats({\n        id: name\n      }));\n    }\n    return this.stats.get(name);\n  }\n}\n/** Global stats for all luma.gl devices */\nexport const lumaStats = new StatsManager();","map":{"version":3,"names":["Stats","StatsManager","stats","Map","getStats","name","get","has","set","id","lumaStats"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@luma.gl\\core\\src\\utils\\stats-manager.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Stats} from '@probe.gl/stats';\n\n/**\n * Helper class managing a collection of probe.gl stats objects\n */\nexport class StatsManager {\n  stats = new Map();\n\n  getStats(name: string): Stats {\n    return this.get(name);\n  }\n\n  get(name: string): Stats {\n    if (!this.stats.has(name)) {\n      this.stats.set(name, new Stats({id: name}));\n    }\n\n    return this.stats.get(name);\n  }\n}\n\n/** Global stats for all luma.gl devices */\nexport const lumaStats: StatsManager = new StatsManager();\n"],"mappings":"AAAA;AACA;AACA;AAEA,SAAQA,KAAK,QAAO,iBAAiB;AAErC;;;AAGA,OAAM,MAAOC,YAAY;EACvBC,KAAK,GAAG,IAAIC,GAAG,EAAE;EAEjBC,QAAQA,CAACC,IAAY;IACnB,OAAO,IAAI,CAACC,GAAG,CAACD,IAAI,CAAC;EACvB;EAEAC,GAAGA,CAACD,IAAY;IACd,IAAI,CAAC,IAAI,CAACH,KAAK,CAACK,GAAG,CAACF,IAAI,CAAC,EAAE;MACzB,IAAI,CAACH,KAAK,CAACM,GAAG,CAACH,IAAI,EAAE,IAAIL,KAAK,CAAC;QAACS,EAAE,EAAEJ;MAAI,CAAC,CAAC,CAAC;IAC7C;IAEA,OAAO,IAAI,CAACH,KAAK,CAACI,GAAG,CAACD,IAAI,CAAC;EAC7B;;AAGF;AACA,OAAO,MAAMK,SAAS,GAAiB,IAAIT,YAAY,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}