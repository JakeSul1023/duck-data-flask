{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/**\n * Create a float texture to store aggregation result\n */\nexport function createRenderTarget(device, width, height) {\n  return device.createFramebuffer({\n    width,\n    height,\n    colorAttachments: [device.createTexture({\n      width,\n      height,\n      format: 'rgba32float',\n      mipmaps: false,\n      sampler: {\n        minFilter: 'nearest',\n        magFilter: 'nearest'\n      }\n    })]\n  });\n}","map":{"version":3,"names":["createRenderTarget","device","width","height","createFramebuffer","colorAttachments","createTexture","format","mipmaps","sampler","minFilter","magFilter"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\aggregation-layers\\src\\common\\aggregator\\gpu-aggregator\\utils.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Device, Framebuffer} from '@luma.gl/core';\n\n/**\n * Create a float texture to store aggregation result\n */\nexport function createRenderTarget(device: Device, width: number, height: number): Framebuffer {\n  return device.createFramebuffer({\n    width,\n    height,\n    colorAttachments: [\n      device.createTexture({\n        width,\n        height,\n        format: 'rgba32float',\n        mipmaps: false,\n        sampler: {\n          minFilter: 'nearest',\n          magFilter: 'nearest'\n        }\n      })\n    ]\n  });\n}\n"],"mappings":"AAAA;AACA;AACA;AAIA;;;AAGA,OAAM,SAAUA,kBAAkBA,CAACC,MAAc,EAAEC,KAAa,EAAEC,MAAc;EAC9E,OAAOF,MAAM,CAACG,iBAAiB,CAAC;IAC9BF,KAAK;IACLC,MAAM;IACNE,gBAAgB,EAAE,CAChBJ,MAAM,CAACK,aAAa,CAAC;MACnBJ,KAAK;MACLC,MAAM;MACNI,MAAM,EAAE,aAAa;MACrBC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE;QACPC,SAAS,EAAE,SAAS;QACpBC,SAAS,EAAE;;KAEd,CAAC;GAEL,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}