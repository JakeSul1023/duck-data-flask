{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport TransitionInterpolator from \"./transition-interpolator.js\";\nimport { lerp } from '@math.gl/core';\nconst DEFAULT_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\nconst DEFAULT_REQUIRED_PROPS = ['longitude', 'latitude', 'zoom'];\n/**\n * Performs linear interpolation of two view states.\n */\nexport default class LinearInterpolator extends TransitionInterpolator {\n  /**\n   * @param {Object} opts\n   * @param {Array} opts.transitionProps - list of props to apply linear transition to.\n   * @param {Array} opts.around - a screen point to zoom/rotate around.\n   * @param {Function} opts.makeViewport - construct a viewport instance with given props.\n   */\n  constructor(opts = {}) {\n    // Backward compatibility\n    const transitionProps = Array.isArray(opts) ? opts : opts.transitionProps;\n    const normalizedOpts = Array.isArray(opts) ? {} : opts;\n    normalizedOpts.transitionProps = Array.isArray(transitionProps) ? {\n      compare: transitionProps,\n      required: transitionProps\n    } : transitionProps || {\n      compare: DEFAULT_PROPS,\n      required: DEFAULT_REQUIRED_PROPS\n    };\n    super(normalizedOpts.transitionProps);\n    this.opts = normalizedOpts;\n  }\n  initializeProps(startProps, endProps) {\n    const result = super.initializeProps(startProps, endProps);\n    const {\n      makeViewport,\n      around\n    } = this.opts;\n    if (makeViewport && around) {\n      const startViewport = makeViewport(startProps);\n      const endViewport = makeViewport(endProps);\n      const aroundPosition = startViewport.unproject(around);\n      result.start.around = around;\n      Object.assign(result.end, {\n        around: endViewport.project(aroundPosition),\n        aroundPosition,\n        width: endProps.width,\n        height: endProps.height\n      });\n    }\n    return result;\n  }\n  interpolateProps(startProps, endProps, t) {\n    const propsInTransition = {};\n    for (const key of this._propsToExtract) {\n      propsInTransition[key] = lerp(startProps[key] || 0, endProps[key] || 0, t);\n    }\n    if (endProps.aroundPosition && this.opts.makeViewport) {\n      // Linear transition should be performed in common space\n      const viewport = this.opts.makeViewport({\n        ...endProps,\n        ...propsInTransition\n      });\n      Object.assign(propsInTransition, viewport.panByPosition(endProps.aroundPosition,\n      // anchor point in current screen coordinates\n      lerp(startProps.around, endProps.around, t)));\n    }\n    return propsInTransition;\n  }\n}","map":{"version":3,"names":["TransitionInterpolator","lerp","DEFAULT_PROPS","DEFAULT_REQUIRED_PROPS","LinearInterpolator","constructor","opts","transitionProps","Array","isArray","normalizedOpts","compare","required","initializeProps","startProps","endProps","result","makeViewport","around","startViewport","endViewport","aroundPosition","unproject","start","Object","assign","end","project","width","height","interpolateProps","t","propsInTransition","key","_propsToExtract","viewport","panByPosition"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\core\\src\\transitions\\linear-interpolator.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport TransitionInterpolator from './transition-interpolator';\nimport {lerp} from '@math.gl/core';\n\nimport type Viewport from '../viewports/viewport';\n\nconst DEFAULT_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\nconst DEFAULT_REQUIRED_PROPS = ['longitude', 'latitude', 'zoom'];\n\ntype PropsWithAnchor = {\n  around?: number[];\n  aroundPosition?: number[];\n  [key: string]: any;\n};\n\n/**\n * Performs linear interpolation of two view states.\n */\nexport default class LinearInterpolator extends TransitionInterpolator {\n  opts: {\n    around?: number[];\n    makeViewport?: (props: Record<string, any>) => Viewport;\n  };\n\n  /**\n   * @param {Object} opts\n   * @param {Array} opts.transitionProps - list of props to apply linear transition to.\n   * @param {Array} opts.around - a screen point to zoom/rotate around.\n   * @param {Function} opts.makeViewport - construct a viewport instance with given props.\n   */\n  constructor(\n    opts:\n      | string[]\n      | {\n          transitionProps?:\n            | string[]\n            | {\n                compare: string[];\n                extract?: string[];\n                required?: string[];\n              };\n          around?: number[];\n          makeViewport?: (props: Record<string, any>) => Viewport;\n        } = {}\n  ) {\n    // Backward compatibility\n    const transitionProps = Array.isArray(opts) ? opts : opts.transitionProps;\n\n    const normalizedOpts = Array.isArray(opts) ? {} : opts;\n    normalizedOpts.transitionProps = Array.isArray(transitionProps)\n      ? {\n          compare: transitionProps,\n          required: transitionProps\n        }\n      : transitionProps || {\n          compare: DEFAULT_PROPS,\n          required: DEFAULT_REQUIRED_PROPS\n        };\n\n    super(normalizedOpts.transitionProps);\n    this.opts = normalizedOpts;\n  }\n\n  initializeProps(\n    startProps: Record<string, any>,\n    endProps: Record<string, any>\n  ): {\n    start: PropsWithAnchor;\n    end: PropsWithAnchor;\n  } {\n    const result = super.initializeProps(startProps, endProps);\n\n    const {makeViewport, around} = this.opts;\n    if (makeViewport && around) {\n      const startViewport = makeViewport(startProps);\n      const endViewport = makeViewport(endProps);\n      const aroundPosition = startViewport.unproject(around);\n      result.start.around = around;\n      Object.assign(result.end, {\n        around: endViewport.project(aroundPosition),\n        aroundPosition,\n        width: endProps.width,\n        height: endProps.height\n      });\n    }\n\n    return result;\n  }\n\n  interpolateProps(\n    startProps: PropsWithAnchor,\n    endProps: PropsWithAnchor,\n    t: number\n  ): Record<string, any> {\n    const propsInTransition = {};\n    for (const key of this._propsToExtract) {\n      propsInTransition[key] = lerp(startProps[key] || 0, endProps[key] || 0, t);\n    }\n\n    if (endProps.aroundPosition && this.opts.makeViewport) {\n      // Linear transition should be performed in common space\n      const viewport = this.opts.makeViewport({...endProps, ...propsInTransition});\n      Object.assign(\n        propsInTransition,\n        viewport.panByPosition(\n          endProps.aroundPosition,\n          // anchor point in current screen coordinates\n          lerp(startProps.around as number[], endProps.around as number[], t) as number[]\n        )\n      );\n    }\n    return propsInTransition;\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AAEA,OAAOA,sBAAsB;AAC7B,SAAQC,IAAI,QAAO,eAAe;AAIlC,MAAMC,aAAa,GAAG,CAAC,WAAW,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC;AAC3E,MAAMC,sBAAsB,GAAG,CAAC,WAAW,EAAE,UAAU,EAAE,MAAM,CAAC;AAQhE;;;AAGA,eAAc,MAAOC,kBAAmB,SAAQJ,sBAAsB;EAMpE;;;;;;EAMAK,YACEC,IAAA,GAYQ,EAAE;IAEV;IACA,MAAMC,eAAe,GAAGC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,GAAGA,IAAI,GAAGA,IAAI,CAACC,eAAe;IAEzE,MAAMG,cAAc,GAAGF,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,GAAG,EAAE,GAAGA,IAAI;IACtDI,cAAc,CAACH,eAAe,GAAGC,KAAK,CAACC,OAAO,CAACF,eAAe,CAAC,GAC3D;MACEI,OAAO,EAAEJ,eAAe;MACxBK,QAAQ,EAAEL;KACX,GACDA,eAAe,IAAI;MACjBI,OAAO,EAAET,aAAa;MACtBU,QAAQ,EAAET;KACX;IAEL,KAAK,CAACO,cAAc,CAACH,eAAe,CAAC;IACrC,IAAI,CAACD,IAAI,GAAGI,cAAc;EAC5B;EAEAG,eAAeA,CACbC,UAA+B,EAC/BC,QAA6B;IAK7B,MAAMC,MAAM,GAAG,KAAK,CAACH,eAAe,CAACC,UAAU,EAAEC,QAAQ,CAAC;IAE1D,MAAM;MAACE,YAAY;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACZ,IAAI;IACxC,IAAIW,YAAY,IAAIC,MAAM,EAAE;MAC1B,MAAMC,aAAa,GAAGF,YAAY,CAACH,UAAU,CAAC;MAC9C,MAAMM,WAAW,GAAGH,YAAY,CAACF,QAAQ,CAAC;MAC1C,MAAMM,cAAc,GAAGF,aAAa,CAACG,SAAS,CAACJ,MAAM,CAAC;MACtDF,MAAM,CAACO,KAAK,CAACL,MAAM,GAAGA,MAAM;MAC5BM,MAAM,CAACC,MAAM,CAACT,MAAM,CAACU,GAAG,EAAE;QACxBR,MAAM,EAAEE,WAAW,CAACO,OAAO,CAACN,cAAc,CAAC;QAC3CA,cAAc;QACdO,KAAK,EAAEb,QAAQ,CAACa,KAAK;QACrBC,MAAM,EAAEd,QAAQ,CAACc;OAClB,CAAC;IACJ;IAEA,OAAOb,MAAM;EACf;EAEAc,gBAAgBA,CACdhB,UAA2B,EAC3BC,QAAyB,EACzBgB,CAAS;IAET,MAAMC,iBAAiB,GAAG,EAAE;IAC5B,KAAK,MAAMC,GAAG,IAAI,IAAI,CAACC,eAAe,EAAE;MACtCF,iBAAiB,CAACC,GAAG,CAAC,GAAGhC,IAAI,CAACa,UAAU,CAACmB,GAAG,CAAC,IAAI,CAAC,EAAElB,QAAQ,CAACkB,GAAG,CAAC,IAAI,CAAC,EAAEF,CAAC,CAAC;IAC5E;IAEA,IAAIhB,QAAQ,CAACM,cAAc,IAAI,IAAI,CAACf,IAAI,CAACW,YAAY,EAAE;MACrD;MACA,MAAMkB,QAAQ,GAAG,IAAI,CAAC7B,IAAI,CAACW,YAAY,CAAC;QAAC,GAAGF,QAAQ;QAAE,GAAGiB;MAAiB,CAAC,CAAC;MAC5ER,MAAM,CAACC,MAAM,CACXO,iBAAiB,EACjBG,QAAQ,CAACC,aAAa,CACpBrB,QAAQ,CAACM,cAAc;MACvB;MACApB,IAAI,CAACa,UAAU,CAACI,MAAkB,EAAEH,QAAQ,CAACG,MAAkB,EAAEa,CAAC,CAAa,CAChF,CACF;IACH;IACA,OAAOC,iBAAiB;EAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}