{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { fp32 } from '@luma.gl/shadertools';\nimport geometry from \"../misc/geometry.js\";\nimport { getUniformsFromViewport } from \"./viewport-uniforms.js\";\nimport { projectWGSL } from \"./project.wgsl.js\";\nimport { projectGLSL } from \"./project.glsl.js\";\nconst INITIAL_MODULE_OPTIONS = {};\nfunction getUniforms() {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_MODULE_OPTIONS;\n  if ('viewport' in opts) {\n    return getUniformsFromViewport(opts);\n  }\n  return {};\n}\nexport default {\n  name: 'project',\n  dependencies: [fp32, geometry],\n  source: projectWGSL,\n  vs: projectGLSL,\n  getUniforms,\n  uniformTypes: {\n    wrapLongitude: 'f32',\n    coordinateSystem: 'i32',\n    commonUnitsPerMeter: 'vec3<f32>',\n    projectionMode: 'i32',\n    scale: 'f32',\n    commonUnitsPerWorldUnit: 'vec3<f32>',\n    commonUnitsPerWorldUnit2: 'vec3<f32>',\n    center: 'vec4<f32>',\n    modelMatrix: 'mat4x4<f32>',\n    viewProjectionMatrix: 'mat4x4<f32>',\n    viewportSize: 'vec2<f32>',\n    devicePixelRatio: 'f32',\n    focalDistance: 'f32',\n    cameraPosition: 'vec3<f32>',\n    coordinateOrigin: 'vec3<f32>',\n    commonOrigin: 'vec3<f32>',\n    pseudoMeters: 'f32'\n  }\n  // @ts-ignore TODO v9.1\n};\n//# sourceMappingURL=project.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}