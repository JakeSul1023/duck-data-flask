{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst uniformBlock = `\\\nuniform simpleMeshUniforms {\n  float sizeScale;\n  bool composeModelMatrix;\n  bool hasTexture;\n  bool flatShading;\n} simpleMesh;\n`;\nexport const simpleMeshUniforms = {\n  name: 'simpleMesh',\n  vs: uniformBlock,\n  fs: uniformBlock,\n  uniformTypes: {\n    sizeScale: 'f32',\n    composeModelMatrix: 'f32',\n    hasTexture: 'f32',\n    flatShading: 'f32'\n  }\n};","map":{"version":3,"names":["uniformBlock","simpleMeshUniforms","name","vs","fs","uniformTypes","sizeScale","composeModelMatrix","hasTexture","flatShading"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\mesh-layers\\src\\simple-mesh-layer\\simple-mesh-layer-uniforms.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Texture} from '@luma.gl/core';\nimport type {ShaderModule} from '@luma.gl/shadertools';\n\nconst uniformBlock = `\\\nuniform simpleMeshUniforms {\n  float sizeScale;\n  bool composeModelMatrix;\n  bool hasTexture;\n  bool flatShading;\n} simpleMesh;\n`;\n\nexport type SimpleMeshProps = {\n  sizeScale?: number;\n  composeModelMatrix?: boolean;\n  hasTexture?: boolean;\n  flatShading?: boolean;\n  sampler?: Texture;\n};\n\nexport const simpleMeshUniforms = {\n  name: 'simpleMesh',\n  vs: uniformBlock,\n  fs: uniformBlock,\n  uniformTypes: {\n    sizeScale: 'f32',\n    composeModelMatrix: 'f32',\n    hasTexture: 'f32',\n    flatShading: 'f32'\n  }\n} as const satisfies ShaderModule<SimpleMeshProps>;\n"],"mappings":"AAAA;AACA;AACA;AAKA,MAAMA,YAAY,GAAG;;;;;;;CAOpB;AAUD,OAAO,MAAMC,kBAAkB,GAAG;EAChCC,IAAI,EAAE,YAAY;EAClBC,EAAE,EAAEH,YAAY;EAChBI,EAAE,EAAEJ,YAAY;EAChBK,YAAY,EAAE;IACZC,SAAS,EAAE,KAAK;IAChBC,kBAAkB,EAAE,KAAK;IACzBC,UAAU,EAAE,KAAK;IACjBC,WAAW,EAAE;;CAEiC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}