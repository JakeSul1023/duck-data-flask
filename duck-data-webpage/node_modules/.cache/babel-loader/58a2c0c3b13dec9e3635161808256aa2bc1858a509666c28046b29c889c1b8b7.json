{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof \"4.3.2\" !== 'undefined' ? \"4.3.2\" : 'latest';\n/**\n * Loads any data and returns null (or optionally passes through data unparsed)\n */\nexport const NullWorkerLoader = {\n  dataType: null,\n  batchType: null,\n  name: 'Null loader',\n  id: 'null',\n  module: 'core',\n  version: VERSION,\n  worker: true,\n  mimeTypes: ['application/x.empty'],\n  extensions: ['null'],\n  tests: [() => false],\n  options: {\n    null: {}\n  }\n};\n/**\n * Loads any data and returns null (or optionally passes through data unparsed)\n */\nexport const NullLoader = {\n  dataType: null,\n  batchType: null,\n  name: 'Null loader',\n  id: 'null',\n  module: 'core',\n  version: VERSION,\n  mimeTypes: ['application/x.empty'],\n  extensions: ['null'],\n  parse: async (arrayBuffer, options, context) => parseSync(arrayBuffer, options || {}, context),\n  parseSync,\n  parseInBatches: async function* generator(asyncIterator, options, context) {\n    for await (const batch of asyncIterator) {\n      yield parseSync(batch, options, context);\n    }\n  },\n  tests: [() => false],\n  options: {\n    null: {}\n  }\n};\n/**\n * Returns arguments passed to the parse API in a format that can be transferred to a\n * web worker. The `context` parameter is stripped using JSON.stringify & parse.\n */\nfunction parseSync(arrayBuffer, options, context) {\n  return null;\n}","map":{"version":3,"names":["VERSION","NullWorkerLoader","dataType","batchType","name","id","module","version","worker","mimeTypes","extensions","tests","options","null","NullLoader","parse","arrayBuffer","context","parseSync","parseInBatches","generator","asyncIterator","batch"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/core/dist/null-loader.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof \"4.3.2\" !== 'undefined' ? \"4.3.2\" : 'latest';\n/**\n * Loads any data and returns null (or optionally passes through data unparsed)\n */\nexport const NullWorkerLoader = {\n    dataType: null,\n    batchType: null,\n    name: 'Null loader',\n    id: 'null',\n    module: 'core',\n    version: VERSION,\n    worker: true,\n    mimeTypes: ['application/x.empty'],\n    extensions: ['null'],\n    tests: [() => false],\n    options: {\n        null: {}\n    }\n};\n/**\n * Loads any data and returns null (or optionally passes through data unparsed)\n */\nexport const NullLoader = {\n    dataType: null,\n    batchType: null,\n    name: 'Null loader',\n    id: 'null',\n    module: 'core',\n    version: VERSION,\n    mimeTypes: ['application/x.empty'],\n    extensions: ['null'],\n    parse: async (arrayBuffer, options, context) => parseSync(arrayBuffer, options || {}, context),\n    parseSync,\n    parseInBatches: async function* generator(asyncIterator, options, context) {\n        for await (const batch of asyncIterator) {\n            yield parseSync(batch, options, context);\n        }\n    },\n    tests: [() => false],\n    options: {\n        null: {}\n    }\n};\n/**\n * Returns arguments passed to the parse API in a format that can be transferred to a\n * web worker. The `context` parameter is stripped using JSON.stringify & parse.\n */\nfunction parseSync(arrayBuffer, options, context) {\n    return null;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,MAAMA,OAAO,GAAG,OAAO,OAAO,KAAK,WAAW,GAAG,OAAO,GAAG,QAAQ;AACnE;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAG;EAC5BC,QAAQ,EAAE,IAAI;EACdC,SAAS,EAAE,IAAI;EACfC,IAAI,EAAE,aAAa;EACnBC,EAAE,EAAE,MAAM;EACVC,MAAM,EAAE,MAAM;EACdC,OAAO,EAAEP,OAAO;EAChBQ,MAAM,EAAE,IAAI;EACZC,SAAS,EAAE,CAAC,qBAAqB,CAAC;EAClCC,UAAU,EAAE,CAAC,MAAM,CAAC;EACpBC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC;EACpBC,OAAO,EAAE;IACLC,IAAI,EAAE,CAAC;EACX;AACJ,CAAC;AACD;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAG;EACtBZ,QAAQ,EAAE,IAAI;EACdC,SAAS,EAAE,IAAI;EACfC,IAAI,EAAE,aAAa;EACnBC,EAAE,EAAE,MAAM;EACVC,MAAM,EAAE,MAAM;EACdC,OAAO,EAAEP,OAAO;EAChBS,SAAS,EAAE,CAAC,qBAAqB,CAAC;EAClCC,UAAU,EAAE,CAAC,MAAM,CAAC;EACpBK,KAAK,EAAE,MAAAA,CAAOC,WAAW,EAAEJ,OAAO,EAAEK,OAAO,KAAKC,SAAS,CAACF,WAAW,EAAEJ,OAAO,IAAI,CAAC,CAAC,EAAEK,OAAO,CAAC;EAC9FC,SAAS;EACTC,cAAc,EAAE,gBAAgBC,SAASA,CAACC,aAAa,EAAET,OAAO,EAAEK,OAAO,EAAE;IACvE,WAAW,MAAMK,KAAK,IAAID,aAAa,EAAE;MACrC,MAAMH,SAAS,CAACI,KAAK,EAAEV,OAAO,EAAEK,OAAO,CAAC;IAC5C;EACJ,CAAC;EACDN,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC;EACpBC,OAAO,EAAE;IACLC,IAAI,EAAE,CAAC;EACX;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA,SAASK,SAASA,CAACF,WAAW,EAAEJ,OAAO,EAAEK,OAAO,EAAE;EAC9C,OAAO,IAAI;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}