{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Fork of https://github.com/briantbutton/md5-wasm under MIT license\nimport { Hash } from \"./hash.js\";\nimport md5WASM from \"./algorithms/md5-wasm.js\";\nimport { encodeHex } from \"./utils/digest-utils.js\";\n/**\n * A transform that calculates MD5 hashes, passing data through\n */\nexport class MD5Hash extends Hash {\n  name = 'md5';\n  options;\n  constructor(options = {}) {\n    super();\n    this.options = options;\n  }\n  /**\n   * Atomic hash calculation\n   * @returns base64 encoded hash\n   */\n  async hash(input, encoding) {\n    const md5Promise = new Promise((resolve, reject) =>\n    // @ts-expect-error\n    md5WASM(input).then(resolve).catch(reject));\n    const hex = await md5Promise;\n    return encodeHex(hex, encoding);\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}