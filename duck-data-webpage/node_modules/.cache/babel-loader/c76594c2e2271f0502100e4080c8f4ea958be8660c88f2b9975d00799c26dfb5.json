{"ast":null,"code":"// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { project } from \"../../project/project.js\";\nconst DEFAULT_MODULE_OPTIONS = {\n  lightDirection: new Float32Array([1, 1, 2])\n};\nfunction getUniforms() {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_MODULE_OPTIONS;\n  const uniforms = {};\n  if (opts.lightDirection) {\n    // @ts-expect-error TODO add types\n    uniforms.dirlight_uLightDirection = opts.lightDirection;\n  }\n  return uniforms;\n}\nconst fs = /* glsl */`\\\nuniform vec3 dirlight_uLightDirection;\n\n/*\n * Returns color attenuated by angle from light source\n */\nvec4 dirlight_filterColor(vec4 color) {\n  vec3 normal = project_getNormal_World();\n  float d = abs(dot(normalize(normal), normalize(dirlight_uLightDirection)));\n  return vec4(color.rgb * d, color.a);\n}\n`;\n/**\n * Cheap lighting - single directional light, single dot product, one uniform\n */\nexport const dirlight = {\n  name: 'dirlight',\n  // vs // TODO - reuse normal from geometry module\n  fs,\n  getUniforms,\n  dependencies: [project]\n};\n//# sourceMappingURL=dirlight.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}