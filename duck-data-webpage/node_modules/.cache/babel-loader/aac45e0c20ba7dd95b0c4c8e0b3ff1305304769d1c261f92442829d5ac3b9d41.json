{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* eslint-disable no-console */\n// Avoid using named imports for Node builtins to help with \"empty\" resolution\n// for bundlers targeting browser environments. Access imports & types\n// through the `ChildProcess` object (e.g. `ChildProcess.spawn`, `ChildProcess.ChildProcess`).\nimport * as ChildProcess from 'child_process';\nimport { getAvailablePort } from \"./process-utils.js\";\nconst DEFAULT_PROPS = {\n  command: '',\n  arguments: [],\n  port: 5000,\n  autoPort: true,\n  wait: 2000,\n  onSuccess: processProxy => {\n    console.log(`Started ${processProxy.props.command}`);\n  }\n};\n/**\n * Manager for a Node.js child process\n * Prepares arguments, starts, stops and tracks output\n */\nexport default class ChildProcessProxy {\n  id;\n  props = {\n    ...DEFAULT_PROPS\n  };\n  childProcess = null;\n  port = 0;\n  successTimer; // NodeJS.Timeout;\n  // constructor(props?: {id?: string});\n  constructor({\n    id = 'browser-driver'\n  } = {}) {\n    this.id = id;\n  }\n  /** Starts a child process with the provided props */\n  async start(props) {\n    props = {\n      ...DEFAULT_PROPS,\n      ...props\n    };\n    this.props = props;\n    const args = [...props.arguments];\n    // If portArg is set, we can look up an available port\n    this.port = Number(props.port);\n    if (props.portArg) {\n      if (props.autoPort) {\n        this.port = await getAvailablePort(props.port);\n      }\n      args.push(props.portArg, String(this.port));\n    }\n    return await new Promise((resolve, reject) => {\n      try {\n        this._setTimeout(() => {\n          if (props.onSuccess) {\n            props.onSuccess(this);\n          }\n          resolve({});\n        });\n        console.log(`Spawning ${props.command} ${props.arguments.join(' ')}`);\n        const childProcess = ChildProcess.spawn(props.command, args, props.spawn);\n        this.childProcess = childProcess;\n        childProcess.stdout.on('data', data => {\n          console.log(data.toString());\n        });\n        childProcess.stderr.on('data', data => {\n          console.log(`Child process wrote to stderr: \"${data}\".`);\n          if (!props.ignoreStderr) {\n            this._clearTimeout();\n            reject(new Error(data));\n          }\n        });\n        childProcess.on('error', error => {\n          console.log(`Child process errored with ${error}`);\n          this._clearTimeout();\n          reject(error);\n        });\n        childProcess.on('close', code => {\n          console.log(`Child process exited with ${code}`);\n          this.childProcess = null;\n          this._clearTimeout();\n          resolve({});\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n  /** Stops a running child process */\n  async stop() {\n    if (this.childProcess) {\n      this.childProcess.kill();\n      this.childProcess = null;\n    }\n  }\n  /** Exits this process */\n  async exit(statusCode = 0) {\n    try {\n      await this.stop();\n      // eslint-disable-next-line no-process-exit\n      process.exit(statusCode);\n    } catch (error) {\n      console.error(error.message || error);\n      // eslint-disable-next-line no-process-exit\n      process.exit(1);\n    }\n  }\n  _setTimeout(callback) {\n    if (Number(this.props.wait) > 0) {\n      this.successTimer = setTimeout(callback, this.props.wait);\n    }\n  }\n  _clearTimeout() {\n    if (this.successTimer) {\n      clearTimeout(this.successTimer);\n    }\n  }\n}","map":{"version":3,"names":["ChildProcess","getAvailablePort","DEFAULT_PROPS","command","arguments","port","autoPort","wait","onSuccess","processProxy","console","log","props","ChildProcessProxy","id","childProcess","successTimer","constructor","start","args","Number","portArg","push","String","Promise","resolve","reject","_setTimeout","join","spawn","stdout","on","data","toString","stderr","ignoreStderr","_clearTimeout","Error","error","code","stop","kill","exit","statusCode","process","message","callback","setTimeout","clearTimeout"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/worker-utils/dist/lib/process-utils/child-process-proxy.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* eslint-disable no-console */\n// Avoid using named imports for Node builtins to help with \"empty\" resolution\n// for bundlers targeting browser environments. Access imports & types\n// through the `ChildProcess` object (e.g. `ChildProcess.spawn`, `ChildProcess.ChildProcess`).\nimport * as ChildProcess from 'child_process';\nimport { getAvailablePort } from \"./process-utils.js\";\nconst DEFAULT_PROPS = {\n    command: '',\n    arguments: [],\n    port: 5000,\n    autoPort: true,\n    wait: 2000,\n    onSuccess: (processProxy) => {\n        console.log(`Started ${processProxy.props.command}`);\n    }\n};\n/**\n * Manager for a Node.js child process\n * Prepares arguments, starts, stops and tracks output\n */\nexport default class ChildProcessProxy {\n    id;\n    props = { ...DEFAULT_PROPS };\n    childProcess = null;\n    port = 0;\n    successTimer; // NodeJS.Timeout;\n    // constructor(props?: {id?: string});\n    constructor({ id = 'browser-driver' } = {}) {\n        this.id = id;\n    }\n    /** Starts a child process with the provided props */\n    async start(props) {\n        props = { ...DEFAULT_PROPS, ...props };\n        this.props = props;\n        const args = [...props.arguments];\n        // If portArg is set, we can look up an available port\n        this.port = Number(props.port);\n        if (props.portArg) {\n            if (props.autoPort) {\n                this.port = await getAvailablePort(props.port);\n            }\n            args.push(props.portArg, String(this.port));\n        }\n        return await new Promise((resolve, reject) => {\n            try {\n                this._setTimeout(() => {\n                    if (props.onSuccess) {\n                        props.onSuccess(this);\n                    }\n                    resolve({});\n                });\n                console.log(`Spawning ${props.command} ${props.arguments.join(' ')}`);\n                const childProcess = ChildProcess.spawn(props.command, args, props.spawn);\n                this.childProcess = childProcess;\n                childProcess.stdout.on('data', (data) => {\n                    console.log(data.toString());\n                });\n                childProcess.stderr.on('data', (data) => {\n                    console.log(`Child process wrote to stderr: \"${data}\".`);\n                    if (!props.ignoreStderr) {\n                        this._clearTimeout();\n                        reject(new Error(data));\n                    }\n                });\n                childProcess.on('error', (error) => {\n                    console.log(`Child process errored with ${error}`);\n                    this._clearTimeout();\n                    reject(error);\n                });\n                childProcess.on('close', (code) => {\n                    console.log(`Child process exited with ${code}`);\n                    this.childProcess = null;\n                    this._clearTimeout();\n                    resolve({});\n                });\n            }\n            catch (error) {\n                reject(error);\n            }\n        });\n    }\n    /** Stops a running child process */\n    async stop() {\n        if (this.childProcess) {\n            this.childProcess.kill();\n            this.childProcess = null;\n        }\n    }\n    /** Exits this process */\n    async exit(statusCode = 0) {\n        try {\n            await this.stop();\n            // eslint-disable-next-line no-process-exit\n            process.exit(statusCode);\n        }\n        catch (error) {\n            console.error(error.message || error);\n            // eslint-disable-next-line no-process-exit\n            process.exit(1);\n        }\n    }\n    _setTimeout(callback) {\n        if (Number(this.props.wait) > 0) {\n            this.successTimer = setTimeout(callback, this.props.wait);\n        }\n    }\n    _clearTimeout() {\n        if (this.successTimer) {\n            clearTimeout(this.successTimer);\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}