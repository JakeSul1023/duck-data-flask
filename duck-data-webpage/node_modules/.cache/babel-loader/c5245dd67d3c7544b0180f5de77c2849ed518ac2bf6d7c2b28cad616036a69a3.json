{"ast":null,"code":"import { jsx as _jsx } from \"preact/jsx-runtime\";\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* global document */\nimport { WidgetImpl } from \"./widget-impl.js\";\nimport { render } from 'preact';\nimport { IconButton } from \"./components.js\";\n/**\n * A button widget that captures a screenshot of the current canvas and downloads it as a (png) file.\n * @note only captures canvas contents, not HTML DOM or CSS styles\n */\nexport class ScreenshotWidget extends WidgetImpl {\n  constructor(props = {}) {\n    super({\n      ...ScreenshotWidget.defaultProps,\n      ...props\n    });\n    this.className = 'deck-widget-screenshot';\n    this.placement = 'top-left';\n    this.placement = props.placement ?? this.placement;\n  }\n  setProps(props) {\n    this.placement = props.placement ?? this.placement;\n    super.setProps(props);\n  }\n  onRenderHTML() {\n    const element = this.element;\n    if (!element) return;\n    render(_jsx(IconButton, {\n      className: \"deck-widget-camera\",\n      label: this.props.label,\n      onClick: this.handleClick.bind(this)\n    }), element);\n  }\n  handleClick() {\n    // Allow user to override the capture logic\n    if (this.props.onCapture) {\n      this.props.onCapture(this);\n      return;\n    }\n    const dataURL = this.captureScreenToDataURL(this.props.imageFormat);\n    if (dataURL) {\n      this.downloadDataURL(dataURL, this.props.filename);\n    }\n  }\n  /** @note only captures canvas contents, not HTML DOM or CSS styles */\n  captureScreenToDataURL(imageFormat) {\n    const canvas = this.deck?.getCanvas();\n    return canvas?.toDataURL(imageFormat);\n  }\n  /** Download a data URL */\n  downloadDataURL(dataURL, filename) {\n    const link = document.createElement('a');\n    link.href = dataURL;\n    link.download = filename;\n    link.click();\n  }\n}\nScreenshotWidget.defaultProps = {\n  ...WidgetImpl.defaultProps,\n  id: 'screenshot',\n  placement: 'top-left',\n  label: 'Screenshot',\n  filename: 'screenshot.png',\n  imageFormat: 'image/png',\n  onCapture: undefined\n};\n//# sourceMappingURL=screenshot-widget.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}