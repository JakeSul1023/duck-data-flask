{"ast":null,"code":"// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nexport { luma } from \"./adapter/luma.js\";\n// ADAPTER (DEVICE AND GPU RESOURCE INTERFACES)\nexport { Adapter } from \"./adapter/adapter.js\";\nexport { Device, DeviceFeatures, DeviceLimits } from \"./adapter/device.js\";\nexport { CanvasContext } from \"./adapter/canvas-context.js\";\nexport { Resource } from \"./adapter/resources/resource.js\";\nexport { Buffer } from \"./adapter/resources/buffer.js\";\nexport { Texture } from \"./adapter/resources/texture.js\";\nexport { TextureView } from \"./adapter/resources/texture-view.js\";\nexport { ExternalTexture } from \"./adapter/resources/external-texture.js\";\nexport { Shader } from \"./adapter/resources/shader.js\";\nexport { Sampler } from \"./adapter/resources/sampler.js\";\nexport { Framebuffer } from \"./adapter/resources/framebuffer.js\";\nexport { RenderPipeline } from \"./adapter/resources/render-pipeline.js\";\nexport { RenderPass } from \"./adapter/resources/render-pass.js\";\nexport { ComputePipeline } from \"./adapter/resources/compute-pipeline.js\";\nexport { ComputePass } from \"./adapter/resources/compute-pass.js\";\nexport { CommandEncoder } from \"./adapter/resources/command-encoder.js\";\nexport { CommandBuffer } from \"./adapter/resources/command-buffer.js\";\nexport { VertexArray } from \"./adapter/resources/vertex-array.js\";\nexport { TransformFeedback } from \"./adapter/resources/transform-feedback.js\";\nexport { QuerySet } from \"./adapter/resources/query-set.js\";\nexport { PipelineLayout } from \"./adapter/resources/pipeline-layout.js\";\n// PORTABLE API - UNIFORM BUFFERS\nexport { UniformBufferLayout } from \"./portable/uniform-buffer-layout.js\";\nexport { UniformBlock } from \"./portable/uniform-block.js\";\nexport { UniformStore } from \"./portable/uniform-store.js\";\n// GPU TYPE UTILS - GPU MEMORY LAYOUT HELPERS - CAN BE USED BY APPS BUT MOSTLY USED INTERNALLY\nexport { decodeVertexFormat } from \"./gpu-type-utils/decode-vertex-format.js\";\nexport { decodeShaderUniformType } from \"./gpu-type-utils/decode-shader-types.js\";\nexport { decodeShaderAttributeType } from \"./gpu-type-utils/decode-attribute-type.js\";\nexport { getDataTypeFromTypedArray } from \"./gpu-type-utils/vertex-format-from-attribute.js\";\nexport { getTypedArrayFromDataType } from \"./gpu-type-utils/vertex-format-from-attribute.js\";\nexport { getVertexFormatFromAttribute } from \"./gpu-type-utils/vertex-format-from-attribute.js\";\nexport { decodeTextureFormat } from \"./gpu-type-utils/decode-texture-format.js\";\nexport { getTextureFormatCapabilities } from \"./gpu-type-utils/texture-format-capabilities.js\";\n// INTERNAL UTILS - for use in other luma.gl modules only\nexport { log } from \"./utils/log.js\";\nexport { getScratchArray } from \"./utils/array-utils-flat.js\";\nexport { BufferLayoutHelper as _BufferLayoutHelper } from \"./adapter-utils/buffer-layout-helper.js\";\nexport { getAttributeInfosFromLayouts } from \"./adapter-utils/get-attribute-from-layouts.js\";\n// TEST EXPORTS\nexport { getTextureFormatDefinition as _getTextureFormatDefinition, getTextureFormatTable as _getTextureFormatTable } from \"./gpu-type-utils/texture-format-table.js\";","map":{"version":3,"names":["luma","Adapter","Device","DeviceFeatures","DeviceLimits","CanvasContext","Resource","Buffer","Texture","TextureView","ExternalTexture","Shader","Sampler","Framebuffer","RenderPipeline","RenderPass","ComputePipeline","ComputePass","CommandEncoder","CommandBuffer","VertexArray","TransformFeedback","QuerySet","PipelineLayout","UniformBufferLayout","UniformBlock","UniformStore","decodeVertexFormat","decodeShaderUniformType","decodeShaderAttributeType","getDataTypeFromTypedArray","getTypedArrayFromDataType","getVertexFormatFromAttribute","decodeTextureFormat","getTextureFormatCapabilities","log","getScratchArray","BufferLayoutHelper","_BufferLayoutHelper","getAttributeInfosFromLayouts","getTextureFormatDefinition","_getTextureFormatDefinition","getTextureFormatTable","_getTextureFormatTable"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@luma.gl\\core\\src\\index.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// MAIN API ACCESS POINT\nexport type {AttachDeviceProps, CreateDeviceProps} from './adapter/luma';\nexport {luma} from './adapter/luma';\n\n// ADAPTER (DEVICE AND GPU RESOURCE INTERFACES)\nexport {Adapter} from './adapter/adapter';\n\nexport type {\n  DeviceProps,\n  DeviceInfo,\n  DeviceFeature,\n  DeviceTextureFormatCapabilities\n} from './adapter/device';\nexport {Device, DeviceFeatures, DeviceLimits} from './adapter/device';\n\nexport type {CanvasContextProps} from './adapter/canvas-context';\nexport {CanvasContext} from './adapter/canvas-context';\n\n// GPU RESOURCES\nexport type {ResourceProps} from './adapter/resources/resource';\nexport {Resource} from './adapter/resources/resource';\n\nexport type {BufferProps} from './adapter/resources/buffer';\nexport {Buffer} from './adapter/resources/buffer';\n\nexport type {TextureProps} from './adapter/resources/texture';\nexport {Texture} from './adapter/resources/texture';\n\nexport type {TextureViewProps} from './adapter/resources/texture-view';\nexport {TextureView} from './adapter/resources/texture-view';\n\nexport type {ExternalTextureProps} from './adapter/resources/external-texture';\nexport {ExternalTexture} from './adapter/resources/external-texture';\n\nexport type {ShaderProps} from './adapter/resources/shader';\nexport {Shader} from './adapter/resources/shader';\n\nexport type {SamplerProps, SamplerParameters} from './adapter/resources/sampler';\nexport {Sampler} from './adapter/resources/sampler';\n\nexport type {FramebufferProps} from './adapter/resources/framebuffer';\nexport {Framebuffer} from './adapter/resources/framebuffer';\n\nexport type {RenderPipelineProps} from './adapter/resources/render-pipeline';\nexport {RenderPipeline} from './adapter/resources/render-pipeline';\n\nexport type {RenderPassProps} from './adapter/resources/render-pass';\nexport {RenderPass} from './adapter/resources/render-pass';\n\nexport type {ComputePipelineProps} from './adapter/resources/compute-pipeline';\nexport {ComputePipeline} from './adapter/resources/compute-pipeline';\n\nexport type {ComputePassProps} from './adapter/resources/compute-pass';\nexport {ComputePass} from './adapter/resources/compute-pass';\n\nexport type {CommandEncoderProps} from './adapter/resources/command-encoder';\nexport {CommandEncoder} from './adapter/resources/command-encoder';\n\nexport type {CommandBufferProps} from './adapter/resources/command-buffer';\nexport {CommandBuffer} from './adapter/resources/command-buffer';\n\nexport type {VertexArrayProps} from './adapter/resources/vertex-array';\nexport {VertexArray} from './adapter/resources/vertex-array';\n\nexport type {TransformFeedbackProps, BufferRange} from './adapter/resources/transform-feedback';\nexport {TransformFeedback} from './adapter/resources/transform-feedback';\n\nexport type {QuerySetProps} from './adapter/resources/query-set';\nexport {QuerySet} from './adapter/resources/query-set';\n\nexport type {PipelineLayoutProps} from './adapter/resources/pipeline-layout';\nexport {PipelineLayout} from './adapter/resources/pipeline-layout';\n\n// PORTABLE API - UNIFORM BUFFERS\nexport {UniformBufferLayout} from './portable/uniform-buffer-layout';\nexport {UniformBlock} from './portable/uniform-block';\nexport {UniformStore} from './portable/uniform-store';\n// TEXTURE TYPES\n\n// API TYPES\nexport type {CompilerMessage} from './adapter/types/compiler-message';\n\nexport type {\n  TextureCompressionFormat,\n  TextureCubeFace,\n  TextureLevelData,\n  ExternalImage,\n  TextureData,\n  Texture1DData,\n  Texture2DData,\n  Texture3DData,\n  TextureCubeData,\n  TextureArrayData,\n  TextureCubeArrayData,\n  CopyExternalImageOptions\n} from './adapter/resources/texture';\n\nexport type {Parameters, PrimitiveTopology, IndexFormat} from './adapter/types/parameters';\n\nexport type {\n  CullMode,\n  FrontFace,\n  RasterizationParameters,\n  CompareFunction,\n  StencilOperation,\n  DepthStencilParameters,\n  BlendFactor,\n  BlendOperation,\n  ColorParameters,\n  MultisampleParameters,\n  RenderPassParameters,\n  RenderPipelineParameters,\n  PolygonMode,\n  ProvokingVertex\n} from './adapter/types/parameters';\n\nexport type {ColorAttachment, DepthStencilAttachment} from './adapter/types/attachments';\n\nexport type {\n  ShaderLayout,\n  ComputeShaderLayout,\n  AttributeDeclaration,\n  BindingDeclaration,\n  Binding,\n  UniformBufferBindingLayout,\n  StorageBufferBindingLayout,\n  TextureBindingLayout,\n  SamplerBindingLayout,\n  StorageTextureBindingLayout\n} from './adapter/types/shader-layout';\nexport type {BufferLayout, BufferAttributeLayout} from './adapter/types/buffer-layout';\nexport type {\n  // Deprecated, todo\n  AttributeBinding,\n  UniformBinding,\n  UniformBlockBinding,\n  VaryingBinding\n} from './adapter/types/shader-layout';\n\nexport type {UniformValue} from './adapter/types/uniforms';\n\n// GPU TYPE UTILS - GPU MEMORY LAYOUT TYPES - EXTERNAL\n\nexport type {NumberArray, TypedArray, TypedArrayConstructor} from './types';\nexport type {VertexFormat, VertexType} from './gpu-type-utils/vertex-formats';\nexport type {\n  ShaderDataType,\n  ShaderAttributeType,\n  ShaderUniformType\n} from './gpu-type-utils/shader-types';\nexport type {\n  TextureFormat,\n  ColorTextureFormat,\n  DepthStencilTextureFormat\n} from './gpu-type-utils/texture-formats';\nexport type {TextureFormatInfo} from './gpu-type-utils/texture-format-info';\nexport type {TextureFormatCapabilities} from './gpu-type-utils/texture-format-capabilities';\n\n// GPU TYPE UTILS - GPU MEMORY LAYOUT HELPERS - CAN BE USED BY APPS BUT MOSTLY USED INTERNALLY\n\nexport {decodeVertexFormat} from './gpu-type-utils/decode-vertex-format';\nexport {decodeShaderUniformType} from './gpu-type-utils/decode-shader-types';\nexport {decodeShaderAttributeType} from './gpu-type-utils/decode-attribute-type';\nexport {getDataTypeFromTypedArray} from './gpu-type-utils/vertex-format-from-attribute';\nexport {getTypedArrayFromDataType} from './gpu-type-utils/vertex-format-from-attribute';\nexport {getVertexFormatFromAttribute} from './gpu-type-utils/vertex-format-from-attribute';\n\nexport {decodeTextureFormat} from './gpu-type-utils/decode-texture-format';\nexport {getTextureFormatCapabilities} from './gpu-type-utils/texture-format-capabilities';\n\n// GENERAL EXPORTS - FOR APPLICATIONS\n\nexport type {StatsManager} from './utils/stats-manager'; // TODO - should this be moved to probe.gl?\n\n// ADAPTER UTILS - for implementing Device adapters (@luma.gl/webgl and @luma.gl/webgpu)\n\nexport type {\n  CopyBufferToBufferOptions,\n  CopyBufferToTextureOptions,\n  CopyTextureToBufferOptions,\n  CopyTextureToTextureOptions\n} from './adapter/resources/command-encoder';\n\n// INTERNAL UTILS - for use in other luma.gl modules only\nexport {log} from './utils/log';\nexport {getScratchArray} from './utils/array-utils-flat';\nexport type {AttributeInfo} from './adapter-utils/get-attribute-from-layouts';\nexport {BufferLayoutHelper as _BufferLayoutHelper} from './adapter-utils/buffer-layout-helper';\nexport {getAttributeInfosFromLayouts} from './adapter-utils/get-attribute-from-layouts';\n\n// TEST EXPORTS\nexport {\n  getTextureFormatDefinition as _getTextureFormatDefinition,\n  getTextureFormatTable as _getTextureFormatTable\n} from './gpu-type-utils/texture-format-table';\n"],"mappings":"AAAA;AACA;AACA;AAIA,SAAQA,IAAI,QAAC;AAEb;AACA,SAAQC,OAAO,QAAC;AAQhB,SAAQC,MAAM,EAAEC,cAAc,EAAEC,YAAY,QAAC;AAG7C,SAAQC,aAAa,QAAC;AAItB,SAAQC,QAAQ,QAAC;AAGjB,SAAQC,MAAM,QAAC;AAGf,SAAQC,OAAO,QAAC;AAGhB,SAAQC,WAAW,QAAC;AAGpB,SAAQC,eAAe,QAAC;AAGxB,SAAQC,MAAM,QAAC;AAGf,SAAQC,OAAO,QAAC;AAGhB,SAAQC,WAAW,QAAC;AAGpB,SAAQC,cAAc,QAAC;AAGvB,SAAQC,UAAU,QAAC;AAGnB,SAAQC,eAAe,QAAC;AAGxB,SAAQC,WAAW,QAAC;AAGpB,SAAQC,cAAc,QAAC;AAGvB,SAAQC,aAAa,QAAC;AAGtB,SAAQC,WAAW,QAAC;AAGpB,SAAQC,iBAAiB,QAAC;AAG1B,SAAQC,QAAQ,QAAC;AAGjB,SAAQC,cAAc,QAAC;AAEvB;AACA,SAAQC,mBAAmB,QAAC;AAC5B,SAAQC,YAAY,QAAC;AACrB,SAAQC,YAAY,QAAC;AAkFrB;AAEA,SAAQC,kBAAkB,QAAC;AAC3B,SAAQC,uBAAuB,QAAC;AAChC,SAAQC,yBAAyB,QAAC;AAClC,SAAQC,yBAAyB,QAAC;AAClC,SAAQC,yBAAyB,QAAC;AAClC,SAAQC,4BAA4B,QAAC;AAErC,SAAQC,mBAAmB,QAAC;AAC5B,SAAQC,4BAA4B,QAAC;AAerC;AACA,SAAQC,GAAG,QAAC;AACZ,SAAQC,eAAe,QAAC;AAExB,SAAQC,kBAAkB,IAAIC,mBAAmB,QAAC;AAClD,SAAQC,4BAA4B,QAAC;AAErC;AACA,SACEC,0BAA0B,IAAIC,2BAA2B,EACzDC,qBAAqB,IAAIC,sBAAsB,QAChD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}