{"ast":null,"code":"import { assert } from '@loaders.gl/loader-utils';\nimport { getBinaryImageMetadata } from \"../category-api/binary-image-api.js\";\n// Use polyfills if installed to parsed image using get-pixels\nexport async function parseToNodeImage(arrayBuffer, options) {\n  const {\n    mimeType\n  } = getBinaryImageMetadata(arrayBuffer) || {};\n  // @ts-ignore\n  const parseImageNode = globalThis.loaders?.parseImageNode;\n  assert(parseImageNode); // '@loaders.gl/polyfills not installed'\n  // @ts-expect-error TODO should we throw error in this case?\n  return await parseImageNode(arrayBuffer, mimeType);\n}","map":{"version":3,"names":["assert","getBinaryImageMetadata","parseToNodeImage","arrayBuffer","options","mimeType","parseImageNode","globalThis","loaders"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/images/dist/lib/parsers/parse-to-node-image.js"],"sourcesContent":["import { assert } from '@loaders.gl/loader-utils';\nimport { getBinaryImageMetadata } from \"../category-api/binary-image-api.js\";\n// Use polyfills if installed to parsed image using get-pixels\nexport async function parseToNodeImage(arrayBuffer, options) {\n    const { mimeType } = getBinaryImageMetadata(arrayBuffer) || {};\n    // @ts-ignore\n    const parseImageNode = globalThis.loaders?.parseImageNode;\n    assert(parseImageNode); // '@loaders.gl/polyfills not installed'\n    // @ts-expect-error TODO should we throw error in this case?\n    return await parseImageNode(arrayBuffer, mimeType);\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,0BAA0B;AACjD,SAASC,sBAAsB,QAAQ,qCAAqC;AAC5E;AACA,OAAO,eAAeC,gBAAgBA,CAACC,WAAW,EAAEC,OAAO,EAAE;EACzD,MAAM;IAAEC;EAAS,CAAC,GAAGJ,sBAAsB,CAACE,WAAW,CAAC,IAAI,CAAC,CAAC;EAC9D;EACA,MAAMG,cAAc,GAAGC,UAAU,CAACC,OAAO,EAAEF,cAAc;EACzDN,MAAM,CAACM,cAAc,CAAC,CAAC,CAAC;EACxB;EACA,OAAO,MAAMA,cAAc,CAACH,WAAW,EAAEE,QAAQ,CAAC;AACtD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}