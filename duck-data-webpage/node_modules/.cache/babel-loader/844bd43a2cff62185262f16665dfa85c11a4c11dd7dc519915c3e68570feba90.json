{"ast":null,"code":"import { getCoords } from '@turf/invariant';\n\n/**\n * Takes a ring and return true or false whether or not the ring is clockwise or counter-clockwise.\n *\n * @name booleanClockwise\n * @param {Feature<LineString>} line to be evaluated\n * @returns {boolean} true/false\n * @example\n * var clockwiseRing = turf.lineString([[0,0],[1,1],[1,0],[0,0]]);\n * var counterClockwiseRing = turf.lineString([[0,0],[1,0],[1,1],[0,0]]);\n *\n * turf.booleanClockwise(clockwiseRing)\n * //=true\n * turf.booleanClockwise(counterClockwiseRing)\n * //=false\n */\nfunction booleanClockwise(line) {\n  // validation\n  if (!line) throw new Error('line is required');\n  var type = line.geometry ? line.geometry.type : line.type;\n  if (!Array.isArray(line) && type !== 'LineString') throw new Error('geometry must be a LineString');\n  var ring = getCoords(line);\n  var sum = 0;\n  var i = 1;\n  var prev, cur;\n  while (i < ring.length) {\n    prev = cur || ring[0];\n    cur = ring[i];\n    sum += (cur[0] - prev[0]) * (cur[1] + prev[1]);\n    i++;\n  }\n  return sum > 0;\n}\nexport default booleanClockwise;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}