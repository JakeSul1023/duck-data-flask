{"ast":null,"code":"// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst fs = /* glsl */`\\\nfloat random(vec3 scale, float seed) {\n  /* use the fragment position for a different seed per-pixel */\n  return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\n}\n`;\n/** Quick random generator for fragment shaders */\nexport const random = {\n  name: 'random',\n  fs\n};","map":{"version":3,"names":["fs","random","name"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@luma.gl\\shadertools\\src\\modules\\math\\random\\random.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {ShaderModule} from '../../../lib/shader-module/shader-module';\n\nconst fs = /* glsl */ `\\\nfloat random(vec3 scale, float seed) {\n  /* use the fragment position for a different seed per-pixel */\n  return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\n}\n`;\n\n/** Quick random generator for fragment shaders */\nexport const random = {\n  name: 'random',\n  fs\n} as const satisfies ShaderModule<{}, {}>;\n"],"mappings":"AAAA;AACA;AACA;AAIA,MAAMA,EAAE,GAAG,UAAW;;;;;CAKrB;AAED;AACA,OAAO,MAAMC,MAAM,GAAG;EACpBC,IAAI,EAAE,QAAQ;EACdF;CACuC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}