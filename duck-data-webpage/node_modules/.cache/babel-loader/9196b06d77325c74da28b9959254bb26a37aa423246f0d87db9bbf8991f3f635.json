{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst buffLength = 1024;\n/**\n * looking for the last occurrence of the provided\n * @param file\n * @param target\n * @returns\n */\nexport const searchFromTheEnd = async (file, target) => {\n  const searchWindow = [await file.getUint8(file.length - 1n), await file.getUint8(file.length - 2n), await file.getUint8(file.length - 3n), undefined];\n  let targetOffset = -1;\n  // looking for the last record in the central directory\n  let point = file.length - 4n;\n  do {\n    const prevPoint = point;\n    point -= BigInt(buffLength);\n    point = point >= 0n ? point : 0n;\n    const buff = new Uint8Array(await file.slice(point, prevPoint));\n    for (let i = buff.length - 1; i > -1; i--) {\n      searchWindow[3] = searchWindow[2];\n      searchWindow[2] = searchWindow[1];\n      searchWindow[1] = searchWindow[0];\n      searchWindow[0] = buff[i];\n      if (searchWindow.every((val, index) => val === target[index])) {\n        targetOffset = i;\n        break;\n      }\n    }\n  } while (targetOffset === -1 && point > 0n);\n  return point + BigInt(targetOffset);\n};","map":{"version":3,"names":["buffLength","searchFromTheEnd","file","target","searchWindow","getUint8","length","undefined","targetOffset","point","prevPoint","BigInt","buff","Uint8Array","slice","i","every","val","index"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/zip/dist/parse-zip/search-from-the-end.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst buffLength = 1024;\n/**\n * looking for the last occurrence of the provided\n * @param file\n * @param target\n * @returns\n */\nexport const searchFromTheEnd = async (file, target) => {\n    const searchWindow = [\n        await file.getUint8(file.length - 1n),\n        await file.getUint8(file.length - 2n),\n        await file.getUint8(file.length - 3n),\n        undefined\n    ];\n    let targetOffset = -1;\n    // looking for the last record in the central directory\n    let point = file.length - 4n;\n    do {\n        const prevPoint = point;\n        point -= BigInt(buffLength);\n        point = point >= 0n ? point : 0n;\n        const buff = new Uint8Array(await file.slice(point, prevPoint));\n        for (let i = buff.length - 1; i > -1; i--) {\n            searchWindow[3] = searchWindow[2];\n            searchWindow[2] = searchWindow[1];\n            searchWindow[1] = searchWindow[0];\n            searchWindow[0] = buff[i];\n            if (searchWindow.every((val, index) => val === target[index])) {\n                targetOffset = i;\n                break;\n            }\n        }\n    } while (targetOffset === -1 && point > 0n);\n    return point + BigInt(targetOffset);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,MAAMA,UAAU,GAAG,IAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAOC,IAAI,EAAEC,MAAM,KAAK;EACpD,MAAMC,YAAY,GAAG,CACjB,MAAMF,IAAI,CAACG,QAAQ,CAACH,IAAI,CAACI,MAAM,GAAG,EAAE,CAAC,EACrC,MAAMJ,IAAI,CAACG,QAAQ,CAACH,IAAI,CAACI,MAAM,GAAG,EAAE,CAAC,EACrC,MAAMJ,IAAI,CAACG,QAAQ,CAACH,IAAI,CAACI,MAAM,GAAG,EAAE,CAAC,EACrCC,SAAS,CACZ;EACD,IAAIC,YAAY,GAAG,CAAC,CAAC;EACrB;EACA,IAAIC,KAAK,GAAGP,IAAI,CAACI,MAAM,GAAG,EAAE;EAC5B,GAAG;IACC,MAAMI,SAAS,GAAGD,KAAK;IACvBA,KAAK,IAAIE,MAAM,CAACX,UAAU,CAAC;IAC3BS,KAAK,GAAGA,KAAK,IAAI,EAAE,GAAGA,KAAK,GAAG,EAAE;IAChC,MAAMG,IAAI,GAAG,IAAIC,UAAU,CAAC,MAAMX,IAAI,CAACY,KAAK,CAACL,KAAK,EAAEC,SAAS,CAAC,CAAC;IAC/D,KAAK,IAAIK,CAAC,GAAGH,IAAI,CAACN,MAAM,GAAG,CAAC,EAAES,CAAC,GAAG,CAAC,CAAC,EAAEA,CAAC,EAAE,EAAE;MACvCX,YAAY,CAAC,CAAC,CAAC,GAAGA,YAAY,CAAC,CAAC,CAAC;MACjCA,YAAY,CAAC,CAAC,CAAC,GAAGA,YAAY,CAAC,CAAC,CAAC;MACjCA,YAAY,CAAC,CAAC,CAAC,GAAGA,YAAY,CAAC,CAAC,CAAC;MACjCA,YAAY,CAAC,CAAC,CAAC,GAAGQ,IAAI,CAACG,CAAC,CAAC;MACzB,IAAIX,YAAY,CAACY,KAAK,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,KAAKd,MAAM,CAACe,KAAK,CAAC,CAAC,EAAE;QAC3DV,YAAY,GAAGO,CAAC;QAChB;MACJ;IACJ;EACJ,CAAC,QAAQP,YAAY,KAAK,CAAC,CAAC,IAAIC,KAAK,GAAG,EAAE;EAC1C,OAAOA,KAAK,GAAGE,MAAM,CAACH,YAAY,CAAC;AACvC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}