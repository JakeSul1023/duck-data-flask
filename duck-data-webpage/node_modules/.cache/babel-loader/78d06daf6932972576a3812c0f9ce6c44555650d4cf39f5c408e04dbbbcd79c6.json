{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof \"4.3.2\" !== 'undefined' ? \"4.3.2\" : 'latest';\nexport { Hash } from \"./lib/hash.js\";\nexport { CRC32Hash } from \"./lib/crc32-hash.js\";\nexport { CRC32CHash } from \"./lib/crc32c-hash.js\";\nexport { MD5Hash } from \"./lib/md5-hash.js\";\nexport { SHA256Hash } from \"./lib/sha256-hash.js\";\nexport { CryptoHash } from \"./lib/crypto-hash.js\";\nexport { NodeHash } from \"./lib/node-hash.js\";\n/**\n * Small, fast worker for CRC32, CRC32c and MD5 Hashes\n */\nexport const CryptoWorker = {\n  id: 'crypto',\n  name: 'CRC32, CRC32c and MD5 Hashes',\n  module: 'crypto',\n  version: VERSION,\n  options: {\n    crypto: {}\n  }\n};\n/**\n * Large worker for full complement of Cryptographic Hashes\n * bundles the full crypto.js library\n */\nexport const CryptoJSWorker = {\n  id: 'cryptojs',\n  name: 'Cryptographic Hashes',\n  module: 'crypto',\n  version: VERSION,\n  options: {\n    cryptojs: {}\n  }\n};\n// EXPERIMENTAL\nexport { encodeNumber, encodeHex, encodeBase64 } from \"./lib/utils/digest-utils.js\";\nexport { asciiToBase64, base64ToAscii } from \"./lib/utils/base64-utils.js\";","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}