{"ast":null,"code":"import { extractGeometryInfo } from \"./extract-geometry-info.js\";\nimport { geojsonToFlatGeojson } from \"./geojson-to-flat-geojson.js\";\nimport { flatGeojsonToBinary } from \"./flat-geojson-to-binary.js\";\n/**\n * Convert GeoJSON features to flat binary arrays\n *\n * @param features\n * @param options\n * @returns features in binary format, grouped by geometry type\n */\nexport function geojsonToBinary(features, options = {\n  fixRingWinding: true,\n  triangulate: true\n}) {\n  const geometryInfo = extractGeometryInfo(features);\n  const coordLength = geometryInfo.coordLength;\n  const {\n    fixRingWinding\n  } = options;\n  const flatFeatures = geojsonToFlatGeojson(features, {\n    coordLength,\n    fixRingWinding\n  });\n  return flatGeojsonToBinary(flatFeatures, geometryInfo, {\n    numericPropKeys: options.numericPropKeys,\n    PositionDataType: options.PositionDataType || Float32Array,\n    triangulate: options.triangulate\n  });\n}","map":{"version":3,"names":["extractGeometryInfo","geojsonToFlatGeojson","flatGeojsonToBinary","geojsonToBinary","features","options","fixRingWinding","triangulate","geometryInfo","coordLength","flatFeatures","numericPropKeys","PositionDataType","Float32Array"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/gis/dist/lib/binary-features/geojson-to-binary.js"],"sourcesContent":["import { extractGeometryInfo } from \"./extract-geometry-info.js\";\nimport { geojsonToFlatGeojson } from \"./geojson-to-flat-geojson.js\";\nimport { flatGeojsonToBinary } from \"./flat-geojson-to-binary.js\";\n/**\n * Convert GeoJSON features to flat binary arrays\n *\n * @param features\n * @param options\n * @returns features in binary format, grouped by geometry type\n */\nexport function geojsonToBinary(features, options = { fixRingWinding: true, triangulate: true }) {\n    const geometryInfo = extractGeometryInfo(features);\n    const coordLength = geometryInfo.coordLength;\n    const { fixRingWinding } = options;\n    const flatFeatures = geojsonToFlatGeojson(features, { coordLength, fixRingWinding });\n    return flatGeojsonToBinary(flatFeatures, geometryInfo, {\n        numericPropKeys: options.numericPropKeys,\n        PositionDataType: options.PositionDataType || Float32Array,\n        triangulate: options.triangulate\n    });\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,4BAA4B;AAChE,SAASC,oBAAoB,QAAQ,8BAA8B;AACnE,SAASC,mBAAmB,QAAQ,6BAA6B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAACC,QAAQ,EAAEC,OAAO,GAAG;EAAEC,cAAc,EAAE,IAAI;EAAEC,WAAW,EAAE;AAAK,CAAC,EAAE;EAC7F,MAAMC,YAAY,GAAGR,mBAAmB,CAACI,QAAQ,CAAC;EAClD,MAAMK,WAAW,GAAGD,YAAY,CAACC,WAAW;EAC5C,MAAM;IAAEH;EAAe,CAAC,GAAGD,OAAO;EAClC,MAAMK,YAAY,GAAGT,oBAAoB,CAACG,QAAQ,EAAE;IAAEK,WAAW;IAAEH;EAAe,CAAC,CAAC;EACpF,OAAOJ,mBAAmB,CAACQ,YAAY,EAAEF,YAAY,EAAE;IACnDG,eAAe,EAAEN,OAAO,CAACM,eAAe;IACxCC,gBAAgB,EAAEP,OAAO,CAACO,gBAAgB,IAAIC,YAAY;IAC1DN,WAAW,EAAEF,OAAO,CAACE;EACzB,CAAC,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}