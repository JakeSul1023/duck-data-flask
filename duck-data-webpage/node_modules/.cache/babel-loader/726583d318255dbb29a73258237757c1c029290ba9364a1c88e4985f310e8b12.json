{"ast":null,"code":"// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { config } from \"./common.js\";\nexport function validateVector(v, length) {\n  if (v.length !== length) {\n    return false;\n  }\n  // Could be arguments \"array\" (v.every not availasble)\n  for (let i = 0; i < v.length; ++i) {\n    if (!Number.isFinite(v[i])) {\n      return false;\n    }\n  }\n  return true;\n}\nexport function checkNumber(value) {\n  if (!Number.isFinite(value)) {\n    throw new Error(`Invalid number ${JSON.stringify(value)}`);\n  }\n  return value;\n}\nexport function checkVector(v, length, callerName = '') {\n  if (config.debug && !validateVector(v, length)) {\n    throw new Error(`math.gl: ${callerName} some fields set to invalid numbers'`);\n  }\n  return v;\n}\nconst map = {};\nexport function deprecated(method, version) {\n  if (!map[method]) {\n    map[method] = true;\n    // eslint-disable-next-line\n    console.warn(`${method} has been removed in version ${version}, see upgrade guide for more information`);\n  }\n}","map":{"version":3,"names":["config","validateVector","v","length","i","Number","isFinite","checkNumber","value","Error","JSON","stringify","checkVector","callerName","debug","map","deprecated","method","version","console","warn"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@math.gl\\core\\src\\lib\\validators.ts"],"sourcesContent":["// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {NumericArray} from '@math.gl/types';\nimport {config} from './common';\n\nexport function validateVector(v: NumericArray, length: number): boolean {\n  if (v.length !== length) {\n    return false;\n  }\n  // Could be arguments \"array\" (v.every not availasble)\n  for (let i = 0; i < v.length; ++i) {\n    if (!Number.isFinite(v[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function checkNumber(value: unknown): number {\n  if (!Number.isFinite(value)) {\n    throw new Error(`Invalid number ${JSON.stringify(value)}`);\n  }\n  return value as number;\n}\n\nexport function checkVector<T extends NumericArray>(\n  v: T,\n  length: number,\n  callerName: string = ''\n): T {\n  if (config.debug && !validateVector(v, length)) {\n    throw new Error(`math.gl: ${callerName} some fields set to invalid numbers'`);\n  }\n  return v;\n}\n\nconst map: Record<string, boolean> = {};\n\nexport function deprecated(method: string, version: string): void {\n  if (!map[method]) {\n    map[method] = true;\n    // eslint-disable-next-line\n    console.warn(\n      `${method} has been removed in version ${version}, see upgrade guide for more information`\n    );\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AAGA,SAAQA,MAAM,QAAC;AAEf,OAAM,SAAUC,cAAcA,CAACC,CAAe,EAAEC,MAAc;EAC5D,IAAID,CAAC,CAACC,MAAM,KAAKA,MAAM,EAAE;IACvB,OAAO,KAAK;EACd;EACA;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,CAAC,CAACC,MAAM,EAAE,EAAEC,CAAC,EAAE;IACjC,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACJ,CAAC,CAACE,CAAC,CAAC,CAAC,EAAE;MAC1B,OAAO,KAAK;IACd;EACF;EACA,OAAO,IAAI;AACb;AAEA,OAAM,SAAUG,WAAWA,CAACC,KAAc;EACxC,IAAI,CAACH,MAAM,CAACC,QAAQ,CAACE,KAAK,CAAC,EAAE;IAC3B,MAAM,IAAIC,KAAK,CAAC,kBAAkBC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,EAAE,CAAC;EAC5D;EACA,OAAOA,KAAe;AACxB;AAEA,OAAM,SAAUI,WAAWA,CACzBV,CAAI,EACJC,MAAc,EACdU,UAAA,GAAqB,EAAE;EAEvB,IAAIb,MAAM,CAACc,KAAK,IAAI,CAACb,cAAc,CAACC,CAAC,EAAEC,MAAM,CAAC,EAAE;IAC9C,MAAM,IAAIM,KAAK,CAAC,YAAYI,UAAU,sCAAsC,CAAC;EAC/E;EACA,OAAOX,CAAC;AACV;AAEA,MAAMa,GAAG,GAA4B,EAAE;AAEvC,OAAM,SAAUC,UAAUA,CAACC,MAAc,EAAEC,OAAe;EACxD,IAAI,CAACH,GAAG,CAACE,MAAM,CAAC,EAAE;IAChBF,GAAG,CAACE,MAAM,CAAC,GAAG,IAAI;IAClB;IACAE,OAAO,CAACC,IAAI,CACV,GAAGH,MAAM,gCAAgCC,OAAO,0CAA0C,CAC3F;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}