{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst uniformBlockWGSL = /* wgsl */`\\\nstruct LineUniforms {\n  widthScale: f32,\n  widthMinPixels: f32,\n  widthMaxPixels: f32,\n  useShortestPath: f32,\n  widthUnits: i32,\n};\n\n@group(0) @binding(1)\nvar<uniform> line: LineUniforms;\n`;\nconst uniformBlockGLSL = /* glsl */`\\\nuniform lineUniforms {\n  float widthScale;\n  float widthMinPixels;\n  float widthMaxPixels;\n  float useShortestPath;\n  highp int widthUnits;\n} line;\n`;\nexport const lineUniforms = {\n  name: 'line',\n  source: uniformBlockWGSL,\n  vs: uniformBlockGLSL,\n  fs: uniformBlockGLSL,\n  uniformTypes: {\n    widthScale: 'f32',\n    widthMinPixels: 'f32',\n    widthMaxPixels: 'f32',\n    useShortestPath: 'f32',\n    widthUnits: 'i32'\n  }\n};","map":{"version":3,"names":["uniformBlockWGSL","uniformBlockGLSL","lineUniforms","name","source","vs","fs","uniformTypes","widthScale","widthMinPixels","widthMaxPixels","useShortestPath","widthUnits"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\layers\\src\\line-layer\\line-layer-uniforms.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {ShaderModule} from '@luma.gl/shadertools';\n\nconst uniformBlockWGSL = /* wgsl */ `\\\nstruct LineUniforms {\n  widthScale: f32,\n  widthMinPixels: f32,\n  widthMaxPixels: f32,\n  useShortestPath: f32,\n  widthUnits: i32,\n};\n\n@group(0) @binding(1)\nvar<uniform> line: LineUniforms;\n`;\n\nconst uniformBlockGLSL = /* glsl */ `\\\nuniform lineUniforms {\n  float widthScale;\n  float widthMinPixels;\n  float widthMaxPixels;\n  float useShortestPath;\n  highp int widthUnits;\n} line;\n`;\n\nexport type LineProps = {\n  widthScale: number;\n  widthMinPixels: number;\n  widthMaxPixels: number;\n  useShortestPath: number;\n  widthUnits: number;\n};\n\nexport const lineUniforms = {\n  name: 'line',\n  source: uniformBlockWGSL,\n  vs: uniformBlockGLSL,\n  fs: uniformBlockGLSL,\n  uniformTypes: {\n    widthScale: 'f32',\n    widthMinPixels: 'f32',\n    widthMaxPixels: 'f32',\n    useShortestPath: 'f32',\n    widthUnits: 'i32'\n  }\n} as const satisfies ShaderModule<LineProps>;\n"],"mappings":"AAAA;AACA;AACA;AAIA,MAAMA,gBAAgB,GAAG,UAAW;;;;;;;;;;;CAWnC;AAED,MAAMC,gBAAgB,GAAG,UAAW;;;;;;;;CAQnC;AAUD,OAAO,MAAMC,YAAY,GAAG;EAC1BC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAEJ,gBAAgB;EACxBK,EAAE,EAAEJ,gBAAgB;EACpBK,EAAE,EAAEL,gBAAgB;EACpBM,YAAY,EAAE;IACZC,UAAU,EAAE,KAAK;IACjBC,cAAc,EAAE,KAAK;IACrBC,cAAc,EAAE,KAAK;IACrBC,eAAe,EAAE,KAAK;IACtBC,UAAU,EAAE;;CAE4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}