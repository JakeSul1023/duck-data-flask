{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { getS2Cell } from \"../s2geometry/s2-cell-utils.js\";\nimport { getS2Region } from \"./s2-to-region.js\";\nimport { Vector3 } from '@math.gl/core';\n/**\n * Converts S2HeightInfo to corner points of an oriented bounding box\n * Can be used to constuct an OrientedBoundingBox instance\n * @param tokenOrKey {string} A string that is the cell's hex token or the Hilbert quad key (containing /)\n * @param heightInfo {S2HeightInfo} min and max height of the box\n * @returns corner points of the oriented bounding box\n */\nexport function getS2OrientedBoundingBoxCornerPoints(tokenOrKey,\n// This can be an S2 key or token\nheightInfo) {\n  const min = heightInfo?.minimumHeight || 0;\n  const max = heightInfo?.maximumHeight || 0;\n  const s2cell = getS2Cell(tokenOrKey);\n  const region = getS2Region(s2cell);\n  // region lng/lat are in degrees\n  const W = region.west;\n  const S = region.south;\n  const E = region.east;\n  const N = region.north;\n  const points = [];\n  points.push(new Vector3(W, N, min));\n  points.push(new Vector3(E, N, min));\n  points.push(new Vector3(E, S, min));\n  points.push(new Vector3(W, S, min));\n  points.push(new Vector3(W, N, max));\n  points.push(new Vector3(E, N, max));\n  points.push(new Vector3(E, S, max));\n  points.push(new Vector3(W, S, max));\n  return points;\n}","map":{"version":3,"names":["getS2Cell","getS2Region","Vector3","getS2OrientedBoundingBoxCornerPoints","tokenOrKey","heightInfo","min","minimumHeight","max","maximumHeight","s2cell","region","W","west","S","south","E","east","N","north","points","push"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/3d-tiles/dist/lib/utils/s2/converters/s2-to-obb-points.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { getS2Cell } from \"../s2geometry/s2-cell-utils.js\";\nimport { getS2Region } from \"./s2-to-region.js\";\nimport { Vector3 } from '@math.gl/core';\n/**\n * Converts S2HeightInfo to corner points of an oriented bounding box\n * Can be used to constuct an OrientedBoundingBox instance\n * @param tokenOrKey {string} A string that is the cell's hex token or the Hilbert quad key (containing /)\n * @param heightInfo {S2HeightInfo} min and max height of the box\n * @returns corner points of the oriented bounding box\n */\nexport function getS2OrientedBoundingBoxCornerPoints(tokenOrKey, // This can be an S2 key or token\nheightInfo) {\n    const min = heightInfo?.minimumHeight || 0;\n    const max = heightInfo?.maximumHeight || 0;\n    const s2cell = getS2Cell(tokenOrKey);\n    const region = getS2Region(s2cell);\n    // region lng/lat are in degrees\n    const W = region.west;\n    const S = region.south;\n    const E = region.east;\n    const N = region.north;\n    const points = [];\n    points.push(new Vector3(W, N, min));\n    points.push(new Vector3(E, N, min));\n    points.push(new Vector3(E, S, min));\n    points.push(new Vector3(W, S, min));\n    points.push(new Vector3(W, N, max));\n    points.push(new Vector3(E, N, max));\n    points.push(new Vector3(E, S, max));\n    points.push(new Vector3(W, S, max));\n    return points;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,gCAAgC;AAC1D,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,OAAO,QAAQ,eAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,oCAAoCA,CAACC,UAAU;AAAE;AACjEC,UAAU,EAAE;EACR,MAAMC,GAAG,GAAGD,UAAU,EAAEE,aAAa,IAAI,CAAC;EAC1C,MAAMC,GAAG,GAAGH,UAAU,EAAEI,aAAa,IAAI,CAAC;EAC1C,MAAMC,MAAM,GAAGV,SAAS,CAACI,UAAU,CAAC;EACpC,MAAMO,MAAM,GAAGV,WAAW,CAACS,MAAM,CAAC;EAClC;EACA,MAAME,CAAC,GAAGD,MAAM,CAACE,IAAI;EACrB,MAAMC,CAAC,GAAGH,MAAM,CAACI,KAAK;EACtB,MAAMC,CAAC,GAAGL,MAAM,CAACM,IAAI;EACrB,MAAMC,CAAC,GAAGP,MAAM,CAACQ,KAAK;EACtB,MAAMC,MAAM,GAAG,EAAE;EACjBA,MAAM,CAACC,IAAI,CAAC,IAAInB,OAAO,CAACU,CAAC,EAAEM,CAAC,EAAEZ,GAAG,CAAC,CAAC;EACnCc,MAAM,CAACC,IAAI,CAAC,IAAInB,OAAO,CAACc,CAAC,EAAEE,CAAC,EAAEZ,GAAG,CAAC,CAAC;EACnCc,MAAM,CAACC,IAAI,CAAC,IAAInB,OAAO,CAACc,CAAC,EAAEF,CAAC,EAAER,GAAG,CAAC,CAAC;EACnCc,MAAM,CAACC,IAAI,CAAC,IAAInB,OAAO,CAACU,CAAC,EAAEE,CAAC,EAAER,GAAG,CAAC,CAAC;EACnCc,MAAM,CAACC,IAAI,CAAC,IAAInB,OAAO,CAACU,CAAC,EAAEM,CAAC,EAAEV,GAAG,CAAC,CAAC;EACnCY,MAAM,CAACC,IAAI,CAAC,IAAInB,OAAO,CAACc,CAAC,EAAEE,CAAC,EAAEV,GAAG,CAAC,CAAC;EACnCY,MAAM,CAACC,IAAI,CAAC,IAAInB,OAAO,CAACc,CAAC,EAAEF,CAAC,EAAEN,GAAG,CAAC,CAAC;EACnCY,MAAM,CAACC,IAAI,CAAC,IAAInB,OAAO,CAACU,CAAC,EAAEE,CAAC,EAAEN,GAAG,CAAC,CAAC;EACnC,OAAOY,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}