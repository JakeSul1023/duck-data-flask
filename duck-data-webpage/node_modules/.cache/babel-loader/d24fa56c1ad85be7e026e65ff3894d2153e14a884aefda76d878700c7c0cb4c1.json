{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { cloneElement } from 'react';\nconst MAP_STYLE = {\n  position: 'absolute',\n  zIndex: -1\n};\nexport default function evaluateChildren(children, childProps) {\n  if (typeof children === 'function') {\n    return children(childProps);\n  }\n  if (Array.isArray(children)) {\n    return children.map(child => evaluateChildren(child, childProps));\n  }\n  if (isComponent(children)) {\n    // Special treatment for react-map-gl's Map component\n    // to support shorthand use case <DeckGL><StaticMap /></DeckGL>\n    if (isReactMap(children)) {\n      // Place map under the canvas\n      childProps.style = MAP_STYLE;\n      return cloneElement(children, childProps);\n    }\n    if (needsDeckGLViewProps(children)) {\n      return cloneElement(children, childProps);\n    }\n  }\n  return children;\n}\nexport function isComponent(child) {\n  return child && typeof child === 'object' && 'type' in child || false;\n}\nfunction isReactMap(child) {\n  return child.props?.mapStyle;\n}\nfunction needsDeckGLViewProps(child) {\n  const componentClass = child.type;\n  // @ts-expect-error deckGLViewProps is a custom hack defined on the constructor (nebula.gl)\n  return componentClass && componentClass.deckGLViewProps;\n}\n//# sourceMappingURL=evaluate-children.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}