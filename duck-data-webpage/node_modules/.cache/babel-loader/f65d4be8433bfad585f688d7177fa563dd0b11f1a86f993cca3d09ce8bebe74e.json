{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { WMSSource } from \"../../services/ogc/wms-service.js\";\nimport { ArcGISImageServerSource } from \"../../services/arcgis/arcgis-image-server.js\";\nconst SOURCES = [WMSSource, ArcGISImageServerSource];\n/**\n * Creates an image source\n * If type is not supplied, will try to automatically detect the the\n * @param url URL to the image source\n * @param type type of source. if not known, set to 'auto'\n * @returns an ImageSource instance\n *\n * @deprecated Use createDataSource from @loaders.gl/core\n */\nexport function createImageSource(props, sources = SOURCES) {\n  const {\n    type = 'auto'\n  } = props;\n  const source = type === 'auto' ? guessSourceType(props.url, sources) : getSourceOfType(type, sources);\n  if (!source) {\n    throw new Error('Not a valid image source type');\n  }\n  return source.createDataSource(props.url, props);\n}\n/** Guess service type from URL */\nfunction getSourceOfType(type, sources) {\n  // if (type === 'template') {\n  //   return ImageSource;\n  // }\n  for (const source of sources) {\n    if (source.type === type) {\n      return source;\n    }\n  }\n  return null;\n}\n/** Guess source type from URL */\nfunction guessSourceType(url, sources) {\n  for (const source of sources) {\n    if (source.testURL && source.testURL(url)) {\n      return source;\n    }\n  }\n  return null;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}