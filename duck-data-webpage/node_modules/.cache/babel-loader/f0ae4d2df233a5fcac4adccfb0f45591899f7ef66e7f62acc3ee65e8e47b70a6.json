{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst uniformBlock = `\\\nuniform columnUniforms {\n  float radius;\n  float angle;\n  vec2 offset;\n  bool extruded;\n  bool stroked;\n  bool isStroke;\n  float coverage;\n  float elevationScale;\n  float edgeDistance;\n  float widthScale;\n  float widthMinPixels;\n  float widthMaxPixels;\n  highp int radiusUnits;\n  highp int widthUnits;\n} column;\n`;\nexport const columnUniforms = {\n  name: 'column',\n  vs: uniformBlock,\n  fs: uniformBlock,\n  uniformTypes: {\n    radius: 'f32',\n    angle: 'f32',\n    offset: 'vec2<f32>',\n    extruded: 'f32',\n    stroked: 'f32',\n    isStroke: 'f32',\n    coverage: 'f32',\n    elevationScale: 'f32',\n    edgeDistance: 'f32',\n    widthScale: 'f32',\n    widthMinPixels: 'f32',\n    widthMaxPixels: 'f32',\n    radiusUnits: 'i32',\n    widthUnits: 'i32'\n  }\n};","map":{"version":3,"names":["uniformBlock","columnUniforms","name","vs","fs","uniformTypes","radius","angle","offset","extruded","stroked","isStroke","coverage","elevationScale","edgeDistance","widthScale","widthMinPixels","widthMaxPixels","radiusUnits","widthUnits"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\layers\\src\\column-layer\\column-layer-uniforms.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {ShaderModule} from '@luma.gl/shadertools';\n\nconst uniformBlock = `\\\nuniform columnUniforms {\n  float radius;\n  float angle;\n  vec2 offset;\n  bool extruded;\n  bool stroked;\n  bool isStroke;\n  float coverage;\n  float elevationScale;\n  float edgeDistance;\n  float widthScale;\n  float widthMinPixels;\n  float widthMaxPixels;\n  highp int radiusUnits;\n  highp int widthUnits;\n} column;\n`;\n\nexport type ColumnProps = {\n  radius: number;\n  angle: number;\n  offset: [number, number];\n  extruded: boolean;\n  stroked: boolean;\n  isStroke: boolean;\n  coverage: number;\n  elevationScale: number;\n  edgeDistance: number;\n  widthScale: number;\n  widthMinPixels: number;\n  widthMaxPixels: number;\n  radiusUnits: number;\n  widthUnits: number;\n};\n\nexport const columnUniforms = {\n  name: 'column',\n  vs: uniformBlock,\n  fs: uniformBlock,\n  uniformTypes: {\n    radius: 'f32',\n    angle: 'f32',\n    offset: 'vec2<f32>',\n    extruded: 'f32',\n    stroked: 'f32',\n    isStroke: 'f32',\n    coverage: 'f32',\n    elevationScale: 'f32',\n    edgeDistance: 'f32',\n    widthScale: 'f32',\n    widthMinPixels: 'f32',\n    widthMaxPixels: 'f32',\n    radiusUnits: 'i32',\n    widthUnits: 'i32'\n  }\n} as const satisfies ShaderModule<ColumnProps>;\n"],"mappings":"AAAA;AACA;AACA;AAIA,MAAMA,YAAY,GAAG;;;;;;;;;;;;;;;;;CAiBpB;AAmBD,OAAO,MAAMC,cAAc,GAAG;EAC5BC,IAAI,EAAE,QAAQ;EACdC,EAAE,EAAEH,YAAY;EAChBI,EAAE,EAAEJ,YAAY;EAChBK,YAAY,EAAE;IACZC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE,WAAW;IACnBC,QAAQ,EAAE,KAAK;IACfC,OAAO,EAAE,KAAK;IACdC,QAAQ,EAAE,KAAK;IACfC,QAAQ,EAAE,KAAK;IACfC,cAAc,EAAE,KAAK;IACrBC,YAAY,EAAE,KAAK;IACnBC,UAAU,EAAE,KAAK;IACjBC,cAAc,EAAE,KAAK;IACrBC,cAAc,EAAE,KAAK;IACrBC,WAAW,EAAE,KAAK;IAClBC,UAAU,EAAE;;CAE8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}