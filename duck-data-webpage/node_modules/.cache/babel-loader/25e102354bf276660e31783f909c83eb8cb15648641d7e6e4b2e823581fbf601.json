{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { getS2BoundaryFlatFromS2Cell } from \"./s2-to-boundary.js\";\nimport { getS2Cell } from \"../s2geometry/s2-cell-utils.js\";\n/**\n * Converts S2 cell to the 2D region\n * @param s2cell {S2Cell} S2 cell to convert to 2D region\n * @returns 2D region as an object containing: west, north, east, south in degrees\n */\nexport function getS2Region(s2cell) {\n  let region;\n  if (s2cell.face === 2 || s2cell.face === 5) {\n    //    let corners: Float64Array;\n    let corners = null;\n    let len = 0;\n    for (let i = 0; i < 4; i++) {\n      const key = `${s2cell.face}/${i}`;\n      const cell = getS2Cell(key);\n      const corns = getS2BoundaryFlatFromS2Cell(cell);\n      if (typeof corners === 'undefined' || corners === null) corners = new Float64Array(4 * corns.length);\n      corners.set(corns, len);\n      len += corns.length;\n    }\n    region = get2DRegionFromS2Corners(corners);\n  } else {\n    const corners = getS2BoundaryFlatFromS2Cell(s2cell);\n    region = get2DRegionFromS2Corners(corners);\n  }\n  return region;\n}\n/**\n * Converts the S2 cell defined by its corners to the 2D region\n * @param corners {Float64Array} - a simple polygon in flat array format: [lng0, lat0, lng1, lat1, ...]\n * @returns 2D region as an object containing: west, north, east, south in degrees\n */\nfunction get2DRegionFromS2Corners(corners) {\n  if (corners.length % 2 !== 0) {\n    throw new Error('Invalid corners');\n  }\n  const longitudes = [];\n  const latitudes = [];\n  for (let i = 0; i < corners.length; i += 2) {\n    longitudes.push(corners[i]);\n    latitudes.push(corners[i + 1]);\n  }\n  longitudes.sort((a, b) => a - b);\n  latitudes.sort((a, b) => a - b);\n  // Return the region in degrees\n  return {\n    west: longitudes[0],\n    east: longitudes[longitudes.length - 1],\n    north: latitudes[latitudes.length - 1],\n    south: latitudes[0]\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}