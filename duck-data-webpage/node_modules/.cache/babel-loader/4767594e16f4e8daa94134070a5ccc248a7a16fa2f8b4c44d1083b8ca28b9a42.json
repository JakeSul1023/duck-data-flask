{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* eslint-disable */\n// @ts-nocheck\n/* !\n * MD5 WebAssembly\n * https://github.com/briantbutton/md5-wasm\n * (c) 2020 Brian Todd Button\n * Released under the MIT license\n */\n// *-*=*  *=*-* *-*=*  *=*-* *-*=*  *=*-* *-*=*  *=*-* *-*=*  *=*-* *-*=*  *=*-*\n// This contains two functions designed to achieve the same thing\n//   -> A WebAssembly function for larger files\n//   -> A JavaScript function for the others\n//\nconst atb = typeof atob === 'function' ? atob : typeof Buffer === 'function' ? nodeATOB : identity,\n  wasmB64 = atb('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'),\n  wasm = WebAssembly && atb !== identity ? str2AB(wasmB64).buffer : false,\n  crypt = makeCrypt(),\n  biteSize = 240 * 16 * 16,\n  bounder = Math.floor(biteSize * 16 * 1.066666667),\n  upperLimit = 268435456 - 65536,\n  parmTypeErrStr = 'Parameter must be Buffer, ArrayBuffer or Uint8Array',\n  tooBigErrStr = 'Parameter exceeds max size of 255.9 Mbytes';\nif (!wasm) {\n  console.log('WebAssembly not available or WASM module could not be decoded; md5WASM will fall back to JavaScript');\n}\n//  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n// This returns a Promise-like object (I was farting around, so sue me)\n// which supports '.catch' and '.then'\nexport default function md5WASM(data) {\n  var mem, memView, importObj, imports, len, buff, thenFun, catchFun, result, endTime;\n  const md5JS = makeMD5JS(),\n    md5WA = makeMD5WA(),\n    returnObj = {},\n    startTime = new Date().getTime();\n  returnObj['then'] = function (fun) {\n    thenFun = fun;\n    getThen();\n    return returnObj;\n  };\n  returnObj['catch'] = function (fun) {\n    catchFun = fun;\n    return returnObj;\n  };\n  // Sift the incoming parameter and the environment\n  // If we are good, set buff\n  if (true) {\n    if (data && typeof data === 'object') {\n      if (typeof Buffer === 'function' && data.constructor === Buffer) {\n        buff = data;\n      } else {\n        if (data.constructor === Uint8Array || data.constructor === ArrayBuffer) {\n          buff = data.constructor === ArrayBuffer ? new Uint8Array(data) : data;\n        } else {\n          getCatch(new TypeError(parmTypeErrStr));\n        }\n      }\n    } else {\n      getCatch(new TypeError(parmTypeErrStr));\n    }\n  }\n  //  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n  // Make some choices based on the size of the incoming data\n  //   ~ Use WebAssembly or just JavaScript\n  //   ~ If Webassemly, allocate appropriate memory\n  //\n  if (buff) {\n    len = buff.length;\n    if (wasm && len > bounder) {\n      if (len > upperLimit) {\n        getCatch(new Error(tooBigErrStr));\n      } else {\n        mem = new WebAssembly.Memory({\n          initial: len > 32000000 ? len > 64000000 ? len > 128000000 ? 4096 : 2048 : 1024 : 512\n        });\n        memView = new Uint32Array(mem.buffer);\n        imports = {\n          mem: mem,\n          log: console.log\n        };\n        importObj = {\n          imports\n        };\n        WebAssembly.instantiate(wasm, importObj).then(giterdone);\n      }\n    } else {\n      getThen(md5JS(buff));\n    }\n  }\n  return returnObj;\n  function giterdone(obj) {\n    getThen(md5WA(buff, obj.instance.exports, memView));\n  }\n  function getThen(r) {\n    var res = Boolean(r) ? r : result;\n    if (Boolean(r)) {\n      endTime = new Date().getTime();\n    }\n    if (typeof thenFun === 'function') {\n      if (Boolean(res)) {\n        thenFun(res, endTime - startTime);\n        thenFun = catchFun = null;\n      }\n    } else {\n      if (Boolean(r)) {\n        result = r;\n      }\n    }\n  }\n  function getCatch(err) {\n    if (typeof catchFun === 'function') {\n      catchFun(err);\n    }\n  }\n}\nfunction makeMD5WA() {\n  var loop, loops;\n  var getA, setA, getB, setB, getC, setC, getD, setD, getX, setX, memView;\n  var md5WA = function (message) {\n    var m00, m01, m02, m03, m04, m05, m06, m07, m08, m09, m10, m11, m12, m13, m14, m15, aa, bb, cc, dd, m, k;\n    var qwerty = new Date().getTime();\n    var md5Used = 0;\n    var a = 1732584193,\n      b = -271733879,\n      c = -1732584194,\n      d = 271733878,\n      i = 0,\n      l = message.length * 8,\n      len;\n    len = bytesToWordsNewer(message, memView);\n    memView[l >>> 5] |= 0x80 << l % 32;\n    memView[(l + 64 >>> 9 << 4) + 14] = l;\n    len = (l + 64 >>> 9 << 4) + 15;\n    m = memView;\n    // console.log(\"first loop took \"+((new Date().getTime())-qwerty)+\"ms\");\n    while (i < len) {\n      if (len > i + bounder) {\n        setA(a);\n        setB(b);\n        setC(c);\n        setD(d);\n        loops(biteSize);\n        i = i + biteSize * 16;\n        a = getA();\n        b = getB();\n        c = getC();\n        d = getD();\n        md5Used++;\n      } else {\n        aa = a;\n        bb = b;\n        cc = c;\n        dd = d;\n        m00 = m[i + 0] >>> 0;\n        m01 = m[i + 1] >>> 0;\n        m02 = m[i + 2] >>> 0;\n        m03 = m[i + 3] >>> 0;\n        m04 = m[i + 4] >>> 0;\n        m05 = m[i + 5] >>> 0;\n        m06 = m[i + 6] >>> 0;\n        m07 = m[i + 7] >>> 0;\n        m08 = m[i + 8] >>> 0;\n        m09 = m[i + 9] >>> 0;\n        m10 = m[i + 10] >>> 0;\n        m11 = m[i + 11] >>> 0;\n        m12 = m[i + 12] >>> 0;\n        m13 = m[i + 13] >>> 0;\n        m14 = m[i + 14] >>> 0;\n        m15 = m[i + 15] >>> 0;\n        a = ____(7, 25, a + (b & c | ~b & d) + m00 - 680876936) + b;\n        d = ____(12, 20, d + (a & b | ~a & c) + m01 - 389564586) + a;\n        c = ____(17, 15, c + (d & a | ~d & b) + m02 + 606105819) + d;\n        b = ____(22, 10, b + (c & d | ~c & a) + m03 - 1044525330) + c;\n        a = ____(7, 25, a + (b & c | ~b & d) + m04 - 176418897) + b;\n        d = ____(12, 20, d + (a & b | ~a & c) + m05 + 1200080426) + a;\n        c = ____(17, 15, c + (d & a | ~d & b) + m06 - 1473231341) + d;\n        b = ____(22, 10, b + (c & d | ~c & a) + m07 - 45705983) + c;\n        a = ____(7, 25, a + (b & c | ~b & d) + m08 + 1770035416) + b;\n        d = ____(12, 20, d + (a & b | ~a & c) + m09 - 1958414417) + a;\n        c = ____(17, 15, c + (d & a | ~d & b) + m10 - 42063) + d;\n        b = ____(22, 10, b + (c & d | ~c & a) + m11 - 1990404162) + c;\n        a = ____(7, 25, a + (b & c | ~b & d) + m12 + 1804603682) + b;\n        d = ____(12, 20, d + (a & b | ~a & c) + m13 - 40341101) + a;\n        c = ____(17, 15, c + (d & a | ~d & b) + m14 - 1502002290) + d;\n        b = ____(22, 10, b + (c & d | ~c & a) + m15 + 1236535329) + c;\n        a = ____(5, 27, a + (b & d | c & ~d) + m01 - 165796510) + b;\n        d = ____(9, 23, d + (a & c | b & ~c) + m06 - 1069501632) + a;\n        c = ____(14, 18, c + (d & b | a & ~b) + m11 + 643717713) + d;\n        b = ____(20, 12, b + (c & a | d & ~a) + m00 - 373897302) + c;\n        a = ____(5, 27, a + (b & d | c & ~d) + m05 - 701558691) + b;\n        d = ____(9, 23, d + (a & c | b & ~c) + m10 + 38016083) + a;\n        c = ____(14, 18, c + (d & b | a & ~b) + m15 - 660478335) + d;\n        b = ____(20, 12, b + (c & a | d & ~a) + m04 - 405537848) + c;\n        a = ____(5, 27, a + (b & d | c & ~d) + m09 + 568446438) + b;\n        d = ____(9, 23, d + (a & c | b & ~c) + m14 - 1019803690) + a;\n        c = ____(14, 18, c + (d & b | a & ~b) + m03 - 187363961) + d;\n        b = ____(20, 12, b + (c & a | d & ~a) + m08 + 1163531501) + c;\n        a = ____(5, 27, a + (b & d | c & ~d) + m13 - 1444681467) + b;\n        d = ____(9, 23, d + (a & c | b & ~c) + m02 - 51403784) + a;\n        c = ____(14, 18, c + (d & b | a & ~b) + m07 + 1735328473) + d;\n        b = ____(20, 12, b + (c & a | d & ~a) + m12 - 1926607734) + c;\n        a = ____(4, 28, a + (b ^ c ^ d) + m05 - 378558) + b;\n        d = ____(11, 21, d + (a ^ b ^ c) + m08 - 2022574463) + a;\n        c = ____(16, 16, c + (d ^ a ^ b) + m11 + 1839030562) + d;\n        b = ____(23, 9, b + (c ^ d ^ a) + m14 - 35309556) + c;\n        a = ____(4, 28, a + (b ^ c ^ d) + m01 - 1530992060) + b;\n        d = ____(11, 21, d + (a ^ b ^ c) + m04 + 1272893353) + a;\n        c = ____(16, 16, c + (d ^ a ^ b) + m07 - 155497632) + d;\n        b = ____(23, 9, b + (c ^ d ^ a) + m10 - 1094730640) + c;\n        a = ____(4, 28, a + (b ^ c ^ d) + m13 + 681279174) + b;\n        d = ____(11, 21, d + (a ^ b ^ c) + m00 - 358537222) + a;\n        c = ____(16, 16, c + (d ^ a ^ b) + m03 - 722521979) + d;\n        b = ____(23, 9, b + (c ^ d ^ a) + m06 + 76029189) + c;\n        a = ____(4, 28, a + (b ^ c ^ d) + m09 - 640364487) + b;\n        d = ____(11, 21, d + (a ^ b ^ c) + m12 - 421815835) + a;\n        c = ____(16, 16, c + (d ^ a ^ b) + m15 + 530742520) + d;\n        b = ____(23, 9, b + (c ^ d ^ a) + m02 - 995338651) + c;\n        a = ____(6, 26, a + (c ^ (b | ~d)) + m00 - 198630844) + b;\n        d = ____(10, 22, d + (b ^ (a | ~c)) + m07 + 1126891415) + a;\n        c = ____(15, 17, c + (a ^ (d | ~b)) + m14 - 1416354905) + d;\n        b = ____(21, 11, b + (d ^ (c | ~a)) + m05 - 57434055) + c;\n        a = ____(6, 26, a + (c ^ (b | ~d)) + m12 + 1700485571) + b;\n        d = ____(10, 22, d + (b ^ (a | ~c)) + m03 - 1894986606) + a;\n        c = ____(15, 17, c + (a ^ (d | ~b)) + m10 - 1051523) + d;\n        b = ____(21, 11, b + (d ^ (c | ~a)) + m01 - 2054922799) + c;\n        a = ____(6, 26, a + (c ^ (b | ~d)) + m08 + 1873313359) + b;\n        d = ____(10, 22, d + (b ^ (a | ~c)) + m15 - 30611744) + a;\n        c = ____(15, 17, c + (a ^ (d | ~b)) + m06 - 1560198380) + d;\n        b = ____(21, 11, b + (d ^ (c | ~a)) + m13 + 1309151649) + c;\n        a = ____(6, 26, a + (c ^ (b | ~d)) + m04 - 145523070) + b;\n        d = ____(10, 22, d + (b ^ (a | ~c)) + m11 - 1120210379) + a;\n        c = ____(15, 17, c + (a ^ (d | ~b)) + m02 + 718787259) + d;\n        b = ____(21, 11, b + (d ^ (c | ~a)) + m09 - 343485551) + c;\n        i = i + 16;\n        a = a + aa >>> 0;\n        b = b + bb >>> 0;\n        c = c + cc >>> 0;\n        d = d + dd >>> 0;\n      }\n    }\n    // console.log(\"md5WA, elapsed=\"+((new Date().getTime())-qwerty)+(md5Used?\", WebAssembly called \"+md5Used+\" times\":\", WebAssembly not called\"));\n    return crypt.endian([a, b, c, d]);\n    function ____(s, t, n) {\n      return n << s | n >>> t;\n    }\n    // Convert a byte array to big-endian 32-bit words\n    function bytesToWordsNewer(bytes, words) {\n      var i = -1,\n        l = Math.floor((bytes.length - 1) / 4),\n        j = 0,\n        b0,\n        b1,\n        b2,\n        b3;\n      while (l - 8 > i++) {\n        j = i << 2;\n        words[i] = bytes[j + 0] | bytes[j + 1] << 8 | bytes[j + 2] << 16 | bytes[j + 3] << 24;\n      }\n      i--;\n      while (l > i++) {\n        j = i << 2;\n        b0 = typeof bytes[j + 0] === 'undefined' ? 0 : bytes[j + 0];\n        b1 = typeof bytes[j + 1] === 'undefined' ? 0 : bytes[j + 1];\n        b2 = typeof bytes[j + 2] === 'undefined' ? 0 : bytes[j + 2];\n        b3 = typeof bytes[j + 3] === 'undefined' ? 0 : bytes[j + 3];\n        words[i] = b0 | b1 << 8 | b2 << 16 | b3 << 24;\n      }\n      return l + 1;\n    }\n  };\n  return function (message, exports, mView, options) {\n    var digestbytes;\n    loops = exports.loops;\n    loop = exports.loop;\n    getA = exports.getA;\n    getB = exports.getB;\n    getC = exports.getC;\n    getD = exports.getD;\n    getX = exports.getX;\n    setA = exports.setA;\n    setB = exports.setB;\n    setC = exports.setC;\n    setD = exports.setD;\n    setX = exports.setX;\n    memView = mView;\n    digestbytes = crypt.wordsToBytes(md5WA(message));\n    return options && options.asBytes ? digestbytes : crypt.bytesconvertNumberToHex(digestbytes);\n  };\n}\nfunction makeMD5JS() {\n  var md5JS = function (message, options) {\n    var m00, m01, m02, m03, m04, m05, m06, m07, m08, m09, m10, m11, m12, m13, m14, m15, aa, bb, cc, dd, m;\n    var qwerty = new Date().getTime();\n    // console.log(\"md5 start\");\n    var a = 1732584193,\n      b = -271733879,\n      c = -1732584194,\n      d = 271733878,\n      l = message.length * 8;\n    m = crypt.bytesToWords(message);\n    // Swap endian\n    for (var j = 0; j < m.length; j++) {\n      m[j] = (m[j] << 8 | m[j] >>> 24) & 0x00ff00ff | (m[j] << 24 | m[j] >>> 8) & 0xff00ff00;\n    }\n    // Padding\n    m[l >>> 5] |= 0x80 << l % 32;\n    m[(l + 64 >>> 9 << 4) + 14] = l;\n    for (var i = 0; i < m.length; i += 16) {\n      aa = a;\n      bb = b;\n      cc = c;\n      dd = d;\n      m00 = m[i + 0] >>> 0;\n      m01 = m[i + 1] >>> 0;\n      m02 = m[i + 2] >>> 0;\n      m03 = m[i + 3] >>> 0;\n      m04 = m[i + 4] >>> 0;\n      m05 = m[i + 5] >>> 0;\n      m06 = m[i + 6] >>> 0;\n      m07 = m[i + 7] >>> 0;\n      m08 = m[i + 8] >>> 0;\n      m09 = m[i + 9] >>> 0;\n      m10 = m[i + 10] >>> 0;\n      m11 = m[i + 11] >>> 0;\n      m12 = m[i + 12] >>> 0;\n      m13 = m[i + 13] >>> 0;\n      m14 = m[i + 14] >>> 0;\n      m15 = m[i + 15] >>> 0;\n      a = ____(7, 25, a + (b & c | ~b & d) + m00 - 680876936) + b;\n      d = ____(12, 20, d + (a & b | ~a & c) + m01 - 389564586) + a;\n      c = ____(17, 15, c + (d & a | ~d & b) + m02 + 606105819) + d;\n      b = ____(22, 10, b + (c & d | ~c & a) + m03 - 1044525330) + c;\n      a = ____(7, 25, a + (b & c | ~b & d) + m04 - 176418897) + b;\n      d = ____(12, 20, d + (a & b | ~a & c) + m05 + 1200080426) + a;\n      c = ____(17, 15, c + (d & a | ~d & b) + m06 - 1473231341) + d;\n      b = ____(22, 10, b + (c & d | ~c & a) + m07 - 45705983) + c;\n      a = ____(7, 25, a + (b & c | ~b & d) + m08 + 1770035416) + b;\n      d = ____(12, 20, d + (a & b | ~a & c) + m09 - 1958414417) + a;\n      c = ____(17, 15, c + (d & a | ~d & b) + m10 - 42063) + d;\n      b = ____(22, 10, b + (c & d | ~c & a) + m11 - 1990404162) + c;\n      a = ____(7, 25, a + (b & c | ~b & d) + m12 + 1804603682) + b;\n      d = ____(12, 20, d + (a & b | ~a & c) + m13 - 40341101) + a;\n      c = ____(17, 15, c + (d & a | ~d & b) + m14 - 1502002290) + d;\n      b = ____(22, 10, b + (c & d | ~c & a) + m15 + 1236535329) + c;\n      a = ____(5, 27, a + (b & d | c & ~d) + m01 - 165796510) + b;\n      d = ____(9, 23, d + (a & c | b & ~c) + m06 - 1069501632) + a;\n      c = ____(14, 18, c + (d & b | a & ~b) + m11 + 643717713) + d;\n      b = ____(20, 12, b + (c & a | d & ~a) + m00 - 373897302) + c;\n      a = ____(5, 27, a + (b & d | c & ~d) + m05 - 701558691) + b;\n      d = ____(9, 23, d + (a & c | b & ~c) + m10 + 38016083) + a;\n      c = ____(14, 18, c + (d & b | a & ~b) + m15 - 660478335) + d;\n      b = ____(20, 12, b + (c & a | d & ~a) + m04 - 405537848) + c;\n      a = ____(5, 27, a + (b & d | c & ~d) + m09 + 568446438) + b;\n      d = ____(9, 23, d + (a & c | b & ~c) + m14 - 1019803690) + a;\n      c = ____(14, 18, c + (d & b | a & ~b) + m03 - 187363961) + d;\n      b = ____(20, 12, b + (c & a | d & ~a) + m08 + 1163531501) + c;\n      a = ____(5, 27, a + (b & d | c & ~d) + m13 - 1444681467) + b;\n      d = ____(9, 23, d + (a & c | b & ~c) + m02 - 51403784) + a;\n      c = ____(14, 18, c + (d & b | a & ~b) + m07 + 1735328473) + d;\n      b = ____(20, 12, b + (c & a | d & ~a) + m12 - 1926607734) + c;\n      a = ____(4, 28, a + (b ^ c ^ d) + m05 - 378558) + b;\n      d = ____(11, 21, d + (a ^ b ^ c) + m08 - 2022574463) + a;\n      c = ____(16, 16, c + (d ^ a ^ b) + m11 + 1839030562) + d;\n      b = ____(23, 9, b + (c ^ d ^ a) + m14 - 35309556) + c;\n      a = ____(4, 28, a + (b ^ c ^ d) + m01 - 1530992060) + b;\n      d = ____(11, 21, d + (a ^ b ^ c) + m04 + 1272893353) + a;\n      c = ____(16, 16, c + (d ^ a ^ b) + m07 - 155497632) + d;\n      b = ____(23, 9, b + (c ^ d ^ a) + m10 - 1094730640) + c;\n      a = ____(4, 28, a + (b ^ c ^ d) + m13 + 681279174) + b;\n      d = ____(11, 21, d + (a ^ b ^ c) + m00 - 358537222) + a;\n      c = ____(16, 16, c + (d ^ a ^ b) + m03 - 722521979) + d;\n      b = ____(23, 9, b + (c ^ d ^ a) + m06 + 76029189) + c;\n      a = ____(4, 28, a + (b ^ c ^ d) + m09 - 640364487) + b;\n      d = ____(11, 21, d + (a ^ b ^ c) + m12 - 421815835) + a;\n      c = ____(16, 16, c + (d ^ a ^ b) + m15 + 530742520) + d;\n      b = ____(23, 9, b + (c ^ d ^ a) + m02 - 995338651) + c;\n      a = ____(6, 26, a + (c ^ (b | ~d)) + m00 - 198630844) + b;\n      d = ____(10, 22, d + (b ^ (a | ~c)) + m07 + 1126891415) + a;\n      c = ____(15, 17, c + (a ^ (d | ~b)) + m14 - 1416354905) + d;\n      b = ____(21, 11, b + (d ^ (c | ~a)) + m05 - 57434055) + c;\n      a = ____(6, 26, a + (c ^ (b | ~d)) + m12 + 1700485571) + b;\n      d = ____(10, 22, d + (b ^ (a | ~c)) + m03 - 1894986606) + a;\n      c = ____(15, 17, c + (a ^ (d | ~b)) + m10 - 1051523) + d;\n      b = ____(21, 11, b + (d ^ (c | ~a)) + m01 - 2054922799) + c;\n      a = ____(6, 26, a + (c ^ (b | ~d)) + m08 + 1873313359) + b;\n      d = ____(10, 22, d + (b ^ (a | ~c)) + m15 - 30611744) + a;\n      c = ____(15, 17, c + (a ^ (d | ~b)) + m06 - 1560198380) + d;\n      b = ____(21, 11, b + (d ^ (c | ~a)) + m13 + 1309151649) + c;\n      a = ____(6, 26, a + (c ^ (b | ~d)) + m04 - 145523070) + b;\n      d = ____(10, 22, d + (b ^ (a | ~c)) + m11 - 1120210379) + a;\n      c = ____(15, 17, c + (a ^ (d | ~b)) + m02 + 718787259) + d;\n      b = ____(21, 11, b + (d ^ (c | ~a)) + m09 - 343485551) + c;\n      a = a + aa >>> 0;\n      b = b + bb >>> 0;\n      c = c + cc >>> 0;\n      d = d + dd >>> 0;\n    }\n    // console.log(\"md5JS, elapsed=\"+((new Date().getTime())-qwerty));\n    return crypt.endian([a, b, c, d]);\n    function ____(s, t, n) {\n      return n << s | n >>> t;\n    }\n  };\n  return function (message, options) {\n    var digestbytes = crypt.wordsToBytes(md5JS(message, options)),\n      result = options && options.asBytes ? digestbytes : crypt.bytesconvertNumberToHex(digestbytes);\n    return result;\n  };\n}\nfunction str2AB(str) {\n  var l,\n    buff,\n    buffView,\n    i = -1;\n  l = str.length - 1;\n  buff = new ArrayBuffer(str.length);\n  buffView = new Uint8Array(buff);\n  while (l > i++) {\n    buffView[i] = str.charCodeAt(i);\n  }\n  return buffView;\n}\nfunction nodeATOB(str) {\n  return Buffer.from(str, 'base64').toString('binary');\n}\nfunction identity(x) {\n  return x;\n}\nfunction makeCrypt() {\n  var base64map = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  return {\n    rotl: function (n, b) {\n      return n << b | n >>> 32 - b;\n    },\n    endian: function (n) {\n      if (n.constructor == Number) {\n        return crypt.rotl(n, 8) & 0x00ff00ff | crypt.rotl(n, 24) & 0xff00ff00;\n      }\n      for (var i = 0; i < n.length; i++) n[i] = crypt.endian(n[i]);\n      return n;\n    },\n    bytesToWords: function (bytes) {\n      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8) words[b >>> 5] |= bytes[i] << 24 - b % 32;\n      return words;\n    },\n    wordsToBytes: function (words) {\n      for (var bytes = [], b = 0; b < words.length * 32; b += 8) bytes.push(words[b >>> 5] >>> 24 - b % 32 & 0xff);\n      return bytes;\n    },\n    bytesconvertNumberToHex: function (bytes) {\n      for (var hex = [], i = 0; i < bytes.length; i++) {\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xf).toString(16));\n      }\n      return hex.join('');\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}