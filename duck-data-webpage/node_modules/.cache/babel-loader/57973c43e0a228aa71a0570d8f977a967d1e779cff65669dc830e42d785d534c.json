{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* global document */\nconst defaultStyle = {\n  zIndex: '1',\n  position: 'absolute',\n  pointerEvents: 'none',\n  color: '#a0a7b4',\n  backgroundColor: '#29323c',\n  padding: '10px',\n  top: '0',\n  left: '0',\n  display: 'none'\n};\nexport default class Tooltip {\n  constructor() {\n    this.id = 'default-tooltip';\n    this.placement = 'fill';\n    this.props = {};\n    this.isVisible = false;\n  }\n  onAdd({\n    deck\n  }) {\n    const el = document.createElement('div');\n    el.className = 'deck-tooltip';\n    Object.assign(el.style, defaultStyle);\n    this.deck = deck;\n    this.element = el;\n    return el;\n  }\n  onRemove() {\n    this.deck = undefined;\n    this.element = undefined;\n  }\n  setProps() {}\n  onViewportChange(viewport) {\n    if (this.isVisible && viewport.id === this.lastViewport?.id && viewport !== this.lastViewport) {\n      // Camera has moved, clear tooltip\n      this.setTooltip(null);\n    }\n  }\n  onHover(info) {\n    const {\n      deck\n    } = this;\n    const getTooltip = deck && deck.props.getTooltip;\n    if (!getTooltip) {\n      return;\n    }\n    const displayInfo = getTooltip(info);\n    this.lastViewport = info.viewport;\n    this.setTooltip(displayInfo, info.x, info.y);\n  }\n  setTooltip(displayInfo, x, y) {\n    const el = this.element;\n    if (!el) {\n      return;\n    }\n    if (typeof displayInfo === 'string') {\n      el.innerText = displayInfo;\n    } else if (!displayInfo) {\n      this.isVisible = false;\n      el.style.display = 'none';\n      return;\n    } else {\n      if (displayInfo.text) {\n        el.innerText = displayInfo.text;\n      }\n      if (displayInfo.html) {\n        el.innerHTML = displayInfo.html;\n      }\n      if (displayInfo.className) {\n        el.className = displayInfo.className;\n      }\n    }\n    this.isVisible = true;\n    el.style.display = 'block';\n    el.style.transform = `translate(${x}px, ${y}px)`;\n    if (displayInfo && typeof displayInfo === 'object' && 'style' in displayInfo) {\n      Object.assign(el.style, displayInfo.style);\n    }\n  }\n}","map":{"version":3,"names":["defaultStyle","zIndex","position","pointerEvents","color","backgroundColor","padding","top","left","display","Tooltip","constructor","id","placement","props","isVisible","onAdd","deck","el","document","createElement","className","Object","assign","style","element","onRemove","undefined","setProps","onViewportChange","viewport","lastViewport","setTooltip","onHover","info","getTooltip","displayInfo","x","y","innerText","text","html","innerHTML","transform"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\core\\src\\lib\\tooltip.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Widget, WidgetPlacement} from './widget-manager';\nimport type {PickingInfo} from './picking/pick-info';\nimport type Viewport from '../viewports/viewport';\nimport type Deck from './deck';\n\n/* global document */\nconst defaultStyle: Partial<CSSStyleDeclaration> = {\n  zIndex: '1',\n  position: 'absolute',\n  pointerEvents: 'none',\n  color: '#a0a7b4',\n  backgroundColor: '#29323c',\n  padding: '10px',\n  top: '0',\n  left: '0',\n  display: 'none'\n};\n\nexport type TooltipContent =\n  | null\n  | string\n  | {\n      text?: string;\n      html?: string;\n      className?: string;\n      style?: Partial<CSSStyleDeclaration>;\n    };\n\nexport default class Tooltip implements Widget {\n  id = 'default-tooltip';\n  placement: WidgetPlacement = 'fill';\n  props = {};\n  isVisible: boolean = false;\n  deck?: Deck<any>;\n  element?: HTMLDivElement;\n  lastViewport?: Viewport;\n\n  onAdd({deck}: {deck: Deck<any>}): HTMLDivElement {\n    const el = document.createElement('div');\n    el.className = 'deck-tooltip';\n    Object.assign(el.style, defaultStyle);\n\n    this.deck = deck;\n    this.element = el;\n\n    return el;\n  }\n\n  onRemove() {\n    this.deck = undefined;\n    this.element = undefined;\n  }\n\n  setProps() {}\n\n  onViewportChange(viewport: Viewport) {\n    if (this.isVisible && viewport.id === this.lastViewport?.id && viewport !== this.lastViewport) {\n      // Camera has moved, clear tooltip\n      this.setTooltip(null);\n    }\n  }\n\n  onHover(info: PickingInfo) {\n    const {deck} = this;\n    const getTooltip = deck && deck.props.getTooltip;\n    if (!getTooltip) {\n      return;\n    }\n    const displayInfo = getTooltip(info);\n    this.lastViewport = info.viewport;\n    this.setTooltip(displayInfo, info.x, info.y);\n  }\n\n  setTooltip(displayInfo: TooltipContent, x?: number, y?: number): void {\n    const el = this.element;\n    if (!el) {\n      return;\n    }\n\n    if (typeof displayInfo === 'string') {\n      el.innerText = displayInfo;\n    } else if (!displayInfo) {\n      this.isVisible = false;\n      el.style.display = 'none';\n      return;\n    } else {\n      if (displayInfo.text) {\n        el.innerText = displayInfo.text;\n      }\n      if (displayInfo.html) {\n        el.innerHTML = displayInfo.html;\n      }\n      if (displayInfo.className) {\n        el.className = displayInfo.className;\n      }\n    }\n    this.isVisible = true;\n    el.style.display = 'block';\n    el.style.transform = `translate(${x}px, ${y}px)`;\n\n    if (displayInfo && typeof displayInfo === 'object' && 'style' in displayInfo) {\n      Object.assign(el.style, displayInfo.style);\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}