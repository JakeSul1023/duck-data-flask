{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { DataViewFile } from '@loaders.gl/loader-utils';\nimport { parse3DTilesArchive as parse3DTilesArchiveFromProvider } from \"./3d-tiles-archive/3d-tiles-archive-parser.js\";\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof \"4.3.2\" !== 'undefined' ? \"4.3.2\" : 'latest';\n/**\n * Loader for 3tz packages\n */\nexport const Tiles3DArchiveFileLoader = {\n  dataType: null,\n  batchType: null,\n  name: '3tz',\n  id: '3tz',\n  module: '3d-tiles',\n  version: VERSION,\n  mimeTypes: ['application/octet-stream', 'application/vnd.maxar.archive.3tz+zip'],\n  parse: parse3DTilesArchive,\n  extensions: ['3tz'],\n  options: {}\n};\n/**\n * returns a single file from the 3tz archive\n * @param data 3tz archive data\n * @param options options\n * @returns requested file\n */\nasync function parse3DTilesArchive(data, options = {}) {\n  const archive = await parse3DTilesArchiveFromProvider(new DataViewFile(new DataView(data)));\n  return archive.getFile(options['3d-tiles-archive']?.path ?? '');\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}