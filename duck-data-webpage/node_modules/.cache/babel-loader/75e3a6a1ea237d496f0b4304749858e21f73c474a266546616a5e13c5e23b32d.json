{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { log } from \"../log-utils/log.js\";\n/**\n * Register application-imported modules\n * These modules are typically to big to bundle, or may have issues on some bundlers/environments\n */\nexport function registerJSModules(modules) {\n  globalThis.loaders ||= {};\n  globalThis.loaders.modules ||= {};\n  Object.assign(globalThis.loaders.modules, modules);\n}\n/**\n * Get a pre-registered application-imported module, warn if not present\n */\nexport function checkJSModule(name, caller) {\n  const module = globalThis.loaders?.modules?.[name];\n  if (!module) {\n    log.warn(`${caller}: ${name} library not installed`)();\n  }\n}\n/**\n * Get a pre-registered application-imported module, throw if not present\n */\nexport function getJSModule(name, caller) {\n  const module = globalThis.loaders?.modules?.[name];\n  if (!module) {\n    throw new Error(`${caller}: ${name} library not installed`);\n  }\n  return module;\n}\n/**\n * Get a pre-registered application-imported module, return null if not present\n */\nexport function getJSModuleOrNull(name) {\n  const module = globalThis.loaders?.modules?.[name];\n  return module || null;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}