{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/**\n * BlobFile provides a \"file like interface\" to the data in a Blob or File object\n */\nexport class BlobFile {\n  handle;\n  size;\n  bigsize;\n  url;\n  constructor(blob) {\n    this.handle = blob instanceof ArrayBuffer ? new Blob([blob]) : blob;\n    this.size = blob instanceof ArrayBuffer ? blob.byteLength : blob.size;\n    this.bigsize = BigInt(this.size);\n    this.url = blob instanceof File ? blob.name : '';\n  }\n  async close() {}\n  async stat() {\n    return {\n      size: this.handle.size,\n      bigsize: BigInt(this.handle.size),\n      isDirectory: false\n    };\n  }\n  async read(start, length) {\n    const arrayBuffer = await this.handle.slice(Number(start), Number(start) + Number(length)).arrayBuffer();\n    return arrayBuffer;\n  }\n}","map":{"version":3,"names":["BlobFile","handle","size","bigsize","url","constructor","blob","ArrayBuffer","Blob","byteLength","BigInt","File","name","close","stat","isDirectory","read","start","length","arrayBuffer","slice","Number"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/loader-utils/dist/lib/files/blob-file.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/**\n * BlobFile provides a \"file like interface\" to the data in a Blob or File object\n */\nexport class BlobFile {\n    handle;\n    size;\n    bigsize;\n    url;\n    constructor(blob) {\n        this.handle = blob instanceof ArrayBuffer ? new Blob([blob]) : blob;\n        this.size = blob instanceof ArrayBuffer ? blob.byteLength : blob.size;\n        this.bigsize = BigInt(this.size);\n        this.url = blob instanceof File ? blob.name : '';\n    }\n    async close() { }\n    async stat() {\n        return {\n            size: this.handle.size,\n            bigsize: BigInt(this.handle.size),\n            isDirectory: false\n        };\n    }\n    async read(start, length) {\n        const arrayBuffer = await this.handle\n            .slice(Number(start), Number(start) + Number(length))\n            .arrayBuffer();\n        return arrayBuffer;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,QAAQ,CAAC;EAClBC,MAAM;EACNC,IAAI;EACJC,OAAO;EACPC,GAAG;EACHC,WAAWA,CAACC,IAAI,EAAE;IACd,IAAI,CAACL,MAAM,GAAGK,IAAI,YAAYC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAACF,IAAI,CAAC,CAAC,GAAGA,IAAI;IACnE,IAAI,CAACJ,IAAI,GAAGI,IAAI,YAAYC,WAAW,GAAGD,IAAI,CAACG,UAAU,GAAGH,IAAI,CAACJ,IAAI;IACrE,IAAI,CAACC,OAAO,GAAGO,MAAM,CAAC,IAAI,CAACR,IAAI,CAAC;IAChC,IAAI,CAACE,GAAG,GAAGE,IAAI,YAAYK,IAAI,GAAGL,IAAI,CAACM,IAAI,GAAG,EAAE;EACpD;EACA,MAAMC,KAAKA,CAAA,EAAG,CAAE;EAChB,MAAMC,IAAIA,CAAA,EAAG;IACT,OAAO;MACHZ,IAAI,EAAE,IAAI,CAACD,MAAM,CAACC,IAAI;MACtBC,OAAO,EAAEO,MAAM,CAAC,IAAI,CAACT,MAAM,CAACC,IAAI,CAAC;MACjCa,WAAW,EAAE;IACjB,CAAC;EACL;EACA,MAAMC,IAAIA,CAACC,KAAK,EAAEC,MAAM,EAAE;IACtB,MAAMC,WAAW,GAAG,MAAM,IAAI,CAAClB,MAAM,CAChCmB,KAAK,CAACC,MAAM,CAACJ,KAAK,CAAC,EAAEI,MAAM,CAACJ,KAAK,CAAC,GAAGI,MAAM,CAACH,MAAM,CAAC,CAAC,CACpDC,WAAW,CAAC,CAAC;IAClB,OAAOA,WAAW;EACtB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}