{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/** Group data points into bins */\nexport function sortBins(_ref) {\n  let {\n    pointCount,\n    getBinId\n  } = _ref;\n  const binsById = new Map();\n  for (let i = 0; i < pointCount; i++) {\n    const id = getBinId(i);\n    if (id === null) {\n      continue;\n    }\n    let bin = binsById.get(String(id));\n    if (bin) {\n      bin.points.push(i);\n    } else {\n      bin = {\n        id,\n        index: binsById.size,\n        points: [i]\n      };\n      binsById.set(String(id), bin);\n    }\n  }\n  return Array.from(binsById.values());\n}\n/** Pack bin ids into a typed array */\nexport function packBinIds(_ref2) {\n  let {\n    bins,\n    dimensions,\n    target\n  } = _ref2;\n  const targetLength = bins.length * dimensions;\n  if (!target || target.length < targetLength) {\n    target = new Float32Array(targetLength);\n  }\n  for (let i = 0; i < bins.length; i++) {\n    const {\n      id\n    } = bins[i];\n    if (Array.isArray(id)) {\n      target.set(id, i * dimensions);\n    } else {\n      target[i] = id;\n    }\n  }\n  return target;\n}\n//# sourceMappingURL=sort-bins.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}