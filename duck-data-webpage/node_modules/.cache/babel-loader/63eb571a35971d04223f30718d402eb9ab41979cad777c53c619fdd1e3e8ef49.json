{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* global document */\nconst defaultStyle = {\n  zIndex: '1',\n  position: 'absolute',\n  pointerEvents: 'none',\n  color: '#a0a7b4',\n  backgroundColor: '#29323c',\n  padding: '10px',\n  top: '0',\n  left: '0',\n  display: 'none'\n};\nexport default class Tooltip {\n  constructor() {\n    this.id = 'default-tooltip';\n    this.placement = 'fill';\n    this.props = {};\n    this.isVisible = false;\n  }\n  onAdd(_ref) {\n    let {\n      deck\n    } = _ref;\n    const el = document.createElement('div');\n    el.className = 'deck-tooltip';\n    Object.assign(el.style, defaultStyle);\n    this.deck = deck;\n    this.element = el;\n    return el;\n  }\n  onRemove() {\n    this.deck = undefined;\n    this.element = undefined;\n  }\n  setProps() {}\n  onViewportChange(viewport) {\n    if (this.isVisible && viewport.id === this.lastViewport?.id && viewport !== this.lastViewport) {\n      // Camera has moved, clear tooltip\n      this.setTooltip(null);\n    }\n  }\n  onHover(info) {\n    const {\n      deck\n    } = this;\n    const getTooltip = deck && deck.props.getTooltip;\n    if (!getTooltip) {\n      return;\n    }\n    const displayInfo = getTooltip(info);\n    this.lastViewport = info.viewport;\n    this.setTooltip(displayInfo, info.x, info.y);\n  }\n  setTooltip(displayInfo, x, y) {\n    const el = this.element;\n    if (!el) {\n      return;\n    }\n    if (typeof displayInfo === 'string') {\n      el.innerText = displayInfo;\n    } else if (!displayInfo) {\n      this.isVisible = false;\n      el.style.display = 'none';\n      return;\n    } else {\n      if (displayInfo.text) {\n        el.innerText = displayInfo.text;\n      }\n      if (displayInfo.html) {\n        el.innerHTML = displayInfo.html;\n      }\n      if (displayInfo.className) {\n        el.className = displayInfo.className;\n      }\n    }\n    this.isVisible = true;\n    el.style.display = 'block';\n    el.style.transform = `translate(${x}px, ${y}px)`;\n    if (displayInfo && typeof displayInfo === 'object' && 'style' in displayInfo) {\n      Object.assign(el.style, displayInfo.style);\n    }\n  }\n}\n//# sourceMappingURL=tooltip.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}