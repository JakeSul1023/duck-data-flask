{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\n// HELPER ENCODERS\nimport { assert } from '@loaders.gl/loader-utils';\nexport function encode3DTileHeader(tile, dataView, byteOffset) {\n  const HEADER_SIZE = 12;\n  if (!dataView) {\n    return byteOffset + HEADER_SIZE;\n  }\n  const {\n    magic,\n    version = 1,\n    byteLength = 12\n  } = tile;\n  assert(Array.isArray(magic) && Number.isFinite(version) && Number.isFinite(byteLength));\n  dataView.setUint8(byteOffset + 0, magic[0]);\n  dataView.setUint8(byteOffset + 1, magic[1]);\n  dataView.setUint8(byteOffset + 2, magic[2]);\n  dataView.setUint8(byteOffset + 3, magic[3]);\n  dataView.setUint32(byteOffset + 4, version, true); // version\n  dataView.setUint32(byteOffset + 8, byteLength, true); // byteLength\n  byteOffset += HEADER_SIZE;\n  return byteOffset;\n}\n// Bytelength is sometimes only known at the end of writing a tile\nexport function encode3DTileByteLength(dataView, byteOffsetTileStart, byteLength) {\n  if (!dataView) {\n    return;\n  }\n  dataView.setUint32(byteOffsetTileStart + 8, byteLength, true); // byteLength\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}