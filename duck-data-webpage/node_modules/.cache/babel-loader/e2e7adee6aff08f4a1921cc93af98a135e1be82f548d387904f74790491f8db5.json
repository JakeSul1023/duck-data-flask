{"ast":null,"code":"/**\n * calculate the absolute distance between two points\n * @returns distance\n */\nexport function getPointDistance(p1, p2) {\n  const x = p2.x - p1.x;\n  const y = p2.y - p1.y;\n  return Math.sqrt(x * x + y * y);\n}\n/**\n * calculate the absolute distance between two pointer events\n * @returns distance\n */\nexport function getEventDistance(p1, p2) {\n  const x = p2.clientX - p1.clientX;\n  const y = p2.clientY - p1.clientY;\n  return Math.sqrt(x * x + y * y);\n}","map":{"version":3,"names":["getPointDistance","p1","p2","x","y","Math","sqrt","getEventDistance","clientX","clientY"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\mjolnir.js\\src\\hammerjs\\input\\get-distance.ts"],"sourcesContent":["import type {Point, PointerEventLike} from './types';\n\n/**\n * calculate the absolute distance between two points\n * @returns distance\n */\nexport function getPointDistance(p1: Point, p2: Point): number {\n  const x = p2.x - p1.x;\n  const y = p2.y - p1.y;\n  return Math.sqrt(x * x + y * y);\n}\n\n/**\n * calculate the absolute distance between two pointer events\n * @returns distance\n */\nexport function getEventDistance(p1: PointerEventLike, p2: PointerEventLike): number {\n  const x = p2.clientX - p1.clientX;\n  const y = p2.clientY - p1.clientY;\n  return Math.sqrt(x * x + y * y);\n}\n"],"mappings":"AAEA;;;;AAIA,OAAM,SAAUA,gBAAgBA,CAACC,EAAS,EAAEC,EAAS;EACnD,MAAMC,CAAC,GAAGD,EAAE,CAACC,CAAC,GAAGF,EAAE,CAACE,CAAC;EACrB,MAAMC,CAAC,GAAGF,EAAE,CAACE,CAAC,GAAGH,EAAE,CAACG,CAAC;EACrB,OAAOC,IAAI,CAACC,IAAI,CAACH,CAAC,GAAGA,CAAC,GAAGC,CAAC,GAAGA,CAAC,CAAC;AACjC;AAEA;;;;AAIA,OAAM,SAAUG,gBAAgBA,CAACN,EAAoB,EAAEC,EAAoB;EACzE,MAAMC,CAAC,GAAGD,EAAE,CAACM,OAAO,GAAGP,EAAE,CAACO,OAAO;EACjC,MAAMJ,CAAC,GAAGF,EAAE,CAACO,OAAO,GAAGR,EAAE,CAACQ,OAAO;EACjC,OAAOJ,IAAI,CAACC,IAAI,CAACH,CAAC,GAAGA,CAAC,GAAGC,CAAC,GAAGA,CAAC,CAAC;AACjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}