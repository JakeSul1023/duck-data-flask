{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT AND Apache-2.0\n// Copyright vis.gl contributors\nimport { parse3DTileHeaderSync } from \"./helpers/parse-3d-tile-header.js\";\n// eslint-disable-next-line max-params\nexport async function parseComposite3DTile(tile, arrayBuffer, byteOffset, options, context, parse3DTile) {\n  byteOffset = parse3DTileHeaderSync(tile, arrayBuffer, byteOffset);\n  const view = new DataView(arrayBuffer);\n  // Extract number of tiles\n  tile.tilesLength = view.getUint32(byteOffset, true);\n  byteOffset += 4;\n  // extract each tile from the byte stream\n  tile.tiles = [];\n  while (tile.tiles.length < tile.tilesLength && (tile.byteLength || 0) - byteOffset > 12) {\n    const subtile = {\n      shape: 'tile3d'\n    };\n    tile.tiles.push(subtile);\n    byteOffset = await parse3DTile(arrayBuffer, byteOffset, options, context, subtile);\n    // TODO - do we need to add any padding in between tiles?\n  }\n  return byteOffset;\n}","map":{"version":3,"names":["parse3DTileHeaderSync","parseComposite3DTile","tile","arrayBuffer","byteOffset","options","context","parse3DTile","view","DataView","tilesLength","getUint32","tiles","length","byteLength","subtile","shape","push"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/3d-tiles/dist/lib/parsers/parse-3d-tile-composite.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT AND Apache-2.0\n// Copyright vis.gl contributors\nimport { parse3DTileHeaderSync } from \"./helpers/parse-3d-tile-header.js\";\n// eslint-disable-next-line max-params\nexport async function parseComposite3DTile(tile, arrayBuffer, byteOffset, options, context, parse3DTile) {\n    byteOffset = parse3DTileHeaderSync(tile, arrayBuffer, byteOffset);\n    const view = new DataView(arrayBuffer);\n    // Extract number of tiles\n    tile.tilesLength = view.getUint32(byteOffset, true);\n    byteOffset += 4;\n    // extract each tile from the byte stream\n    tile.tiles = [];\n    while (tile.tiles.length < tile.tilesLength && (tile.byteLength || 0) - byteOffset > 12) {\n        const subtile = { shape: 'tile3d' };\n        tile.tiles.push(subtile);\n        byteOffset = await parse3DTile(arrayBuffer, byteOffset, options, context, subtile);\n        // TODO - do we need to add any padding in between tiles?\n    }\n    return byteOffset;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,qBAAqB,QAAQ,mCAAmC;AACzE;AACA,OAAO,eAAeC,oBAAoBA,CAACC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAE;EACrGH,UAAU,GAAGJ,qBAAqB,CAACE,IAAI,EAAEC,WAAW,EAAEC,UAAU,CAAC;EACjE,MAAMI,IAAI,GAAG,IAAIC,QAAQ,CAACN,WAAW,CAAC;EACtC;EACAD,IAAI,CAACQ,WAAW,GAAGF,IAAI,CAACG,SAAS,CAACP,UAAU,EAAE,IAAI,CAAC;EACnDA,UAAU,IAAI,CAAC;EACf;EACAF,IAAI,CAACU,KAAK,GAAG,EAAE;EACf,OAAOV,IAAI,CAACU,KAAK,CAACC,MAAM,GAAGX,IAAI,CAACQ,WAAW,IAAI,CAACR,IAAI,CAACY,UAAU,IAAI,CAAC,IAAIV,UAAU,GAAG,EAAE,EAAE;IACrF,MAAMW,OAAO,GAAG;MAAEC,KAAK,EAAE;IAAS,CAAC;IACnCd,IAAI,CAACU,KAAK,CAACK,IAAI,CAACF,OAAO,CAAC;IACxBX,UAAU,GAAG,MAAMG,WAAW,CAACJ,WAAW,EAAEC,UAAU,EAAEC,OAAO,EAAEC,OAAO,EAAES,OAAO,CAAC;IAClF;EACJ;EACA,OAAOX,UAAU;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}