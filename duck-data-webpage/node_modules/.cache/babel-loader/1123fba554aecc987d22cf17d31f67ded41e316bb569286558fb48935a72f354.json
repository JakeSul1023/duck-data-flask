{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst uniformBlock = /* glsl */`\\\nuniform screenGridUniforms {\n  vec2 cellSizeClipspace;\n  vec2 gridSizeClipspace;\n  vec2 colorDomain;\n} screenGrid;\n`;\nexport const screenGridUniforms = {\n  name: 'screenGrid',\n  vs: uniformBlock,\n  uniformTypes: {\n    cellSizeClipspace: 'vec2<f32>',\n    gridSizeClipspace: 'vec2<f32>',\n    colorDomain: 'vec2<f32>'\n  }\n};","map":{"version":3,"names":["uniformBlock","screenGridUniforms","name","vs","uniformTypes","cellSizeClipspace","gridSizeClipspace","colorDomain"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\aggregation-layers\\src\\screen-grid-layer\\screen-grid-layer-uniforms.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Texture} from '@luma.gl/core';\nimport type {ShaderModule} from '@luma.gl/shadertools';\n\nconst uniformBlock = /* glsl */ `\\\nuniform screenGridUniforms {\n  vec2 cellSizeClipspace;\n  vec2 gridSizeClipspace;\n  vec2 colorDomain;\n} screenGrid;\n`;\n\nexport type ScreenGridProps = {\n  cellSizeClipspace: [number, number];\n  gridSizeClipspace: [number, number];\n  colorDomain: [number, number];\n  colorRange: Texture;\n};\n\nexport const screenGridUniforms = {\n  name: 'screenGrid',\n  vs: uniformBlock,\n  uniformTypes: {\n    cellSizeClipspace: 'vec2<f32>',\n    gridSizeClipspace: 'vec2<f32>',\n    colorDomain: 'vec2<f32>'\n  }\n} as const satisfies ShaderModule<ScreenGridProps>;\n"],"mappings":"AAAA;AACA;AACA;AAKA,MAAMA,YAAY,GAAG,UAAW;;;;;;CAM/B;AASD,OAAO,MAAMC,kBAAkB,GAAG;EAChCC,IAAI,EAAE,YAAY;EAClBC,EAAE,EAAEH,YAAY;EAChBI,YAAY,EAAE;IACZC,iBAAiB,EAAE,WAAW;IAC9BC,iBAAiB,EAAE,WAAW;IAC9BC,WAAW,EAAE;;CAEiC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}