{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT license\n// Copyright (c) vis.gl contributors\nimport { parseFromContext } from '@loaders.gl/loader-utils';\nimport { _getMemoryUsageGLTF, GLTFLoader, postProcessGLTF } from '@loaders.gl/gltf';\nexport async function parseGltf3DTile(tile, arrayBuffer, options, context) {\n  // Set flags\n  // glTF models need to be rotated from Y to Z up\n  // https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#y-up-to-z-up\n  tile.rotateYtoZ = true;\n  // Save gltf up axis\n  tile.gltfUpAxis = options?.['3d-tiles']?.assetGltfUpAxis ? options['3d-tiles'].assetGltfUpAxis : 'Y';\n  if (options?.['3d-tiles']?.loadGLTF) {\n    if (!context) {\n      return arrayBuffer.byteLength;\n    }\n    const gltfWithBuffers = await parseFromContext(arrayBuffer, GLTFLoader, options, context);\n    tile.gltf = postProcessGLTF(gltfWithBuffers);\n    tile.gpuMemoryUsageInBytes = _getMemoryUsageGLTF(tile.gltf);\n  } else {\n    tile.gltfArrayBuffer = arrayBuffer;\n  }\n  return arrayBuffer.byteLength;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}