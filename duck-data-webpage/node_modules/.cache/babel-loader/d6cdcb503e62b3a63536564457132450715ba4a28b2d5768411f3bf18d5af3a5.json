{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { parseTileJSON } from \"./lib/parse-tilejson.js\";\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof \"4.3.2\" !== 'undefined' ? \"4.3.2\" : 'latest';\n/**\n * Loader for TileJSON metadata\n */\nexport const TileJSONLoader = {\n  dataType: null,\n  batchType: null,\n  name: 'TileJSON',\n  id: 'tilejson',\n  module: 'pmtiles',\n  version: VERSION,\n  worker: true,\n  extensions: ['json'],\n  mimeTypes: ['application/json'],\n  text: true,\n  options: {\n    tilejson: {\n      maxValues: undefined\n    }\n  },\n  parse: async (arrayBuffer, options) => {\n    const jsonString = new TextDecoder().decode(arrayBuffer);\n    const json = JSON.parse(jsonString);\n    const tilejsonOptions = {\n      ...TileJSONLoader.options.tilejson,\n      ...options?.tilejson\n    };\n    return parseTileJSON(json, tilejsonOptions);\n  },\n  parseTextSync: (text, options) => {\n    const json = JSON.parse(text);\n    const tilejsonOptions = {\n      ...TileJSONLoader.options.tilejson,\n      ...options?.tilejson\n    };\n    return parseTileJSON(json, tilejsonOptions);\n  }\n};","map":{"version":3,"names":["parseTileJSON","VERSION","TileJSONLoader","dataType","batchType","name","id","module","version","worker","extensions","mimeTypes","text","options","tilejson","maxValues","undefined","parse","arrayBuffer","jsonString","TextDecoder","decode","json","JSON","tilejsonOptions","parseTextSync"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/mvt/dist/tilejson-loader.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { parseTileJSON } from \"./lib/parse-tilejson.js\";\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof \"4.3.2\" !== 'undefined' ? \"4.3.2\" : 'latest';\n/**\n * Loader for TileJSON metadata\n */\nexport const TileJSONLoader = {\n    dataType: null,\n    batchType: null,\n    name: 'TileJSON',\n    id: 'tilejson',\n    module: 'pmtiles',\n    version: VERSION,\n    worker: true,\n    extensions: ['json'],\n    mimeTypes: ['application/json'],\n    text: true,\n    options: {\n        tilejson: {\n            maxValues: undefined\n        }\n    },\n    parse: async (arrayBuffer, options) => {\n        const jsonString = new TextDecoder().decode(arrayBuffer);\n        const json = JSON.parse(jsonString);\n        const tilejsonOptions = { ...TileJSONLoader.options.tilejson, ...options?.tilejson };\n        return parseTileJSON(json, tilejsonOptions);\n    },\n    parseTextSync: (text, options) => {\n        const json = JSON.parse(text);\n        const tilejsonOptions = { ...TileJSONLoader.options.tilejson, ...options?.tilejson };\n        return parseTileJSON(json, tilejsonOptions);\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,aAAa,QAAQ,yBAAyB;AACvD;AACA;AACA,MAAMC,OAAO,GAAG,OAAO,OAAO,KAAK,WAAW,GAAG,OAAO,GAAG,QAAQ;AACnE;AACA;AACA;AACA,OAAO,MAAMC,cAAc,GAAG;EAC1BC,QAAQ,EAAE,IAAI;EACdC,SAAS,EAAE,IAAI;EACfC,IAAI,EAAE,UAAU;EAChBC,EAAE,EAAE,UAAU;EACdC,MAAM,EAAE,SAAS;EACjBC,OAAO,EAAEP,OAAO;EAChBQ,MAAM,EAAE,IAAI;EACZC,UAAU,EAAE,CAAC,MAAM,CAAC;EACpBC,SAAS,EAAE,CAAC,kBAAkB,CAAC;EAC/BC,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE;IACLC,QAAQ,EAAE;MACNC,SAAS,EAAEC;IACf;EACJ,CAAC;EACDC,KAAK,EAAE,MAAAA,CAAOC,WAAW,EAAEL,OAAO,KAAK;IACnC,MAAMM,UAAU,GAAG,IAAIC,WAAW,CAAC,CAAC,CAACC,MAAM,CAACH,WAAW,CAAC;IACxD,MAAMI,IAAI,GAAGC,IAAI,CAACN,KAAK,CAACE,UAAU,CAAC;IACnC,MAAMK,eAAe,GAAG;MAAE,GAAGtB,cAAc,CAACW,OAAO,CAACC,QAAQ;MAAE,GAAGD,OAAO,EAAEC;IAAS,CAAC;IACpF,OAAOd,aAAa,CAACsB,IAAI,EAAEE,eAAe,CAAC;EAC/C,CAAC;EACDC,aAAa,EAAEA,CAACb,IAAI,EAAEC,OAAO,KAAK;IAC9B,MAAMS,IAAI,GAAGC,IAAI,CAACN,KAAK,CAACL,IAAI,CAAC;IAC7B,MAAMY,eAAe,GAAG;MAAE,GAAGtB,cAAc,CAACW,OAAO,CAACC,QAAQ;MAAE,GAAGD,OAAO,EAAEC;IAAS,CAAC;IACpF,OAAOd,aAAa,CAACsB,IAAI,EAAEE,eAAe,CAAC;EAC/C;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}