{"ast":null,"code":"import { encodeGLBSync } from \"./encode-glb.js\";\n/**\n * Encode the full glTF file as a binary GLB file\n * Returns an ArrayBuffer that represents the complete GLB image that can be saved to file\n *\n * @todo - Does not support encoding to non-GLB versions of glTF format. Other formats\n * - Encode as a textual JSON file with binary data in base64 data URLs.\n * - Encode as a JSON with all images (and buffers?) in separate binary files\n *\n * glb-file-format-specification\n * @see https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#\n *\n * @param gltf\n * @param arrayBuffer\n * @param byteOffset\n * @param options\n * @returns\n */\nexport function encodeGLTFSync(gltf, arrayBuffer, byteOffset, options) {\n  validateGltf(gltf);\n  // TODO: Copy buffers to binary\n  return encodeGLBSync(gltf, arrayBuffer, byteOffset, options);\n}\nfunction validateGltf(gltf) {\n  if (gltf.buffers && gltf.buffers.length > 1) {\n    throw new Error('encodeGLTF: multiple buffers not yet implemented');\n  }\n}","map":{"version":3,"names":["encodeGLBSync","encodeGLTFSync","gltf","arrayBuffer","byteOffset","options","validateGltf","buffers","length","Error"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/gltf/dist/lib/encoders/encode-gltf.js"],"sourcesContent":["import { encodeGLBSync } from \"./encode-glb.js\";\n/**\n * Encode the full glTF file as a binary GLB file\n * Returns an ArrayBuffer that represents the complete GLB image that can be saved to file\n *\n * @todo - Does not support encoding to non-GLB versions of glTF format. Other formats\n * - Encode as a textual JSON file with binary data in base64 data URLs.\n * - Encode as a JSON with all images (and buffers?) in separate binary files\n *\n * glb-file-format-specification\n * @see https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#\n *\n * @param gltf\n * @param arrayBuffer\n * @param byteOffset\n * @param options\n * @returns\n */\nexport function encodeGLTFSync(gltf, arrayBuffer, byteOffset, options) {\n    validateGltf(gltf);\n    // TODO: Copy buffers to binary\n    return encodeGLBSync(gltf, arrayBuffer, byteOffset, options);\n}\nfunction validateGltf(gltf) {\n    if (gltf.buffers && gltf.buffers.length > 1) {\n        throw new Error('encodeGLTF: multiple buffers not yet implemented');\n    }\n}\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,iBAAiB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,OAAO,EAAE;EACnEC,YAAY,CAACJ,IAAI,CAAC;EAClB;EACA,OAAOF,aAAa,CAACE,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,OAAO,CAAC;AAChE;AACA,SAASC,YAAYA,CAACJ,IAAI,EAAE;EACxB,IAAIA,IAAI,CAACK,OAAO,IAAIL,IAAI,CAACK,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;IACzC,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;EACvE;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}