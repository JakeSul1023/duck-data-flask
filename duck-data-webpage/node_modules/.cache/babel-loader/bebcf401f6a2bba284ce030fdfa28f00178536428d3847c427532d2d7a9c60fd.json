{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// This file is derived from the tar-js code base under MIT license\n// See https://github.com/beatgammit/tar-js/blob/master/LICENSE\n/*\n * tar-js\n * MIT (c) 2011 T. Jameson Little\n */\n/* eslint-disable */\nimport * as utils from \"./utils.js\";\n/*\nstruct posix_header {             // byte offset\n    char name[100];               //   0\n    char mode[8];                 // 100\n    char uid[8];                  // 108\n    char gid[8];                  // 116\n    char size[12];                // 124\n    char mtime[12];               // 136\n    char chksum[8];               // 148\n    char typeflag;                // 156\n    char linkname[100];           // 157\n    char magic[6];                // 257\n    char version[2];              // 263\n    char uname[32];               // 265\n    char gname[32];               // 297\n    char devmajor[8];             // 329\n    char devminor[8];             // 337\n    char prefix[155];             // 345\n                                  // 500\n};\n*/\nconst structure = {\n  fileName: 100,\n  fileMode: 8,\n  uid: 8,\n  gid: 8,\n  fileSize: 12,\n  mtime: 12,\n  checksum: 8,\n  type: 1,\n  linkName: 100,\n  ustar: 8,\n  owner: 32,\n  group: 32,\n  majorNumber: 8,\n  minorNumber: 8,\n  filenamePrefix: 155,\n  padding: 12\n};\n/**\n * Getting the header\n * @param data\n * @param [cb]\n * @returns {Uint8Array} | Array\n */\nexport function format(data, cb) {\n  const buffer = utils.clean(512);\n  let offset = 0;\n  Object.entries(structure).forEach(_ref => {\n    let [field, length] = _ref;\n    const str = data[field] || '';\n    let i;\n    let fieldLength;\n    for (i = 0, fieldLength = str.length; i < fieldLength; i += 1) {\n      buffer[offset] = str.charCodeAt(i);\n      offset += 1;\n    }\n    // space it out with nulls\n    offset += length - i;\n  });\n  if (typeof cb === 'function') {\n    return cb(buffer, offset);\n  }\n  return buffer;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}