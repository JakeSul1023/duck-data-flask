{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { XMLLoader } from '@loaders.gl/xml';\n/**\n * Parses a typed data structure from raw XML for `GetFeatureInfo` response\n * @note Error handlings is fairly weak\n */\nexport function parseWMSFeatureInfo(text, options) {\n  const parsedXML = XMLLoader.parseTextSync?.(text, options);\n  const xmlFeatureInfo = parsedXML.FeatureInfoResponse?.FIELDS || [];\n  const xmlFeatures = Array.isArray(xmlFeatureInfo) ? xmlFeatureInfo : [xmlFeatureInfo];\n  return {\n    features: xmlFeatures.map(xmlFeature => extractFeature(xmlFeature))\n  };\n}\nfunction extractFeature(xmlFeature) {\n  const xmlFields = xmlFeature || {};\n  // TODO - not correct\n  return {\n    attributes: xmlFields,\n    type: '',\n    bounds: {\n      bottom: 0,\n      top: 0,\n      left: 0,\n      right: 0\n    }\n  };\n}","map":{"version":3,"names":["XMLLoader","parseWMSFeatureInfo","text","options","parsedXML","parseTextSync","xmlFeatureInfo","FeatureInfoResponse","FIELDS","xmlFeatures","Array","isArray","features","map","xmlFeature","extractFeature","xmlFields","attributes","type","bounds","bottom","top","left","right"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/wms/dist/lib/parsers/wms/parse-wms-features.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { XMLLoader } from '@loaders.gl/xml';\n/**\n * Parses a typed data structure from raw XML for `GetFeatureInfo` response\n * @note Error handlings is fairly weak\n */\nexport function parseWMSFeatureInfo(text, options) {\n    const parsedXML = XMLLoader.parseTextSync?.(text, options);\n    const xmlFeatureInfo = parsedXML.FeatureInfoResponse?.FIELDS || [];\n    const xmlFeatures = Array.isArray(xmlFeatureInfo) ? xmlFeatureInfo : [xmlFeatureInfo];\n    return {\n        features: xmlFeatures.map((xmlFeature) => extractFeature(xmlFeature))\n    };\n}\nfunction extractFeature(xmlFeature) {\n    const xmlFields = xmlFeature || {};\n    // TODO - not correct\n    return {\n        attributes: xmlFields,\n        type: '',\n        bounds: { bottom: 0, top: 0, left: 0, right: 0 }\n    };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C;AACA;AACA;AACA;AACA,OAAO,SAASC,mBAAmBA,CAACC,IAAI,EAAEC,OAAO,EAAE;EAC/C,MAAMC,SAAS,GAAGJ,SAAS,CAACK,aAAa,GAAGH,IAAI,EAAEC,OAAO,CAAC;EAC1D,MAAMG,cAAc,GAAGF,SAAS,CAACG,mBAAmB,EAAEC,MAAM,IAAI,EAAE;EAClE,MAAMC,WAAW,GAAGC,KAAK,CAACC,OAAO,CAACL,cAAc,CAAC,GAAGA,cAAc,GAAG,CAACA,cAAc,CAAC;EACrF,OAAO;IACHM,QAAQ,EAAEH,WAAW,CAACI,GAAG,CAAEC,UAAU,IAAKC,cAAc,CAACD,UAAU,CAAC;EACxE,CAAC;AACL;AACA,SAASC,cAAcA,CAACD,UAAU,EAAE;EAChC,MAAME,SAAS,GAAGF,UAAU,IAAI,CAAC,CAAC;EAClC;EACA,OAAO;IACHG,UAAU,EAAED,SAAS;IACrBE,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE;MAAEC,MAAM,EAAE,CAAC;MAAEC,GAAG,EAAE,CAAC;MAAEC,IAAI,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAE;EACnD,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}