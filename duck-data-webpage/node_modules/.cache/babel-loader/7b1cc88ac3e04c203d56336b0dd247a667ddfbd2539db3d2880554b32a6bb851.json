{"ast":null,"code":"import { VERSION } from \"./lib/utils/version.js\";\nimport { encodeGLTFSync } from \"./lib/encoders/encode-gltf.js\";\nimport { encodeExtensions } from \"./lib/api/gltf-extensions.js\";\n/**\n * GLTF exporter\n */\nexport const GLTFWriter = {\n  dataType: null,\n  batchType: null,\n  name: 'glTF',\n  id: 'gltf',\n  module: 'gltf',\n  version: VERSION,\n  extensions: ['glb'],\n  // We only support encoding to binary GLB, not to JSON GLTF\n  mimeTypes: ['model/gltf-binary'],\n  // 'model/gltf+json',\n  binary: true,\n  options: {\n    gltf: {}\n  },\n  encode: async (gltf, options = {}) => encodeSync(gltf, options),\n  encodeSync\n};\nfunction encodeSync(gltf, options = {}) {\n  const {\n    byteOffset = 0\n  } = options;\n  const gltfToEncode = encodeExtensions(gltf);\n  // Calculate length, then create arraybuffer and encode\n  const byteLength = encodeGLTFSync(gltfToEncode, null, byteOffset, options);\n  const arrayBuffer = new ArrayBuffer(byteLength);\n  const dataView = new DataView(arrayBuffer);\n  encodeGLTFSync(gltfToEncode, dataView, byteOffset, options);\n  return arrayBuffer;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}