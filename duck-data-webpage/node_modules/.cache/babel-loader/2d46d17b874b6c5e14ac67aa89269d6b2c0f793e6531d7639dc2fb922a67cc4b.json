{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { WMSSource } from \"../../services/ogc/wms-service.js\";\nimport { ArcGISImageServerSource } from \"../../services/arcgis/arcgis-image-server.js\";\nconst SOURCES = [WMSSource, ArcGISImageServerSource];\n/**\n * Creates an image source\n * If type is not supplied, will try to automatically detect the the\n * @param url URL to the image source\n * @param type type of source. if not known, set to 'auto'\n * @returns an ImageSource instance\n *\n * @deprecated Use createDataSource from @loaders.gl/core\n */\nexport function createImageSource(props, sources = SOURCES) {\n  const {\n    type = 'auto'\n  } = props;\n  const source = type === 'auto' ? guessSourceType(props.url, sources) : getSourceOfType(type, sources);\n  if (!source) {\n    throw new Error('Not a valid image source type');\n  }\n  return source.createDataSource(props.url, props);\n}\n/** Guess service type from URL */\nfunction getSourceOfType(type, sources) {\n  // if (type === 'template') {\n  //   return ImageSource;\n  // }\n  for (const source of sources) {\n    if (source.type === type) {\n      return source;\n    }\n  }\n  return null;\n}\n/** Guess source type from URL */\nfunction guessSourceType(url, sources) {\n  for (const source of sources) {\n    if (source.testURL && source.testURL(url)) {\n      return source;\n    }\n  }\n  return null;\n}","map":{"version":3,"names":["WMSSource","ArcGISImageServerSource","SOURCES","createImageSource","props","sources","type","source","guessSourceType","url","getSourceOfType","Error","createDataSource","testURL"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/wms/dist/lib/deprecated/create-image-source.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { WMSSource } from \"../../services/ogc/wms-service.js\";\nimport { ArcGISImageServerSource } from \"../../services/arcgis/arcgis-image-server.js\";\nconst SOURCES = [WMSSource, ArcGISImageServerSource];\n/**\n * Creates an image source\n * If type is not supplied, will try to automatically detect the the\n * @param url URL to the image source\n * @param type type of source. if not known, set to 'auto'\n * @returns an ImageSource instance\n *\n * @deprecated Use createDataSource from @loaders.gl/core\n */\nexport function createImageSource(props, sources = SOURCES) {\n    const { type = 'auto' } = props;\n    const source = type === 'auto' ? guessSourceType(props.url, sources) : getSourceOfType(type, sources);\n    if (!source) {\n        throw new Error('Not a valid image source type');\n    }\n    return source.createDataSource(props.url, props);\n}\n/** Guess service type from URL */\nfunction getSourceOfType(type, sources) {\n    // if (type === 'template') {\n    //   return ImageSource;\n    // }\n    for (const source of sources) {\n        if (source.type === type) {\n            return source;\n        }\n    }\n    return null;\n}\n/** Guess source type from URL */\nfunction guessSourceType(url, sources) {\n    for (const source of sources) {\n        if (source.testURL && source.testURL(url)) {\n            return source;\n        }\n    }\n    return null;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,mCAAmC;AAC7D,SAASC,uBAAuB,QAAQ,8CAA8C;AACtF,MAAMC,OAAO,GAAG,CAACF,SAAS,EAAEC,uBAAuB,CAAC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,iBAAiBA,CAACC,KAAK,EAAEC,OAAO,GAAGH,OAAO,EAAE;EACxD,MAAM;IAAEI,IAAI,GAAG;EAAO,CAAC,GAAGF,KAAK;EAC/B,MAAMG,MAAM,GAAGD,IAAI,KAAK,MAAM,GAAGE,eAAe,CAACJ,KAAK,CAACK,GAAG,EAAEJ,OAAO,CAAC,GAAGK,eAAe,CAACJ,IAAI,EAAED,OAAO,CAAC;EACrG,IAAI,CAACE,MAAM,EAAE;IACT,MAAM,IAAII,KAAK,CAAC,+BAA+B,CAAC;EACpD;EACA,OAAOJ,MAAM,CAACK,gBAAgB,CAACR,KAAK,CAACK,GAAG,EAAEL,KAAK,CAAC;AACpD;AACA;AACA,SAASM,eAAeA,CAACJ,IAAI,EAAED,OAAO,EAAE;EACpC;EACA;EACA;EACA,KAAK,MAAME,MAAM,IAAIF,OAAO,EAAE;IAC1B,IAAIE,MAAM,CAACD,IAAI,KAAKA,IAAI,EAAE;MACtB,OAAOC,MAAM;IACjB;EACJ;EACA,OAAO,IAAI;AACf;AACA;AACA,SAASC,eAAeA,CAACC,GAAG,EAAEJ,OAAO,EAAE;EACnC,KAAK,MAAME,MAAM,IAAIF,OAAO,EAAE;IAC1B,IAAIE,MAAM,CAACM,OAAO,IAAIN,MAAM,CAACM,OAAO,CAACJ,GAAG,CAAC,EAAE;MACvC,OAAOF,MAAM;IACjB;EACJ;EACA,OAAO,IAAI;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}