{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// LAYERS\nexport function getSchemaFromTileJSONLayer(layer) {\n  const fields = [];\n  if (layer.fields) {\n    for (const field of layer.fields) {\n      fields.push({\n        name: field.name,\n        type: getDataTypeFromTileJSONField(field),\n        metadata: getMetadataFromTileJSONField(field)\n      });\n    }\n  }\n  return {\n    metadata: getMetadataFromTileJSONLayer(layer),\n    fields\n  };\n}\nfunction getMetadataFromTileJSONLayer(layer) {\n  const metadata = {};\n  for (const [key, value] of Object.entries(layer)) {\n    if (key !== 'fields' && value) {\n      metadata[key] = JSON.stringify(value);\n    }\n  }\n  return metadata;\n}\n// FIELDS\nfunction getDataTypeFromTileJSONField(field) {\n  switch (field.type.toLowerCase()) {\n    case 'float32':\n      return 'float32';\n    case 'number':\n    case 'float64':\n      return 'float64';\n    case 'string':\n    case 'utf8':\n      return 'utf8';\n    case 'boolean':\n      return 'bool';\n    default:\n      return 'null';\n  }\n}\nfunction getMetadataFromTileJSONField(field) {\n  const metadata = {};\n  for (const [key, value] of Object.entries(field)) {\n    if (key !== 'name' && value) {\n      metadata[key] = JSON.stringify(value);\n    }\n  }\n  return metadata;\n}","map":{"version":3,"names":["getSchemaFromTileJSONLayer","layer","fields","field","push","name","type","getDataTypeFromTileJSONField","metadata","getMetadataFromTileJSONField","getMetadataFromTileJSONLayer","key","value","Object","entries","JSON","stringify","toLowerCase"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/mvt/dist/lib/get-schemas-from-tilejson.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// LAYERS\nexport function getSchemaFromTileJSONLayer(layer) {\n    const fields = [];\n    if (layer.fields) {\n        for (const field of layer.fields) {\n            fields.push({\n                name: field.name,\n                type: getDataTypeFromTileJSONField(field),\n                metadata: getMetadataFromTileJSONField(field)\n            });\n        }\n    }\n    return {\n        metadata: getMetadataFromTileJSONLayer(layer),\n        fields\n    };\n}\nfunction getMetadataFromTileJSONLayer(layer) {\n    const metadata = {};\n    for (const [key, value] of Object.entries(layer)) {\n        if (key !== 'fields' && value) {\n            metadata[key] = JSON.stringify(value);\n        }\n    }\n    return metadata;\n}\n// FIELDS\nfunction getDataTypeFromTileJSONField(field) {\n    switch (field.type.toLowerCase()) {\n        case 'float32':\n            return 'float32';\n        case 'number':\n        case 'float64':\n            return 'float64';\n        case 'string':\n        case 'utf8':\n            return 'utf8';\n        case 'boolean':\n            return 'bool';\n        default:\n            return 'null';\n    }\n}\nfunction getMetadataFromTileJSONField(field) {\n    const metadata = {};\n    for (const [key, value] of Object.entries(field)) {\n        if (key !== 'name' && value) {\n            metadata[key] = JSON.stringify(value);\n        }\n    }\n    return metadata;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,SAASA,0BAA0BA,CAACC,KAAK,EAAE;EAC9C,MAAMC,MAAM,GAAG,EAAE;EACjB,IAAID,KAAK,CAACC,MAAM,EAAE;IACd,KAAK,MAAMC,KAAK,IAAIF,KAAK,CAACC,MAAM,EAAE;MAC9BA,MAAM,CAACE,IAAI,CAAC;QACRC,IAAI,EAAEF,KAAK,CAACE,IAAI;QAChBC,IAAI,EAAEC,4BAA4B,CAACJ,KAAK,CAAC;QACzCK,QAAQ,EAAEC,4BAA4B,CAACN,KAAK;MAChD,CAAC,CAAC;IACN;EACJ;EACA,OAAO;IACHK,QAAQ,EAAEE,4BAA4B,CAACT,KAAK,CAAC;IAC7CC;EACJ,CAAC;AACL;AACA,SAASQ,4BAA4BA,CAACT,KAAK,EAAE;EACzC,MAAMO,QAAQ,GAAG,CAAC,CAAC;EACnB,KAAK,MAAM,CAACG,GAAG,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACb,KAAK,CAAC,EAAE;IAC9C,IAAIU,GAAG,KAAK,QAAQ,IAAIC,KAAK,EAAE;MAC3BJ,QAAQ,CAACG,GAAG,CAAC,GAAGI,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC;IACzC;EACJ;EACA,OAAOJ,QAAQ;AACnB;AACA;AACA,SAASD,4BAA4BA,CAACJ,KAAK,EAAE;EACzC,QAAQA,KAAK,CAACG,IAAI,CAACW,WAAW,CAAC,CAAC;IAC5B,KAAK,SAAS;MACV,OAAO,SAAS;IACpB,KAAK,QAAQ;IACb,KAAK,SAAS;MACV,OAAO,SAAS;IACpB,KAAK,QAAQ;IACb,KAAK,MAAM;MACP,OAAO,MAAM;IACjB,KAAK,SAAS;MACV,OAAO,MAAM;IACjB;MACI,OAAO,MAAM;EACrB;AACJ;AACA,SAASR,4BAA4BA,CAACN,KAAK,EAAE;EACzC,MAAMK,QAAQ,GAAG,CAAC,CAAC;EACnB,KAAK,MAAM,CAACG,GAAG,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACX,KAAK,CAAC,EAAE;IAC9C,IAAIQ,GAAG,KAAK,MAAM,IAAIC,KAAK,EAAE;MACzBJ,QAAQ,CAACG,GAAG,CAAC,GAAGI,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC;IACzC;EACJ;EACA,OAAOJ,QAAQ;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}