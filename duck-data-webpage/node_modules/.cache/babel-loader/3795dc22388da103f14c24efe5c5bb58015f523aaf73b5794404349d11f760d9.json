{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { projectPosition } from \"../../shaderlib/project/project-functions.js\";\nimport { COORDINATE_SYSTEM } from \"../../lib/constants.js\";\nconst DEFAULT_LIGHT_COLOR = [255, 255, 255];\nconst DEFAULT_LIGHT_INTENSITY = 1.0;\nconst DEFAULT_ATTENUATION = [1, 0, 0];\nconst DEFAULT_LIGHT_POSITION = [0.0, 0.0, 1.0];\nlet idCount = 0;\nexport class PointLight {\n  constructor(props = {}) {\n    this.type = 'point';\n    const {\n      color = DEFAULT_LIGHT_COLOR\n    } = props;\n    const {\n      intensity = DEFAULT_LIGHT_INTENSITY\n    } = props;\n    const {\n      position = DEFAULT_LIGHT_POSITION\n    } = props;\n    this.id = props.id || `point-${idCount++}`;\n    this.color = color;\n    this.intensity = intensity;\n    this.type = 'point';\n    this.position = position;\n    this.attenuation = getAttenuation(props);\n    this.projectedLight = {\n      ...this\n    };\n  }\n  getProjectedLight({\n    layer\n  }) {\n    const {\n      projectedLight\n    } = this;\n    const viewport = layer.context.viewport;\n    const {\n      coordinateSystem,\n      coordinateOrigin\n    } = layer.props;\n    const position = projectPosition(this.position, {\n      viewport,\n      coordinateSystem,\n      coordinateOrigin,\n      fromCoordinateSystem: viewport.isGeospatial ? COORDINATE_SYSTEM.LNGLAT : COORDINATE_SYSTEM.CARTESIAN,\n      fromCoordinateOrigin: [0, 0, 0]\n    });\n    projectedLight.color = this.color;\n    projectedLight.intensity = this.intensity;\n    projectedLight.position = position;\n    return projectedLight;\n  }\n}\nfunction getAttenuation(props) {\n  if (props.attenuation) {\n    return props.attenuation;\n  }\n  return DEFAULT_ATTENUATION;\n}","map":{"version":3,"names":["projectPosition","COORDINATE_SYSTEM","DEFAULT_LIGHT_COLOR","DEFAULT_LIGHT_INTENSITY","DEFAULT_ATTENUATION","DEFAULT_LIGHT_POSITION","idCount","PointLight","constructor","props","type","color","intensity","position","id","attenuation","getAttenuation","projectedLight","getProjectedLight","layer","viewport","context","coordinateSystem","coordinateOrigin","fromCoordinateSystem","isGeospatial","LNGLAT","CARTESIAN","fromCoordinateOrigin"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\core\\src\\effects\\lighting\\point-light.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {projectPosition} from '../../shaderlib/project/project-functions';\nimport {COORDINATE_SYSTEM} from '../../lib/constants';\n\nimport type Layer from '../../lib/layer';\n\nconst DEFAULT_LIGHT_COLOR = [255, 255, 255] as [number, number, number];\nconst DEFAULT_LIGHT_INTENSITY = 1.0;\nconst DEFAULT_ATTENUATION = [1, 0, 0] as [number, number, number];\nconst DEFAULT_LIGHT_POSITION = [0.0, 0.0, 1.0] as [number, number, number];\n\nlet idCount = 0;\n\nexport type PointLightOptions = {\n  id?: string;\n  /** Light color, [r, g, b] in the 0-255 range\n   * @default [255, 255, 255]\n   */\n  color?: [number, number, number];\n  /** Light intensity, higher number is brighter\n   * @default 1.0\n   */\n  intensity?: number;\n  /** Light position [x, y, z] in the common space\n   * @default [0.0, 0.0, 1.0]\n   */\n  position?: [number, number, number];\n  /** Light attenuation\n   * @default [1.0, 0.0, 0.0]\n   */\n  attenuation?: [number, number, number];\n};\n\nexport class PointLight {\n  id: string;\n  color: [number, number, number];\n  intensity: number;\n  type = 'point' as const;\n  position: [number, number, number];\n  attenuation: [number, number, number];\n\n  protected projectedLight: PointLight;\n\n  constructor(props: PointLightOptions = {}) {\n    const {color = DEFAULT_LIGHT_COLOR} = props;\n    const {intensity = DEFAULT_LIGHT_INTENSITY} = props;\n    const {position = DEFAULT_LIGHT_POSITION} = props;\n\n    this.id = props.id || `point-${idCount++}`;\n    this.color = color;\n    this.intensity = intensity;\n    this.type = 'point';\n    this.position = position;\n    this.attenuation = getAttenuation(props);\n    this.projectedLight = {...this};\n  }\n\n  getProjectedLight({layer}: {layer: Layer}): PointLight {\n    const {projectedLight} = this;\n    const viewport = layer.context.viewport;\n    const {coordinateSystem, coordinateOrigin} = layer.props;\n    const position = projectPosition(this.position, {\n      viewport,\n      coordinateSystem,\n      coordinateOrigin,\n      fromCoordinateSystem: viewport.isGeospatial\n        ? COORDINATE_SYSTEM.LNGLAT\n        : COORDINATE_SYSTEM.CARTESIAN,\n      fromCoordinateOrigin: [0, 0, 0]\n    });\n    projectedLight.color = this.color;\n    projectedLight.intensity = this.intensity;\n    projectedLight.position = position;\n    return projectedLight;\n  }\n}\n\nfunction getAttenuation(props: PointLightOptions): [number, number, number] {\n  if (props.attenuation) {\n    return props.attenuation;\n  }\n  return DEFAULT_ATTENUATION;\n}\n"],"mappings":"AAAA;AACA;AACA;AAEA,SAAQA,eAAe,QAAC;AACxB,SAAQC,iBAAiB,QAAC;AAI1B,MAAMC,mBAAmB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAA6B;AACvE,MAAMC,uBAAuB,GAAG,GAAG;AACnC,MAAMC,mBAAmB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAA6B;AACjE,MAAMC,sBAAsB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAA6B;AAE1E,IAAIC,OAAO,GAAG,CAAC;AAsBf,OAAM,MAAOC,UAAU;EAUrBC,YAAYC,KAAA,GAA2B,EAAE;IANzC,KAAAC,IAAI,GAAG,OAAgB;IAOrB,MAAM;MAACC,KAAK,GAAGT;IAAmB,CAAC,GAAGO,KAAK;IAC3C,MAAM;MAACG,SAAS,GAAGT;IAAuB,CAAC,GAAGM,KAAK;IACnD,MAAM;MAACI,QAAQ,GAAGR;IAAsB,CAAC,GAAGI,KAAK;IAEjD,IAAI,CAACK,EAAE,GAAGL,KAAK,CAACK,EAAE,IAAI,SAASR,OAAO,EAAE,EAAE;IAC1C,IAAI,CAACK,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACF,IAAI,GAAG,OAAO;IACnB,IAAI,CAACG,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACE,WAAW,GAAGC,cAAc,CAACP,KAAK,CAAC;IACxC,IAAI,CAACQ,cAAc,GAAG;MAAC,GAAG;IAAI,CAAC;EACjC;EAEAC,iBAAiBA,CAAC;IAACC;EAAK,CAAiB;IACvC,MAAM;MAACF;IAAc,CAAC,GAAG,IAAI;IAC7B,MAAMG,QAAQ,GAAGD,KAAK,CAACE,OAAO,CAACD,QAAQ;IACvC,MAAM;MAACE,gBAAgB;MAAEC;IAAgB,CAAC,GAAGJ,KAAK,CAACV,KAAK;IACxD,MAAMI,QAAQ,GAAGb,eAAe,CAAC,IAAI,CAACa,QAAQ,EAAE;MAC9CO,QAAQ;MACRE,gBAAgB;MAChBC,gBAAgB;MAChBC,oBAAoB,EAAEJ,QAAQ,CAACK,YAAY,GACvCxB,iBAAiB,CAACyB,MAAM,GACxBzB,iBAAiB,CAAC0B,SAAS;MAC/BC,oBAAoB,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;KAC/B,CAAC;IACFX,cAAc,CAACN,KAAK,GAAG,IAAI,CAACA,KAAK;IACjCM,cAAc,CAACL,SAAS,GAAG,IAAI,CAACA,SAAS;IACzCK,cAAc,CAACJ,QAAQ,GAAGA,QAAQ;IAClC,OAAOI,cAAc;EACvB;;AAGF,SAASD,cAAcA,CAACP,KAAwB;EAC9C,IAAIA,KAAK,CAACM,WAAW,EAAE;IACrB,OAAON,KAAK,CAACM,WAAW;EAC1B;EACA,OAAOX,mBAAmB;AAC5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}