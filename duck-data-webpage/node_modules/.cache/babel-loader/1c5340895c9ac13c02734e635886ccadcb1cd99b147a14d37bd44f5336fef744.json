{"ast":null,"code":"// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nimport { assert } from '@loaders.gl/loader-utils';\n/**\n * A wrapper around arrays so that the internal length of the array can be manually managed.\n *\n * @alias ManagedArray\n * @constructor\n * @private\n *\n * @param {Number} [length=0] The initial length of the array.\n */\nexport class ManagedArray {\n  _map = new Map();\n  _array;\n  _length;\n  constructor(length = 0) {\n    this._array = new Array(length);\n    this._length = length;\n  }\n  /**\n   * Gets or sets the length of the array.\n   * If the set length is greater than the length of the internal array, the internal array is resized.\n   *\n   * @memberof ManagedArray.prototype\n   * @type Number\n   */\n  get length() {\n    return this._length;\n  }\n  set length(length) {\n    this._length = length;\n    if (length > this._array.length) {\n      this._array.length = length;\n    }\n  }\n  /**\n   * Gets the internal array.\n   *\n   * @memberof ManagedArray.prototype\n   * @type Array\n   * @readonly\n   */\n  get values() {\n    return this._array;\n  }\n  /**\n   * Gets the element at an index.\n   *\n   * @param {Number} index The index to get.\n   */\n  get(index) {\n    assert(index < this._array.length);\n    return this._array[index];\n  }\n  /**\n   * Sets the element at an index. Resizes the array if index is greater than the length of the array.\n   *\n   * @param {Number} index The index to set.\n   * @param {*} element The element to set at index.\n   */\n  set(index, element) {\n    assert(index >= 0);\n    if (index >= this.length) {\n      this.length = index + 1;\n    }\n    if (this._map.has(this._array[index])) {\n      this._map.delete(this._array[index]);\n    }\n    this._array[index] = element;\n    this._map.set(element, index);\n  }\n  delete(element) {\n    const index = this._map.get(element);\n    if (index >= 0) {\n      this._array.splice(index, 1);\n      this._map.delete(element);\n      this.length--;\n    }\n  }\n  /**\n   * Returns the last element in the array without modifying the array.\n   *\n   * @returns {*} The last element in the array.\n   */\n  peek() {\n    return this._array[this._length - 1];\n  }\n  /**\n   * Push an element into the array.\n   *\n   * @param {*} element The element to push.\n   */\n  push(element) {\n    if (!this._map.has(element)) {\n      const index = this.length++;\n      this._array[index] = element;\n      this._map.set(element, index);\n    }\n  }\n  /**\n   * Pop an element from the array.\n   *\n   * @returns {*} The last element in the array.\n   */\n  pop() {\n    const element = this._array[--this.length];\n    this._map.delete(element);\n    return element;\n  }\n  /**\n   * Resize the internal array if length > _array.length.\n   *\n   * @param {Number} length The length.\n   */\n  reserve(length) {\n    assert(length >= 0);\n    if (length > this._array.length) {\n      this._array.length = length;\n    }\n  }\n  /**\n   * Resize the array.\n   *\n   * @param {Number} length The length.\n   */\n  resize(length) {\n    assert(length >= 0);\n    this.length = length;\n  }\n  /**\n   * Trim the internal array to the specified length. Defaults to the current length.\n   *\n   * @param {Number} [length] The length.\n   */\n  trim(length) {\n    if (length === null || length === undefined) {\n      length = this.length;\n    }\n    this._array.length = length;\n  }\n  reset() {\n    this._array = [];\n    this._map = new Map();\n    this._length = 0;\n  }\n  find(target) {\n    return this._map.has(target);\n  }\n}","map":{"version":3,"names":["assert","ManagedArray","_map","Map","_array","_length","constructor","length","Array","values","get","index","set","element","has","delete","splice","peek","push","pop","reserve","resize","trim","undefined","reset","find","target"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/tiles/dist/utils/managed-array.js"],"sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nimport { assert } from '@loaders.gl/loader-utils';\n/**\n * A wrapper around arrays so that the internal length of the array can be manually managed.\n *\n * @alias ManagedArray\n * @constructor\n * @private\n *\n * @param {Number} [length=0] The initial length of the array.\n */\nexport class ManagedArray {\n    _map = new Map();\n    _array;\n    _length;\n    constructor(length = 0) {\n        this._array = new Array(length);\n        this._length = length;\n    }\n    /**\n     * Gets or sets the length of the array.\n     * If the set length is greater than the length of the internal array, the internal array is resized.\n     *\n     * @memberof ManagedArray.prototype\n     * @type Number\n     */\n    get length() {\n        return this._length;\n    }\n    set length(length) {\n        this._length = length;\n        if (length > this._array.length) {\n            this._array.length = length;\n        }\n    }\n    /**\n     * Gets the internal array.\n     *\n     * @memberof ManagedArray.prototype\n     * @type Array\n     * @readonly\n     */\n    get values() {\n        return this._array;\n    }\n    /**\n     * Gets the element at an index.\n     *\n     * @param {Number} index The index to get.\n     */\n    get(index) {\n        assert(index < this._array.length);\n        return this._array[index];\n    }\n    /**\n     * Sets the element at an index. Resizes the array if index is greater than the length of the array.\n     *\n     * @param {Number} index The index to set.\n     * @param {*} element The element to set at index.\n     */\n    set(index, element) {\n        assert(index >= 0);\n        if (index >= this.length) {\n            this.length = index + 1;\n        }\n        if (this._map.has(this._array[index])) {\n            this._map.delete(this._array[index]);\n        }\n        this._array[index] = element;\n        this._map.set(element, index);\n    }\n    delete(element) {\n        const index = this._map.get(element);\n        if (index >= 0) {\n            this._array.splice(index, 1);\n            this._map.delete(element);\n            this.length--;\n        }\n    }\n    /**\n     * Returns the last element in the array without modifying the array.\n     *\n     * @returns {*} The last element in the array.\n     */\n    peek() {\n        return this._array[this._length - 1];\n    }\n    /**\n     * Push an element into the array.\n     *\n     * @param {*} element The element to push.\n     */\n    push(element) {\n        if (!this._map.has(element)) {\n            const index = this.length++;\n            this._array[index] = element;\n            this._map.set(element, index);\n        }\n    }\n    /**\n     * Pop an element from the array.\n     *\n     * @returns {*} The last element in the array.\n     */\n    pop() {\n        const element = this._array[--this.length];\n        this._map.delete(element);\n        return element;\n    }\n    /**\n     * Resize the internal array if length > _array.length.\n     *\n     * @param {Number} length The length.\n     */\n    reserve(length) {\n        assert(length >= 0);\n        if (length > this._array.length) {\n            this._array.length = length;\n        }\n    }\n    /**\n     * Resize the array.\n     *\n     * @param {Number} length The length.\n     */\n    resize(length) {\n        assert(length >= 0);\n        this.length = length;\n    }\n    /**\n     * Trim the internal array to the specified length. Defaults to the current length.\n     *\n     * @param {Number} [length] The length.\n     */\n    trim(length) {\n        if (length === null || length === undefined) {\n            length = this.length;\n        }\n        this._array.length = length;\n    }\n    reset() {\n        this._array = [];\n        this._map = new Map();\n        this._length = 0;\n    }\n    find(target) {\n        return this._map.has(target);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}