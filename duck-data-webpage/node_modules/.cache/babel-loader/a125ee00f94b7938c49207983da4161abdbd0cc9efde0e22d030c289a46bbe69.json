{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport GeoCellLayer from \"../geo-cell-layer/GeoCellLayer.js\";\nimport { getGeohashPolygon } from \"./geohash-utils.js\";\nconst defaultProps = {\n  getGeohash: {\n    type: 'accessor',\n    value: d => d.geohash\n  }\n};\n/** Render filled and/or stroked polygons based on the [Geohash](https://en.wikipedia.org/wiki/Geohash) geospatial indexing system. */\nclass GeohashLayer extends GeoCellLayer {\n  indexToBounds() {\n    const {\n      data,\n      getGeohash\n    } = this.props;\n    return {\n      data,\n      _normalize: false,\n      positionFormat: 'XY',\n      getPolygon: (x, objectInfo) => getGeohashPolygon(getGeohash(x, objectInfo))\n    };\n  }\n}\nGeohashLayer.layerName = 'GeohashLayer';\nGeohashLayer.defaultProps = defaultProps;\nexport default GeohashLayer;","map":{"version":3,"names":["GeoCellLayer","getGeohashPolygon","defaultProps","getGeohash","type","value","d","geohash","GeohashLayer","indexToBounds","data","props","_normalize","positionFormat","getPolygon","x","objectInfo","layerName"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\geo-layers\\src\\geohash-layer\\geohash-layer.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {AccessorFunction, DefaultProps} from '@deck.gl/core';\nimport GeoCellLayer from '../geo-cell-layer/GeoCellLayer';\nimport {getGeohashPolygon} from './geohash-utils';\n\nconst defaultProps: DefaultProps<GeohashLayerProps> = {\n  getGeohash: {type: 'accessor', value: (d: any) => d.geohash}\n};\n\n/**\n * Properties of `GeohashLayer`.\n */\nexport type GeohashLayerProps<DataT = unknown> = {\n  /**\n   * Called for each data object to retrieve the geohash string identifier.\n   *\n   * By default, it reads `geohash` property of data object.\n   */\n  getGeohash?: AccessorFunction<DataT, string>;\n};\n\n/** Render filled and/or stroked polygons based on the [Geohash](https://en.wikipedia.org/wiki/Geohash) geospatial indexing system. */\nexport default class GeohashLayer<DataT = any, ExtraProps extends {} = {}> extends GeoCellLayer<\n  DataT,\n  Required<GeohashLayerProps> & ExtraProps\n> {\n  static layerName = 'GeohashLayer';\n  static defaultProps = defaultProps;\n\n  indexToBounds(): Partial<GeoCellLayer['props']> | null {\n    const {data, getGeohash} = this.props;\n\n    return {\n      data,\n      _normalize: false,\n      positionFormat: 'XY',\n      getPolygon: (x: DataT, objectInfo) => getGeohashPolygon(getGeohash(x, objectInfo))\n    };\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AAGA,OAAOA,YAAY;AACnB,SAAQC,iBAAiB,QAAC;AAE1B,MAAMC,YAAY,GAAoC;EACpDC,UAAU,EAAE;IAACC,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAGC,CAAM,IAAKA,CAAC,CAACC;EAAO;CAC5D;AAcD;AACA,MAAqBC,YAAsD,SAAQR,YAGlF;EAICS,aAAaA,CAAA;IACX,MAAM;MAACC,IAAI;MAAEP;IAAU,CAAC,GAAG,IAAI,CAACQ,KAAK;IAErC,OAAO;MACLD,IAAI;MACJE,UAAU,EAAE,KAAK;MACjBC,cAAc,EAAE,IAAI;MACpBC,UAAU,EAAEA,CAACC,CAAQ,EAAEC,UAAU,KAAKf,iBAAiB,CAACE,UAAU,CAACY,CAAC,EAAEC,UAAU,CAAC;KAClF;EACH;;AAZOR,YAAA,CAAAS,SAAS,GAAG,cAAc;AAC1BT,YAAA,CAAAN,YAAY,GAAGA,YAAY;eALfM,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}