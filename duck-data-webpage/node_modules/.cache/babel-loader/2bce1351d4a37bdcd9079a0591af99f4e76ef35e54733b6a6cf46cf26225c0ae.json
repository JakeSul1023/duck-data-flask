{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// @ts-nocheck\n/* eslint-disable */\nimport { SAXParser } from \"../../sax-ts/sax.js\";\n/**\n * StreamingXMLParser builds a JSON object using the events emitted by the SAX parser\n */\nexport class StreamingXMLParser {\n  parser;\n  result = undefined;\n  previousStates = [];\n  currentState = Object.freeze({\n    container: [],\n    key: null\n  });\n  // jsonpath: JSONPath = new JSONPath();\n  constructor(options) {\n    this.reset();\n    this.parser = new SAXParser({\n      onready: () => {\n        this.previousStates.length = 0;\n        this.currentState.container.length = 0;\n      },\n      onopentag: ({\n        name,\n        attributes,\n        isSelfClosing\n      }) => {\n        this._openObject({});\n        if (typeof name !== 'undefined') {\n          this.parser.emit('onkey', name);\n        }\n      },\n      onkey: name => {\n        this.currentState.key = name;\n      },\n      onclosetag: () => {\n        this._closeObject();\n      },\n      onopenarray: () => {\n        this._openArray();\n      },\n      onclosearray: () => {\n        this._closeArray();\n      },\n      ontext: value => {\n        this._pushOrSet(value);\n      },\n      onerror: error => {\n        throw error;\n      },\n      onend: () => {\n        this.result = this.currentState.container.pop();\n      },\n      ...options\n    });\n  }\n  reset() {\n    this.result = undefined;\n    this.previousStates = [];\n    this.currentState = Object.freeze({\n      container: [],\n      key: null\n    });\n  }\n  write(chunk) {\n    this.parser.write(chunk);\n  }\n  close() {\n    this.parser.close();\n  }\n  // PRIVATE METHODS\n  _pushOrSet(value) {\n    const {\n      container,\n      key\n    } = this.currentState;\n    if (key !== null) {\n      container[key] = value;\n      this.currentState.key = null;\n    } else if (Array.isArray(container)) {\n      container.push(value);\n    } else if (container) {\n      // break for debug\n    }\n  }\n  _openArray(newContainer = []) {\n    // this.jsonpath.push(null);\n    this._pushOrSet(newContainer);\n    this.previousStates.push(this.currentState);\n    this.currentState = {\n      container: newContainer,\n      isArray: true,\n      key: null\n    };\n  }\n  _closeArray() {\n    // this.jsonpath.pop();\n    this.currentState = this.previousStates.pop();\n  }\n  _openObject(newContainer = {}) {\n    // this.jsonpath.push(null);\n    this._pushOrSet(newContainer);\n    this.previousStates.push(this.currentState);\n    this.currentState = {\n      container: newContainer,\n      isArray: false,\n      key: null\n    };\n  }\n  _closeObject() {\n    // this.jsonpath.pop();\n    this.currentState = this.previousStates.pop();\n  }\n}","map":{"version":3,"names":["SAXParser","StreamingXMLParser","parser","result","undefined","previousStates","currentState","Object","freeze","container","key","constructor","options","reset","onready","length","onopentag","name","attributes","isSelfClosing","_openObject","emit","onkey","onclosetag","_closeObject","onopenarray","_openArray","onclosearray","_closeArray","ontext","value","_pushOrSet","onerror","error","onend","pop","write","chunk","close","Array","isArray","push","newContainer"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/xml/dist/lib/parsers/streaming-xml-parser.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// @ts-nocheck\n/* eslint-disable */\nimport { SAXParser } from \"../../sax-ts/sax.js\";\n/**\n * StreamingXMLParser builds a JSON object using the events emitted by the SAX parser\n */\nexport class StreamingXMLParser {\n    parser;\n    result = undefined;\n    previousStates = [];\n    currentState = Object.freeze({ container: [], key: null });\n    // jsonpath: JSONPath = new JSONPath();\n    constructor(options) {\n        this.reset();\n        this.parser = new SAXParser({\n            onready: () => {\n                this.previousStates.length = 0;\n                this.currentState.container.length = 0;\n            },\n            onopentag: ({ name, attributes, isSelfClosing }) => {\n                this._openObject({});\n                if (typeof name !== 'undefined') {\n                    this.parser.emit('onkey', name);\n                }\n            },\n            onkey: (name) => {\n                this.currentState.key = name;\n            },\n            onclosetag: () => {\n                this._closeObject();\n            },\n            onopenarray: () => {\n                this._openArray();\n            },\n            onclosearray: () => {\n                this._closeArray();\n            },\n            ontext: (value) => {\n                this._pushOrSet(value);\n            },\n            onerror: (error) => {\n                throw error;\n            },\n            onend: () => {\n                this.result = this.currentState.container.pop();\n            },\n            ...options\n        });\n    }\n    reset() {\n        this.result = undefined;\n        this.previousStates = [];\n        this.currentState = Object.freeze({ container: [], key: null });\n    }\n    write(chunk) {\n        this.parser.write(chunk);\n    }\n    close() {\n        this.parser.close();\n    }\n    // PRIVATE METHODS\n    _pushOrSet(value) {\n        const { container, key } = this.currentState;\n        if (key !== null) {\n            container[key] = value;\n            this.currentState.key = null;\n        }\n        else if (Array.isArray(container)) {\n            container.push(value);\n        }\n        else if (container) {\n            // break for debug\n        }\n    }\n    _openArray(newContainer = []) {\n        // this.jsonpath.push(null);\n        this._pushOrSet(newContainer);\n        this.previousStates.push(this.currentState);\n        this.currentState = { container: newContainer, isArray: true, key: null };\n    }\n    _closeArray() {\n        // this.jsonpath.pop();\n        this.currentState = this.previousStates.pop();\n    }\n    _openObject(newContainer = {}) {\n        // this.jsonpath.push(null);\n        this._pushOrSet(newContainer);\n        this.previousStates.push(this.currentState);\n        this.currentState = { container: newContainer, isArray: false, key: null };\n    }\n    _closeObject() {\n        // this.jsonpath.pop();\n        this.currentState = this.previousStates.pop();\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}