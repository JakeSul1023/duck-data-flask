{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { parseCSWRecords } from \"./lib/parsers/csw/parse-csw-records.js\";\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof \"4.3.2\" !== 'undefined' ? \"4.3.2\" : 'latest';\n/**\n * Loader for the response to the CSW GetCapability request\n */\nexport const CSWRecordsLoader = {\n  dataType: null,\n  batchType: null,\n  id: 'csw-records',\n  name: 'CSW Records',\n  module: 'wms',\n  version: VERSION,\n  worker: false,\n  extensions: ['xml'],\n  mimeTypes: ['application/vnd.ogc.csw_xml', 'application/xml', 'text/xml'],\n  testText: testXMLFile,\n  options: {\n    csw: {}\n  },\n  parse: async (arrayBuffer, options) => parseCSWRecords(new TextDecoder().decode(arrayBuffer), options),\n  parseTextSync: (text, options) => parseCSWRecords(text, options)\n};\nfunction testXMLFile(text) {\n  // TODO - There could be space first.\n  return text.startsWith('<?xml');\n}","map":{"version":3,"names":["parseCSWRecords","VERSION","CSWRecordsLoader","dataType","batchType","id","name","module","version","worker","extensions","mimeTypes","testText","testXMLFile","options","csw","parse","arrayBuffer","TextDecoder","decode","parseTextSync","text","startsWith"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/wms/dist/csw-records-loader.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { parseCSWRecords } from \"./lib/parsers/csw/parse-csw-records.js\";\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof \"4.3.2\" !== 'undefined' ? \"4.3.2\" : 'latest';\n/**\n * Loader for the response to the CSW GetCapability request\n */\nexport const CSWRecordsLoader = {\n    dataType: null,\n    batchType: null,\n    id: 'csw-records',\n    name: 'CSW Records',\n    module: 'wms',\n    version: VERSION,\n    worker: false,\n    extensions: ['xml'],\n    mimeTypes: ['application/vnd.ogc.csw_xml', 'application/xml', 'text/xml'],\n    testText: testXMLFile,\n    options: {\n        csw: {}\n    },\n    parse: async (arrayBuffer, options) => parseCSWRecords(new TextDecoder().decode(arrayBuffer), options),\n    parseTextSync: (text, options) => parseCSWRecords(text, options)\n};\nfunction testXMLFile(text) {\n    // TODO - There could be space first.\n    return text.startsWith('<?xml');\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,eAAe,QAAQ,wCAAwC;AACxE;AACA;AACA,MAAMC,OAAO,GAAG,OAAO,OAAO,KAAK,WAAW,GAAG,OAAO,GAAG,QAAQ;AACnE;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAG;EAC5BC,QAAQ,EAAE,IAAI;EACdC,SAAS,EAAE,IAAI;EACfC,EAAE,EAAE,aAAa;EACjBC,IAAI,EAAE,aAAa;EACnBC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAEP,OAAO;EAChBQ,MAAM,EAAE,KAAK;EACbC,UAAU,EAAE,CAAC,KAAK,CAAC;EACnBC,SAAS,EAAE,CAAC,6BAA6B,EAAE,iBAAiB,EAAE,UAAU,CAAC;EACzEC,QAAQ,EAAEC,WAAW;EACrBC,OAAO,EAAE;IACLC,GAAG,EAAE,CAAC;EACV,CAAC;EACDC,KAAK,EAAE,MAAAA,CAAOC,WAAW,EAAEH,OAAO,KAAKd,eAAe,CAAC,IAAIkB,WAAW,CAAC,CAAC,CAACC,MAAM,CAACF,WAAW,CAAC,EAAEH,OAAO,CAAC;EACtGM,aAAa,EAAEA,CAACC,IAAI,EAAEP,OAAO,KAAKd,eAAe,CAACqB,IAAI,EAAEP,OAAO;AACnE,CAAC;AACD,SAASD,WAAWA,CAACQ,IAAI,EAAE;EACvB;EACA,OAAOA,IAAI,CAACC,UAAU,CAAC,OAAO,CAAC;AACnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}