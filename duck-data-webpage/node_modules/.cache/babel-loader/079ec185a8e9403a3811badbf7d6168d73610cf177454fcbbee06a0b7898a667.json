{"ast":null,"code":"import { splitStr } from \"./split-str.js\";\n/**\n * addEventListener with multiple events at once\n */\nexport function addEventListeners(target, types, handler) {\n  if (!target) {\n    return;\n  }\n  for (const type of splitStr(types)) {\n    target.addEventListener(type, handler, false);\n  }\n}\n/**\n * removeEventListener with multiple events at once\n */\nexport function removeEventListeners(target, types, handler) {\n  if (!target) {\n    return;\n  }\n  for (const type of splitStr(types)) {\n    target.removeEventListener(type, handler, false);\n  }\n}","map":{"version":3,"names":["splitStr","addEventListeners","target","types","handler","type","addEventListener","removeEventListeners","removeEventListener"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\mjolnir.js\\src\\hammerjs\\utils\\event-listeners.ts"],"sourcesContent":["import {splitStr} from './split-str';\n\n/**\n * addEventListener with multiple events at once\n */\nexport function addEventListeners(\n  target: EventTarget | null,\n  types: string,\n  handler: EventListener\n) {\n  if (!target) {\n    return;\n  }\n  for (const type of splitStr(types)) {\n    target.addEventListener(type, handler, false);\n  }\n}\n\n/**\n * removeEventListener with multiple events at once\n */\nexport function removeEventListeners(\n  target: EventTarget | null,\n  types: string,\n  handler: EventListener\n) {\n  if (!target) {\n    return;\n  }\n  for (const type of splitStr(types)) {\n    target.removeEventListener(type, handler, false);\n  }\n}\n"],"mappings":"AAAA,SAAQA,QAAQ,QAAC;AAEjB;;;AAGA,OAAM,SAAUC,iBAAiBA,CAC/BC,MAA0B,EAC1BC,KAAa,EACbC,OAAsB;EAEtB,IAAI,CAACF,MAAM,EAAE;IACX;EACF;EACA,KAAK,MAAMG,IAAI,IAAIL,QAAQ,CAACG,KAAK,CAAC,EAAE;IAClCD,MAAM,CAACI,gBAAgB,CAACD,IAAI,EAAED,OAAO,EAAE,KAAK,CAAC;EAC/C;AACF;AAEA;;;AAGA,OAAM,SAAUG,oBAAoBA,CAClCL,MAA0B,EAC1BC,KAAa,EACbC,OAAsB;EAEtB,IAAI,CAACF,MAAM,EAAE;IACX;EACF;EACA,KAAK,MAAMG,IAAI,IAAIL,QAAQ,CAACG,KAAK,CAAC,EAAE;IAClCD,MAAM,CAACM,mBAAmB,CAACH,IAAI,EAAED,OAAO,EAAE,KAAK,CAAC;EAClD;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}