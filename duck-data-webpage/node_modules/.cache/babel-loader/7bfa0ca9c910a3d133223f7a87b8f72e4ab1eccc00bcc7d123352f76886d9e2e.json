{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport GeoCellLayer from \"../geo-cell-layer/GeoCellLayer.js\";\nimport { getQuadkeyPolygon } from \"./quadkey-utils.js\";\nconst defaultProps = {\n  getQuadkey: {\n    type: 'accessor',\n    value: d => d.quadkey\n  }\n};\n/** Render filled and/or stroked polygons based on the [Quadkey](https://towardsdatascience.com/geospatial-indexing-with-quadkeys-d933dff01496) geospatial indexing system. */\nclass QuadkeyLayer extends GeoCellLayer {\n  indexToBounds() {\n    const {\n      data,\n      extruded,\n      getQuadkey\n    } = this.props;\n    // To avoid z-fighting reduce polygon footprint when extruding\n    const coverage = extruded ? 0.99 : 1;\n    return {\n      data,\n      _normalize: false,\n      positionFormat: 'XY',\n      getPolygon: (x, objectInfo) => getQuadkeyPolygon(getQuadkey(x, objectInfo), coverage),\n      updateTriggers: {\n        getPolygon: coverage\n      }\n    };\n  }\n}\nQuadkeyLayer.layerName = 'QuadkeyLayer';\nQuadkeyLayer.defaultProps = defaultProps;\nexport default QuadkeyLayer;","map":{"version":3,"names":["GeoCellLayer","getQuadkeyPolygon","defaultProps","getQuadkey","type","value","d","quadkey","QuadkeyLayer","indexToBounds","data","extruded","props","coverage","_normalize","positionFormat","getPolygon","x","objectInfo","updateTriggers","layerName"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\geo-layers\\src\\quadkey-layer\\quadkey-layer.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {AccessorFunction, DefaultProps} from '@deck.gl/core';\nimport GeoCellLayer, {GeoCellLayerProps} from '../geo-cell-layer/GeoCellLayer';\nimport {getQuadkeyPolygon} from './quadkey-utils';\n\nconst defaultProps: DefaultProps<QuadkeyLayerProps> = {\n  getQuadkey: {type: 'accessor', value: (d: any) => d.quadkey}\n};\n\n/** All properties supported by QuadkeyLayer. */\nexport type QuadkeyLayerProps<DataT = unknown> = _QuadkeyLayerProps<DataT> &\n  GeoCellLayerProps<DataT>;\n\n/** Properties added by QuadkeyLayer. */\ntype _QuadkeyLayerProps<DataT> = {\n  /**\n   * Called for each data object to retrieve the quadkey string identifier.\n   *\n   * By default, it reads `quadkey` property of data object.\n   */\n  getQuadkey?: AccessorFunction<DataT, string>;\n};\n\n/** Render filled and/or stroked polygons based on the [Quadkey](https://towardsdatascience.com/geospatial-indexing-with-quadkeys-d933dff01496) geospatial indexing system. */\nexport default class QuadkeyLayer<DataT = any, ExtraProps extends {} = {}> extends GeoCellLayer<\n  DataT,\n  Required<_QuadkeyLayerProps<DataT>> & ExtraProps\n> {\n  static layerName = 'QuadkeyLayer';\n  static defaultProps = defaultProps;\n\n  indexToBounds(): Partial<GeoCellLayer['props']> | null {\n    const {data, extruded, getQuadkey} = this.props;\n    // To avoid z-fighting reduce polygon footprint when extruding\n    const coverage = extruded ? 0.99 : 1;\n\n    return {\n      data,\n      _normalize: false,\n      positionFormat: 'XY',\n\n      getPolygon: (x: DataT, objectInfo) => getQuadkeyPolygon(getQuadkey(x, objectInfo), coverage),\n      updateTriggers: {getPolygon: coverage}\n    };\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AAGA,OAAOA,YAAiC;AACxC,SAAQC,iBAAiB,QAAC;AAE1B,MAAMC,YAAY,GAAoC;EACpDC,UAAU,EAAE;IAACC,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAGC,CAAM,IAAKA,CAAC,CAACC;EAAO;CAC5D;AAgBD;AACA,MAAqBC,YAAsD,SAAQR,YAGlF;EAICS,aAAaA,CAAA;IACX,MAAM;MAACC,IAAI;MAAEC,QAAQ;MAAER;IAAU,CAAC,GAAG,IAAI,CAACS,KAAK;IAC/C;IACA,MAAMC,QAAQ,GAAGF,QAAQ,GAAG,IAAI,GAAG,CAAC;IAEpC,OAAO;MACLD,IAAI;MACJI,UAAU,EAAE,KAAK;MACjBC,cAAc,EAAE,IAAI;MAEpBC,UAAU,EAAEA,CAACC,CAAQ,EAAEC,UAAU,KAAKjB,iBAAiB,CAACE,UAAU,CAACc,CAAC,EAAEC,UAAU,CAAC,EAAEL,QAAQ,CAAC;MAC5FM,cAAc,EAAE;QAACH,UAAU,EAAEH;MAAQ;KACtC;EACH;;AAhBOL,YAAA,CAAAY,SAAS,GAAG,cAAc;AAC1BZ,YAAA,CAAAN,YAAY,GAAGA,YAAY;eALfM,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}