{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { CD_HEADER_SIGNATURE, makeHashTableFromZipHeaders, parseHashTable, parseZipCDFileHeader, parseZipLocalFileHeader, searchFromTheEnd } from '@loaders.gl/zip';\nimport { Tiles3DArchive } from \"./3d-tiles-archive-archive.js\";\n/**\n * Creates 3tz file handler from raw file\n * @param fileProvider raw file data\n * @param cb is called with information message during parsing\n * @returns 3tz file handler\n */\nexport const parse3DTilesArchive = async (fileProvider, cb) => {\n  const hashCDOffset = await searchFromTheEnd(fileProvider, CD_HEADER_SIGNATURE);\n  const cdFileHeader = await parseZipCDFileHeader(hashCDOffset, fileProvider);\n  let hashTable;\n  if (cdFileHeader?.fileName !== '@3dtilesIndex1@') {\n    hashTable = await makeHashTableFromZipHeaders(fileProvider);\n    cb?.('3tz doesnt contain hash file, hash info has been composed according to zip archive headers');\n  } else {\n    // cb?.('3tz contains hash file');\n    const localFileHeader = await parseZipLocalFileHeader(cdFileHeader.localHeaderOffset, fileProvider);\n    if (!localFileHeader) {\n      throw new Error('corrupted 3tz zip archive');\n    }\n    const fileDataOffset = localFileHeader.fileDataOffset;\n    const hashFile = await fileProvider.slice(fileDataOffset, fileDataOffset + localFileHeader.compressedSize);\n    hashTable = parseHashTable(hashFile);\n  }\n  return new Tiles3DArchive(fileProvider, hashTable);\n};","map":{"version":3,"names":["CD_HEADER_SIGNATURE","makeHashTableFromZipHeaders","parseHashTable","parseZipCDFileHeader","parseZipLocalFileHeader","searchFromTheEnd","Tiles3DArchive","parse3DTilesArchive","fileProvider","cb","hashCDOffset","cdFileHeader","hashTable","fileName","localFileHeader","localHeaderOffset","Error","fileDataOffset","hashFile","slice","compressedSize"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/3d-tiles/dist/3d-tiles-archive/3d-tiles-archive-parser.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { CD_HEADER_SIGNATURE, makeHashTableFromZipHeaders, parseHashTable, parseZipCDFileHeader, parseZipLocalFileHeader, searchFromTheEnd } from '@loaders.gl/zip';\nimport { Tiles3DArchive } from \"./3d-tiles-archive-archive.js\";\n/**\n * Creates 3tz file handler from raw file\n * @param fileProvider raw file data\n * @param cb is called with information message during parsing\n * @returns 3tz file handler\n */\nexport const parse3DTilesArchive = async (fileProvider, cb) => {\n    const hashCDOffset = await searchFromTheEnd(fileProvider, CD_HEADER_SIGNATURE);\n    const cdFileHeader = await parseZipCDFileHeader(hashCDOffset, fileProvider);\n    let hashTable;\n    if (cdFileHeader?.fileName !== '@3dtilesIndex1@') {\n        hashTable = await makeHashTableFromZipHeaders(fileProvider);\n        cb?.('3tz doesnt contain hash file, hash info has been composed according to zip archive headers');\n    }\n    else {\n        // cb?.('3tz contains hash file');\n        const localFileHeader = await parseZipLocalFileHeader(cdFileHeader.localHeaderOffset, fileProvider);\n        if (!localFileHeader) {\n            throw new Error('corrupted 3tz zip archive');\n        }\n        const fileDataOffset = localFileHeader.fileDataOffset;\n        const hashFile = await fileProvider.slice(fileDataOffset, fileDataOffset + localFileHeader.compressedSize);\n        hashTable = parseHashTable(hashFile);\n    }\n    return new Tiles3DArchive(fileProvider, hashTable);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,mBAAmB,EAAEC,2BAA2B,EAAEC,cAAc,EAAEC,oBAAoB,EAAEC,uBAAuB,EAAEC,gBAAgB,QAAQ,iBAAiB;AACnK,SAASC,cAAc,QAAQ,+BAA+B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,mBAAmB,GAAG,MAAAA,CAAOC,YAAY,EAAEC,EAAE,KAAK;EAC3D,MAAMC,YAAY,GAAG,MAAML,gBAAgB,CAACG,YAAY,EAAER,mBAAmB,CAAC;EAC9E,MAAMW,YAAY,GAAG,MAAMR,oBAAoB,CAACO,YAAY,EAAEF,YAAY,CAAC;EAC3E,IAAII,SAAS;EACb,IAAID,YAAY,EAAEE,QAAQ,KAAK,iBAAiB,EAAE;IAC9CD,SAAS,GAAG,MAAMX,2BAA2B,CAACO,YAAY,CAAC;IAC3DC,EAAE,GAAG,4FAA4F,CAAC;EACtG,CAAC,MACI;IACD;IACA,MAAMK,eAAe,GAAG,MAAMV,uBAAuB,CAACO,YAAY,CAACI,iBAAiB,EAAEP,YAAY,CAAC;IACnG,IAAI,CAACM,eAAe,EAAE;MAClB,MAAM,IAAIE,KAAK,CAAC,2BAA2B,CAAC;IAChD;IACA,MAAMC,cAAc,GAAGH,eAAe,CAACG,cAAc;IACrD,MAAMC,QAAQ,GAAG,MAAMV,YAAY,CAACW,KAAK,CAACF,cAAc,EAAEA,cAAc,GAAGH,eAAe,CAACM,cAAc,CAAC;IAC1GR,SAAS,GAAGV,cAAc,CAACgB,QAAQ,CAAC;EACxC;EACA,OAAO,IAAIZ,cAAc,CAACE,YAAY,EAAEI,SAAS,CAAC;AACtD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}