{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { read } from 'ktx-parse';\nimport { extractMipmapImages } from \"../utils/extract-mipmap-images.js\";\nimport { mapVkFormatToWebGL } from \"../utils/ktx-format-helper.js\";\nconst KTX2_ID = [\n// '´', 'K', 'T', 'X', '2', '0', 'ª', '\\r', '\\n', '\\x1A', '\\n'\n0xab, 0x4b, 0x54, 0x58, 0x20, 0x32, 0x30, 0xbb, 0x0d, 0x0a, 0x1a, 0x0a];\n// eslint-disable-next-line complexity\nexport function isKTX(data) {\n  // const id = new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n  const id = new Uint8Array(data);\n  const notKTX = id.byteLength < KTX2_ID.length || id[0] !== KTX2_ID[0] ||\n  // '´'\n  id[1] !== KTX2_ID[1] ||\n  // 'K'\n  id[2] !== KTX2_ID[2] ||\n  // 'T'\n  id[3] !== KTX2_ID[3] ||\n  // 'X'\n  id[4] !== KTX2_ID[4] ||\n  // ' '\n  id[5] !== KTX2_ID[5] ||\n  // '2'\n  id[6] !== KTX2_ID[6] ||\n  // '0'\n  id[7] !== KTX2_ID[7] ||\n  // 'ª'\n  id[8] !== KTX2_ID[8] ||\n  // '\\r'\n  id[9] !== KTX2_ID[9] ||\n  // '\\n'\n  id[10] !== KTX2_ID[10] ||\n  // '\\x1A'\n  id[11] !== KTX2_ID[11]; // '\\n'\n  return !notKTX;\n}\nexport function parseKTX(arrayBuffer) {\n  const uint8Array = new Uint8Array(arrayBuffer);\n  const ktx = read(uint8Array);\n  const mipMapLevels = Math.max(1, ktx.levels.length);\n  const width = ktx.pixelWidth;\n  const height = ktx.pixelHeight;\n  const internalFormat = mapVkFormatToWebGL(ktx.vkFormat);\n  return extractMipmapImages(ktx.levels, {\n    mipMapLevels,\n    width,\n    height,\n    sizeFunction: level => level.uncompressedByteLength,\n    internalFormat\n  });\n}","map":{"version":3,"names":["read","extractMipmapImages","mapVkFormatToWebGL","KTX2_ID","isKTX","data","id","Uint8Array","notKTX","byteLength","length","parseKTX","arrayBuffer","uint8Array","ktx","mipMapLevels","Math","max","levels","width","pixelWidth","height","pixelHeight","internalFormat","vkFormat","sizeFunction","level","uncompressedByteLength"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/textures/dist/lib/parsers/parse-ktx.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { read } from 'ktx-parse';\nimport { extractMipmapImages } from \"../utils/extract-mipmap-images.js\";\nimport { mapVkFormatToWebGL } from \"../utils/ktx-format-helper.js\";\nconst KTX2_ID = [\n    // '´', 'K', 'T', 'X', '2', '0', 'ª', '\\r', '\\n', '\\x1A', '\\n'\n    0xab, 0x4b, 0x54, 0x58, 0x20, 0x32, 0x30, 0xbb, 0x0d, 0x0a, 0x1a, 0x0a\n];\n// eslint-disable-next-line complexity\nexport function isKTX(data) {\n    // const id = new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    const id = new Uint8Array(data);\n    const notKTX = id.byteLength < KTX2_ID.length ||\n        id[0] !== KTX2_ID[0] || // '´'\n        id[1] !== KTX2_ID[1] || // 'K'\n        id[2] !== KTX2_ID[2] || // 'T'\n        id[3] !== KTX2_ID[3] || // 'X'\n        id[4] !== KTX2_ID[4] || // ' '\n        id[5] !== KTX2_ID[5] || // '2'\n        id[6] !== KTX2_ID[6] || // '0'\n        id[7] !== KTX2_ID[7] || // 'ª'\n        id[8] !== KTX2_ID[8] || // '\\r'\n        id[9] !== KTX2_ID[9] || // '\\n'\n        id[10] !== KTX2_ID[10] || // '\\x1A'\n        id[11] !== KTX2_ID[11]; // '\\n'\n    return !notKTX;\n}\nexport function parseKTX(arrayBuffer) {\n    const uint8Array = new Uint8Array(arrayBuffer);\n    const ktx = read(uint8Array);\n    const mipMapLevels = Math.max(1, ktx.levels.length);\n    const width = ktx.pixelWidth;\n    const height = ktx.pixelHeight;\n    const internalFormat = mapVkFormatToWebGL(ktx.vkFormat);\n    return extractMipmapImages(ktx.levels, {\n        mipMapLevels,\n        width,\n        height,\n        sizeFunction: (level) => level.uncompressedByteLength,\n        internalFormat\n    });\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,IAAI,QAAQ,WAAW;AAChC,SAASC,mBAAmB,QAAQ,mCAAmC;AACvE,SAASC,kBAAkB,QAAQ,+BAA+B;AAClE,MAAMC,OAAO,GAAG;AACZ;AACA,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CACzE;AACD;AACA,OAAO,SAASC,KAAKA,CAACC,IAAI,EAAE;EACxB;EACA,MAAMC,EAAE,GAAG,IAAIC,UAAU,CAACF,IAAI,CAAC;EAC/B,MAAMG,MAAM,GAAGF,EAAE,CAACG,UAAU,GAAGN,OAAO,CAACO,MAAM,IACzCJ,EAAE,CAAC,CAAC,CAAC,KAAKH,OAAO,CAAC,CAAC,CAAC;EAAI;EACxBG,EAAE,CAAC,CAAC,CAAC,KAAKH,OAAO,CAAC,CAAC,CAAC;EAAI;EACxBG,EAAE,CAAC,CAAC,CAAC,KAAKH,OAAO,CAAC,CAAC,CAAC;EAAI;EACxBG,EAAE,CAAC,CAAC,CAAC,KAAKH,OAAO,CAAC,CAAC,CAAC;EAAI;EACxBG,EAAE,CAAC,CAAC,CAAC,KAAKH,OAAO,CAAC,CAAC,CAAC;EAAI;EACxBG,EAAE,CAAC,CAAC,CAAC,KAAKH,OAAO,CAAC,CAAC,CAAC;EAAI;EACxBG,EAAE,CAAC,CAAC,CAAC,KAAKH,OAAO,CAAC,CAAC,CAAC;EAAI;EACxBG,EAAE,CAAC,CAAC,CAAC,KAAKH,OAAO,CAAC,CAAC,CAAC;EAAI;EACxBG,EAAE,CAAC,CAAC,CAAC,KAAKH,OAAO,CAAC,CAAC,CAAC;EAAI;EACxBG,EAAE,CAAC,CAAC,CAAC,KAAKH,OAAO,CAAC,CAAC,CAAC;EAAI;EACxBG,EAAE,CAAC,EAAE,CAAC,KAAKH,OAAO,CAAC,EAAE,CAAC;EAAI;EAC1BG,EAAE,CAAC,EAAE,CAAC,KAAKH,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5B,OAAO,CAACK,MAAM;AAClB;AACA,OAAO,SAASG,QAAQA,CAACC,WAAW,EAAE;EAClC,MAAMC,UAAU,GAAG,IAAIN,UAAU,CAACK,WAAW,CAAC;EAC9C,MAAME,GAAG,GAAGd,IAAI,CAACa,UAAU,CAAC;EAC5B,MAAME,YAAY,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEH,GAAG,CAACI,MAAM,CAACR,MAAM,CAAC;EACnD,MAAMS,KAAK,GAAGL,GAAG,CAACM,UAAU;EAC5B,MAAMC,MAAM,GAAGP,GAAG,CAACQ,WAAW;EAC9B,MAAMC,cAAc,GAAGrB,kBAAkB,CAACY,GAAG,CAACU,QAAQ,CAAC;EACvD,OAAOvB,mBAAmB,CAACa,GAAG,CAACI,MAAM,EAAE;IACnCH,YAAY;IACZI,KAAK;IACLE,MAAM;IACNI,YAAY,EAAGC,KAAK,IAAKA,KAAK,CAACC,sBAAsB;IACrDJ;EACJ,CAAC,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}