{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { deepEqual } from \"../utils/deep-equal.js\";\nimport LightingEffect from \"../effects/lighting/lighting-effect.js\";\nconst DEFAULT_LIGHTING_EFFECT = new LightingEffect();\n/** Sort two effects. Returns 0 if equal, negative if e1 < e2, positive if e1 > e2 */\nfunction compareEffects(e1, e2) {\n  const o1 = e1.order ?? Infinity;\n  const o2 = e2.order ?? Infinity;\n  return o1 - o2;\n}\nexport default class EffectManager {\n  constructor(context) {\n    this._resolvedEffects = [];\n    /** Effect instances and order preference pairs, sorted by order */\n    this._defaultEffects = [];\n    this.effects = [];\n    this._context = context;\n    this._needsRedraw = 'Initial render';\n    this._setEffects([]);\n  }\n  /**\n   * Register a new default effect, i.e. an effect presents regardless of user supplied props.effects\n   */\n  addDefaultEffect(effect) {\n    const defaultEffects = this._defaultEffects;\n    if (!defaultEffects.find(e => e.id === effect.id)) {\n      const index = defaultEffects.findIndex(e => compareEffects(e, effect) > 0);\n      if (index < 0) {\n        defaultEffects.push(effect);\n      } else {\n        defaultEffects.splice(index, 0, effect);\n      }\n      effect.setup(this._context);\n      this._setEffects(this.effects);\n    }\n  }\n  setProps(props) {\n    if ('effects' in props) {\n      // Compare effects against each other shallowly\n      if (!deepEqual(props.effects, this.effects, 1)) {\n        this._setEffects(props.effects);\n      }\n    }\n  }\n  needsRedraw(opts = {\n    clearRedrawFlags: false\n  }) {\n    const redraw = this._needsRedraw;\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n    return redraw;\n  }\n  getEffects() {\n    return this._resolvedEffects;\n  }\n  _setEffects(effects) {\n    const oldEffectsMap = {};\n    for (const effect of this.effects) {\n      oldEffectsMap[effect.id] = effect;\n    }\n    const nextEffects = [];\n    for (const effect of effects) {\n      const oldEffect = oldEffectsMap[effect.id];\n      let effectToAdd = effect;\n      if (oldEffect && oldEffect !== effect) {\n        if (oldEffect.setProps) {\n          oldEffect.setProps(effect.props);\n          effectToAdd = oldEffect;\n        } else {\n          oldEffect.cleanup(this._context);\n        }\n      } else if (!oldEffect) {\n        effect.setup(this._context);\n      }\n      nextEffects.push(effectToAdd);\n      delete oldEffectsMap[effect.id];\n    }\n    for (const removedEffectId in oldEffectsMap) {\n      oldEffectsMap[removedEffectId].cleanup(this._context);\n    }\n    this.effects = nextEffects;\n    this._resolvedEffects = nextEffects.concat(this._defaultEffects);\n    // Special case for lighting: only add default instance if no LightingEffect is specified\n    if (!effects.some(effect => effect instanceof LightingEffect)) {\n      this._resolvedEffects.push(DEFAULT_LIGHTING_EFFECT);\n    }\n    this._needsRedraw = 'effects changed';\n  }\n  finalize() {\n    for (const effect of this._resolvedEffects) {\n      effect.cleanup(this._context);\n    }\n    this.effects.length = 0;\n    this._resolvedEffects.length = 0;\n    this._defaultEffects.length = 0;\n  }\n}","map":{"version":3,"names":["deepEqual","LightingEffect","DEFAULT_LIGHTING_EFFECT","compareEffects","e1","e2","o1","order","Infinity","o2","EffectManager","constructor","context","_resolvedEffects","_defaultEffects","effects","_context","_needsRedraw","_setEffects","addDefaultEffect","effect","defaultEffects","find","e","id","index","findIndex","push","splice","setup","setProps","props","needsRedraw","opts","clearRedrawFlags","redraw","getEffects","oldEffectsMap","nextEffects","oldEffect","effectToAdd","cleanup","removedEffectId","concat","some","finalize","length"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\core\\src\\lib\\effect-manager.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {deepEqual} from '../utils/deep-equal';\nimport LightingEffect from '../effects/lighting/lighting-effect';\nimport type {Effect, EffectContext} from './effect';\n\nconst DEFAULT_LIGHTING_EFFECT = new LightingEffect();\n\n/** Sort two effects. Returns 0 if equal, negative if e1 < e2, positive if e1 > e2 */\nfunction compareEffects(e1: Effect, e2: Effect): number {\n  const o1 = e1.order ?? Infinity;\n  const o2 = e2.order ?? Infinity;\n  return o1 - o2;\n}\n\nexport default class EffectManager {\n  effects: Effect[];\n  private _resolvedEffects: Effect[] = [];\n  /** Effect instances and order preference pairs, sorted by order */\n  private _defaultEffects: Effect[] = [];\n  private _needsRedraw: false | string;\n  private _context: EffectContext;\n\n  constructor(context: EffectContext) {\n    this.effects = [];\n    this._context = context;\n    this._needsRedraw = 'Initial render';\n    this._setEffects([]);\n  }\n\n  /**\n   * Register a new default effect, i.e. an effect presents regardless of user supplied props.effects\n   */\n  addDefaultEffect(effect: Effect) {\n    const defaultEffects = this._defaultEffects;\n    if (!defaultEffects.find(e => e.id === effect.id)) {\n      const index = defaultEffects.findIndex(e => compareEffects(e, effect) > 0);\n      if (index < 0) {\n        defaultEffects.push(effect);\n      } else {\n        defaultEffects.splice(index, 0, effect);\n      }\n      effect.setup(this._context);\n      this._setEffects(this.effects);\n    }\n  }\n\n  setProps(props) {\n    if ('effects' in props) {\n      // Compare effects against each other shallowly\n      if (!deepEqual(props.effects, this.effects, 1)) {\n        this._setEffects(props.effects);\n      }\n    }\n  }\n\n  needsRedraw(opts = {clearRedrawFlags: false}): false | string {\n    const redraw = this._needsRedraw;\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n    return redraw;\n  }\n\n  getEffects() {\n    return this._resolvedEffects;\n  }\n\n  private _setEffects(effects: Effect[]) {\n    const oldEffectsMap: Record<string, Effect> = {};\n    for (const effect of this.effects) {\n      oldEffectsMap[effect.id] = effect;\n    }\n\n    const nextEffects: Effect[] = [];\n    for (const effect of effects) {\n      const oldEffect = oldEffectsMap[effect.id];\n      let effectToAdd = effect;\n      if (oldEffect && oldEffect !== effect) {\n        if (oldEffect.setProps) {\n          oldEffect.setProps(effect.props);\n          effectToAdd = oldEffect;\n        } else {\n          oldEffect.cleanup(this._context);\n        }\n      } else if (!oldEffect) {\n        effect.setup(this._context);\n      }\n      nextEffects.push(effectToAdd);\n      delete oldEffectsMap[effect.id];\n    }\n    for (const removedEffectId in oldEffectsMap) {\n      oldEffectsMap[removedEffectId].cleanup(this._context);\n    }\n    this.effects = nextEffects;\n\n    this._resolvedEffects = nextEffects.concat(this._defaultEffects);\n    // Special case for lighting: only add default instance if no LightingEffect is specified\n    if (!effects.some(effect => effect instanceof LightingEffect)) {\n      this._resolvedEffects.push(DEFAULT_LIGHTING_EFFECT);\n    }\n    this._needsRedraw = 'effects changed';\n  }\n\n  finalize() {\n    for (const effect of this._resolvedEffects) {\n      effect.cleanup(this._context);\n    }\n\n    this.effects.length = 0;\n    this._resolvedEffects.length = 0;\n    this._defaultEffects.length = 0;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}