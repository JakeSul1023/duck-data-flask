{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { resolvePath } from '@loaders.gl/loader-utils';\nimport { makeResponse } from \"../utils/response-utils.js\";\n// import {FetchError} from './fetch-error';\nexport function isNodePath(url) {\n  return !isRequestURL(url) && !isDataURL(url);\n}\nexport function isRequestURL(url) {\n  return url.startsWith('http:') || url.startsWith('https:');\n}\nexport function isDataURL(url) {\n  return url.startsWith('data:');\n}\n/**\n * fetch API compatible function\n * - Supports fetching from Node.js local file system paths\n * - Respects pathPrefix and file aliases\n */\nexport async function fetchFile(urlOrData, fetchOptions) {\n  if (typeof urlOrData === 'string') {\n    const url = resolvePath(urlOrData);\n    // Support fetching from local file system\n    if (isNodePath(url)) {\n      if (globalThis.loaders?.fetchNode) {\n        return globalThis.loaders?.fetchNode(url, fetchOptions);\n      }\n      // throw new Error(\n      //   'fetchFile: globalThis.loaders.fetchNode not defined. Install @loaders.gl/polyfills'\n      // );\n    }\n    // Call global fetch\n    return await fetch(url, fetchOptions);\n  }\n  // TODO - should we still call fetch on non-URL inputs?\n  return await makeResponse(urlOrData);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}