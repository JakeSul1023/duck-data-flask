{"ast":null,"code":"// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Tables describing WebGL parameters\nimport { GL } from '@luma.gl/constants';\n// DEFAULT SETTINGS - FOR FAST CACHE INITIALIZATION AND CONTEXT RESETS\n/* eslint-disable no-shadow */\nexport const GL_PARAMETER_DEFAULTS = {\n  [3042]: false,\n  [32773]: new Float32Array([0, 0, 0, 0]),\n  [32777]: 32774,\n  [34877]: 32774,\n  [32969]: 1,\n  [32968]: 0,\n  [32971]: 1,\n  [32970]: 0,\n  [3106]: new Float32Array([0, 0, 0, 0]),\n  // TBD\n  [3107]: [true, true, true, true],\n  [2884]: false,\n  [2885]: 1029,\n  [2929]: false,\n  [2931]: 1,\n  [2932]: 513,\n  [2928]: new Float32Array([0, 1]),\n  // TBD\n  [2930]: true,\n  [3024]: true,\n  [35725]: null,\n  // FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [36006]: null,\n  [36007]: null,\n  [34229]: null,\n  [34964]: null,\n  [2886]: 2305,\n  [33170]: 4352,\n  [2849]: 1,\n  [32823]: false,\n  [32824]: 0,\n  [10752]: 0,\n  [32926]: false,\n  [32928]: false,\n  [32938]: 1.0,\n  [32939]: false,\n  [3089]: false,\n  // Note: Dynamic value. If scissor test enabled we expect users to set correct scissor box\n  [3088]: new Int32Array([0, 0, 1024, 1024]),\n  [2960]: false,\n  [2961]: 0,\n  [2968]: 0xffffffff,\n  [36005]: 0xffffffff,\n  [2962]: 519,\n  [2967]: 0,\n  [2963]: 0xffffffff,\n  [34816]: 519,\n  [36003]: 0,\n  [36004]: 0xffffffff,\n  [2964]: 7680,\n  [2965]: 7680,\n  [2966]: 7680,\n  [34817]: 7680,\n  [34818]: 7680,\n  [34819]: 7680,\n  // Dynamic value: We use [0, 0, 1024, 1024] as default, but usually this is updated in each frame.\n  [2978]: [0, 0, 1024, 1024],\n  [36389]: null,\n  [36662]: null,\n  [36663]: null,\n  [35053]: null,\n  [35055]: null,\n  [35723]: 4352,\n  [36010]: null,\n  [35977]: false,\n  [3333]: 4,\n  [3317]: 4,\n  [37440]: false,\n  [37441]: false,\n  [37443]: 37444,\n  [3330]: 0,\n  [3332]: 0,\n  [3331]: 0,\n  [3314]: 0,\n  [32878]: 0,\n  [3316]: 0,\n  [3315]: 0,\n  [32877]: 0\n};\n// SETTER TABLES - ENABLES SETTING ANY PARAMETER WITH A COMMON API\nconst enable = (gl, value, key) => value ? gl.enable(key) : gl.disable(key);\nconst hint = (gl, value, key) => gl.hint(key, value);\nconst pixelStorei = (gl, value, key) => gl.pixelStorei(key, value);\nconst bindFramebuffer = (gl, value, key) => {\n  const target = key === 36006 ? 36009 : 36008;\n  return gl.bindFramebuffer(target, value);\n};\nconst bindBuffer = (gl, value, key) => {\n  const bindingMap = {\n    [34964]: 34962,\n    [36662]: 36662,\n    [36663]: 36663,\n    [35053]: 35051,\n    [35055]: 35052\n  };\n  const glTarget = bindingMap[key];\n  gl.bindBuffer(glTarget, value);\n};\n// Utility\nfunction isArray(array) {\n  return Array.isArray(array) || ArrayBuffer.isView(array) && !(array instanceof DataView);\n}\n// Map from WebGL parameter names to corresponding WebGL setter functions\n// WegGL constants are read by parameter names, but set by function names\n// NOTE: When value type is a string, it will be handled by 'GL_COMPOSITE_PARAMETER_SETTERS'\nexport const GL_PARAMETER_SETTERS = {\n  [3042]: enable,\n  [32773]: (gl, value) => gl.blendColor(...value),\n  [32777]: 'blendEquation',\n  [34877]: 'blendEquation',\n  [32969]: 'blendFunc',\n  [32968]: 'blendFunc',\n  [32971]: 'blendFunc',\n  [32970]: 'blendFunc',\n  [3106]: (gl, value) => gl.clearColor(...value),\n  [3107]: (gl, value) => gl.colorMask(...value),\n  [2884]: enable,\n  [2885]: (gl, value) => gl.cullFace(value),\n  [2929]: enable,\n  [2931]: (gl, value) => gl.clearDepth(value),\n  [2932]: (gl, value) => gl.depthFunc(value),\n  [2928]: (gl, value) => gl.depthRange(...value),\n  [2930]: (gl, value) => gl.depthMask(value),\n  [3024]: enable,\n  [35723]: hint,\n  [35725]: (gl, value) => gl.useProgram(value),\n  [36007]: (gl, value) => gl.bindRenderbuffer(36161, value),\n  [36389]: (gl, value) => gl.bindTransformFeedback?.(36386, value),\n  [34229]: (gl, value) => gl.bindVertexArray(value),\n  // NOTE: FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [36006]: bindFramebuffer,\n  [36010]: bindFramebuffer,\n  // Buffers\n  [34964]: bindBuffer,\n  [36662]: bindBuffer,\n  [36663]: bindBuffer,\n  [35053]: bindBuffer,\n  [35055]: bindBuffer,\n  [2886]: (gl, value) => gl.frontFace(value),\n  [33170]: hint,\n  [2849]: (gl, value) => gl.lineWidth(value),\n  [32823]: enable,\n  [32824]: 'polygonOffset',\n  [10752]: 'polygonOffset',\n  [35977]: enable,\n  [32926]: enable,\n  [32928]: enable,\n  [32938]: 'sampleCoverage',\n  [32939]: 'sampleCoverage',\n  [3089]: enable,\n  [3088]: (gl, value) => gl.scissor(...value),\n  [2960]: enable,\n  [2961]: (gl, value) => gl.clearStencil(value),\n  [2968]: (gl, value) => gl.stencilMaskSeparate(1028, value),\n  [36005]: (gl, value) => gl.stencilMaskSeparate(1029, value),\n  [2962]: 'stencilFuncFront',\n  [2967]: 'stencilFuncFront',\n  [2963]: 'stencilFuncFront',\n  [34816]: 'stencilFuncBack',\n  [36003]: 'stencilFuncBack',\n  [36004]: 'stencilFuncBack',\n  [2964]: 'stencilOpFront',\n  [2965]: 'stencilOpFront',\n  [2966]: 'stencilOpFront',\n  [34817]: 'stencilOpBack',\n  [34818]: 'stencilOpBack',\n  [34819]: 'stencilOpBack',\n  [2978]: (gl, value) => gl.viewport(...value),\n  // WEBGL2 EXTENSIONS\n  // EXT_depth_clamp https://registry.khronos.org/webgl/extensions/EXT_depth_clamp/\n  [34383]: enable,\n  // WEBGL_provoking_vertex https://registry.khronos.org/webgl/extensions/WEBGL_provoking_vertex/\n  // [GL.PROVOKING_VERTEX_WEBL]: TODO - extension function needed\n  // WEBGL_polygon_mode https://registry.khronos.org/webgl/extensions/WEBGL_polygon_mode/\n  // POLYGON_MODE_WEBGL  TODO - extension function needed\n  [10754]: enable,\n  // WEBGL_clip_cull_distance https://registry.khronos.org/webgl/extensions/WEBGL_clip_cull_distance/\n  [12288]: enable,\n  [12289]: enable,\n  [12290]: enable,\n  [12291]: enable,\n  [12292]: enable,\n  [12293]: enable,\n  [12294]: enable,\n  [12295]: enable,\n  // PIXEL PACK/UNPACK MODES\n  [3333]: pixelStorei,\n  [3317]: pixelStorei,\n  [37440]: pixelStorei,\n  [37441]: pixelStorei,\n  [37443]: pixelStorei,\n  [3330]: pixelStorei,\n  [3332]: pixelStorei,\n  [3331]: pixelStorei,\n  [3314]: pixelStorei,\n  [32878]: pixelStorei,\n  [3316]: pixelStorei,\n  [3315]: pixelStorei,\n  [32877]: pixelStorei,\n  // Function-style setters\n  framebuffer: (gl, framebuffer) => {\n    // accepts 1) a WebGLFramebuffer 2) null (default framebuffer), or 3) luma.gl Framebuffer class\n    // framebuffer is null when restoring to default framebuffer, otherwise use the WebGL handle.\n    const handle = framebuffer && 'handle' in framebuffer ? framebuffer.handle : framebuffer;\n    return gl.bindFramebuffer(36160, handle);\n  },\n  blend: (gl, value) => value ? gl.enable(3042) : gl.disable(3042),\n  blendColor: (gl, value) => gl.blendColor(...value),\n  blendEquation: (gl, args) => {\n    const separateModes = typeof args === 'number' ? [args, args] : args;\n    gl.blendEquationSeparate(...separateModes);\n  },\n  blendFunc: (gl, args) => {\n    const separateFuncs = args?.length === 2 ? [...args, ...args] : args;\n    gl.blendFuncSeparate(...separateFuncs);\n  },\n  clearColor: (gl, value) => gl.clearColor(...value),\n  clearDepth: (gl, value) => gl.clearDepth(value),\n  clearStencil: (gl, value) => gl.clearStencil(value),\n  colorMask: (gl, value) => gl.colorMask(...value),\n  cull: (gl, value) => value ? gl.enable(2884) : gl.disable(2884),\n  cullFace: (gl, value) => gl.cullFace(value),\n  depthTest: (gl, value) => value ? gl.enable(2929) : gl.disable(2929),\n  depthFunc: (gl, value) => gl.depthFunc(value),\n  depthMask: (gl, value) => gl.depthMask(value),\n  depthRange: (gl, value) => gl.depthRange(...value),\n  dither: (gl, value) => value ? gl.enable(3024) : gl.disable(3024),\n  derivativeHint: (gl, value) => {\n    // gl1: 'OES_standard_derivatives'\n    gl.hint(35723, value);\n  },\n  frontFace: (gl, value) => gl.frontFace(value),\n  mipmapHint: (gl, value) => gl.hint(33170, value),\n  lineWidth: (gl, value) => gl.lineWidth(value),\n  polygonOffsetFill: (gl, value) => value ? gl.enable(32823) : gl.disable(32823),\n  polygonOffset: (gl, value) => gl.polygonOffset(...value),\n  sampleCoverage: (gl, value) => gl.sampleCoverage(value[0], value[1] || false),\n  scissorTest: (gl, value) => value ? gl.enable(3089) : gl.disable(3089),\n  scissor: (gl, value) => gl.scissor(...value),\n  stencilTest: (gl, value) => value ? gl.enable(2960) : gl.disable(2960),\n  stencilMask: (gl, value) => {\n    value = isArray(value) ? value : [value, value];\n    const [mask, backMask] = value;\n    gl.stencilMaskSeparate(1028, mask);\n    gl.stencilMaskSeparate(1029, backMask);\n  },\n  stencilFunc: (gl, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [func, ref, mask, backFunc, backRef, backMask] = args;\n    gl.stencilFuncSeparate(1028, func, ref, mask);\n    gl.stencilFuncSeparate(1029, backFunc, backRef, backMask);\n  },\n  stencilOp: (gl, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [sfail, dpfail, dppass, backSfail, backDpfail, backDppass] = args;\n    gl.stencilOpSeparate(1028, sfail, dpfail, dppass);\n    gl.stencilOpSeparate(1029, backSfail, backDpfail, backDppass);\n  },\n  viewport: (gl, value) => gl.viewport(...value)\n};\nfunction getValue(glEnum, values, cache) {\n  return values[glEnum] !== undefined ? values[glEnum] : cache[glEnum];\n}\n// COMPOSITE_WEBGL_PARAMETER_\nexport const GL_COMPOSITE_PARAMETER_SETTERS = {\n  blendEquation: (gl, values, cache) => gl.blendEquationSeparate(getValue(32777, values, cache), getValue(34877, values, cache)),\n  blendFunc: (gl, values, cache) => gl.blendFuncSeparate(getValue(32969, values, cache), getValue(32968, values, cache), getValue(32971, values, cache), getValue(32970, values, cache)),\n  polygonOffset: (gl, values, cache) => gl.polygonOffset(getValue(32824, values, cache), getValue(10752, values, cache)),\n  sampleCoverage: (gl, values, cache) => gl.sampleCoverage(getValue(32938, values, cache), getValue(32939, values, cache)),\n  stencilFuncFront: (gl, values, cache) => gl.stencilFuncSeparate(1028, getValue(2962, values, cache), getValue(2967, values, cache), getValue(2963, values, cache)),\n  stencilFuncBack: (gl, values, cache) => gl.stencilFuncSeparate(1029, getValue(34816, values, cache), getValue(36003, values, cache), getValue(36004, values, cache)),\n  stencilOpFront: (gl, values, cache) => gl.stencilOpSeparate(1028, getValue(2964, values, cache), getValue(2965, values, cache), getValue(2966, values, cache)),\n  stencilOpBack: (gl, values, cache) => gl.stencilOpSeparate(1029, getValue(34817, values, cache), getValue(34818, values, cache), getValue(34819, values, cache))\n};\n// Setter functions intercepted for cache updates\nexport const GL_HOOKED_SETTERS = {\n  // GENERIC SETTERS\n  enable: (update, capability) => update({\n    [capability]: true\n  }),\n  disable: (update, capability) => update({\n    [capability]: false\n  }),\n  pixelStorei: (update, pname, value) => update({\n    [pname]: value\n  }),\n  hint: (update, pname, value) => update({\n    [pname]: value\n  }),\n  // SPECIFIC SETTERS\n  useProgram: (update, value) => update({\n    [35725]: value\n  }),\n  bindRenderbuffer: (update, target, value) => update({\n    [36007]: value\n  }),\n  bindTransformFeedback: (update, target, value) => update({\n    [36389]: value\n  }),\n  bindVertexArray: (update, value) => update({\n    [34229]: value\n  }),\n  bindFramebuffer: (update, target, framebuffer) => {\n    switch (target) {\n      case 36160:\n        return update({\n          [36006]: framebuffer,\n          [36010]: framebuffer\n        });\n      case 36009:\n        return update({\n          [36006]: framebuffer\n        });\n      case 36008:\n        return update({\n          [36010]: framebuffer\n        });\n      default:\n        return null;\n    }\n  },\n  bindBuffer: (update, target, buffer) => {\n    const pname = {\n      [34962]: [34964],\n      [36662]: [36662],\n      [36663]: [36663],\n      [35051]: [35053],\n      [35052]: [35055]\n    }[target];\n    if (pname) {\n      return update({\n        [pname]: buffer\n      });\n    }\n    // targets that should not be cached\n    return {\n      valueChanged: true\n    };\n  },\n  blendColor: (update, r, g, b, a) => update({\n    [32773]: new Float32Array([r, g, b, a])\n  }),\n  blendEquation: (update, mode) => update({\n    [32777]: mode,\n    [34877]: mode\n  }),\n  blendEquationSeparate: (update, modeRGB, modeAlpha) => update({\n    [32777]: modeRGB,\n    [34877]: modeAlpha\n  }),\n  blendFunc: (update, src, dst) => update({\n    [32969]: src,\n    [32968]: dst,\n    [32971]: src,\n    [32970]: dst\n  }),\n  blendFuncSeparate: (update, srcRGB, dstRGB, srcAlpha, dstAlpha) => update({\n    [32969]: srcRGB,\n    [32968]: dstRGB,\n    [32971]: srcAlpha,\n    [32970]: dstAlpha\n  }),\n  clearColor: (update, r, g, b, a) => update({\n    [3106]: new Float32Array([r, g, b, a])\n  }),\n  clearDepth: (update, depth) => update({\n    [2931]: depth\n  }),\n  clearStencil: (update, s) => update({\n    [2961]: s\n  }),\n  colorMask: (update, r, g, b, a) => update({\n    [3107]: [r, g, b, a]\n  }),\n  cullFace: (update, mode) => update({\n    [2885]: mode\n  }),\n  depthFunc: (update, func) => update({\n    [2932]: func\n  }),\n  depthRange: (update, zNear, zFar) => update({\n    [2928]: new Float32Array([zNear, zFar])\n  }),\n  depthMask: (update, mask) => update({\n    [2930]: mask\n  }),\n  frontFace: (update, face) => update({\n    [2886]: face\n  }),\n  lineWidth: (update, width) => update({\n    [2849]: width\n  }),\n  polygonOffset: (update, factor, units) => update({\n    [32824]: factor,\n    [10752]: units\n  }),\n  sampleCoverage: (update, value, invert) => update({\n    [32938]: value,\n    [32939]: invert\n  }),\n  scissor: (update, x, y, width, height) => update({\n    [3088]: new Int32Array([x, y, width, height])\n  }),\n  stencilMask: (update, mask) => update({\n    [2968]: mask,\n    [36005]: mask\n  }),\n  stencilMaskSeparate: (update, face, mask) => update({\n    [face === 1028 ? 2968 : 36005]: mask\n  }),\n  stencilFunc: (update, func, ref, mask) => update({\n    [2962]: func,\n    [2967]: ref,\n    [2963]: mask,\n    [34816]: func,\n    [36003]: ref,\n    [36004]: mask\n  }),\n  stencilFuncSeparate: (update, face, func, ref, mask) => update({\n    [face === 1028 ? 2962 : 34816]: func,\n    [face === 1028 ? 2967 : 36003]: ref,\n    [face === 1028 ? 2963 : 36004]: mask\n  }),\n  stencilOp: (update, fail, zfail, zpass) => update({\n    [2964]: fail,\n    [2965]: zfail,\n    [2966]: zpass,\n    [34817]: fail,\n    [34818]: zfail,\n    [34819]: zpass\n  }),\n  stencilOpSeparate: (update, face, fail, zfail, zpass) => update({\n    [face === 1028 ? 2964 : 34817]: fail,\n    [face === 1028 ? 2965 : 34818]: zfail,\n    [face === 1028 ? 2966 : 34819]: zpass\n  }),\n  viewport: (update, x, y, width, height) => update({\n    [2978]: [x, y, width, height]\n  })\n};\n// GETTER TABLE - FOR READING OUT AN ENTIRE CONTEXT\nconst isEnabled = (gl, key) => gl.isEnabled(key);\n// Exceptions for any keys that cannot be queried by gl.getParameters\nexport const GL_PARAMETER_GETTERS = {\n  [3042]: isEnabled,\n  [2884]: isEnabled,\n  [2929]: isEnabled,\n  [3024]: isEnabled,\n  [32823]: isEnabled,\n  [32926]: isEnabled,\n  [32928]: isEnabled,\n  [3089]: isEnabled,\n  [2960]: isEnabled,\n  [35977]: isEnabled\n};\nexport const NON_CACHE_PARAMETERS = new Set([34016, 36388, 36387, 35983, 35368, 34965, 35739, 35738, 3074, 34853, 34854, 34855, 34856, 34857, 34858, 34859, 34860, 34861, 34862, 34863, 34864, 34865, 34866, 34867, 34868, 35097, 32873, 35869, 32874, 34068]);","map":{"version":3,"names":["GL","GL_PARAMETER_DEFAULTS","Float32Array","Int32Array","enable","gl","value","key","disable","hint","pixelStorei","bindFramebuffer","target","bindBuffer","bindingMap","glTarget","isArray","array","Array","ArrayBuffer","isView","DataView","GL_PARAMETER_SETTERS","blendColor","clearColor","colorMask","cullFace","clearDepth","depthFunc","depthRange","depthMask","useProgram","bindRenderbuffer","bindTransformFeedback","bindVertexArray","frontFace","lineWidth","scissor","clearStencil","stencilMaskSeparate","viewport","framebuffer","handle","blend","blendEquation","args","separateModes","blendEquationSeparate","blendFunc","separateFuncs","length","blendFuncSeparate","cull","depthTest","dither","derivativeHint","mipmapHint","polygonOffsetFill","polygonOffset","sampleCoverage","scissorTest","stencilTest","stencilMask","mask","backMask","stencilFunc","func","ref","backFunc","backRef","stencilFuncSeparate","stencilOp","sfail","dpfail","dppass","backSfail","backDpfail","backDppass","stencilOpSeparate","getValue","glEnum","values","cache","undefined","GL_COMPOSITE_PARAMETER_SETTERS","stencilFuncFront","stencilFuncBack","stencilOpFront","stencilOpBack","GL_HOOKED_SETTERS","update","capability","pname","buffer","valueChanged","r","g","b","a","mode","modeRGB","modeAlpha","src","dst","srcRGB","dstRGB","srcAlpha","dstAlpha","depth","s","zNear","zFar","face","width","factor","units","invert","x","y","height","fail","zfail","zpass","isEnabled","GL_PARAMETER_GETTERS","NON_CACHE_PARAMETERS","Set"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@luma.gl\\webgl\\src\\context\\parameters\\webgl-parameter-tables.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// Tables describing WebGL parameters\nimport {GL, GLParameters} from '@luma.gl/constants';\n\n// DEFAULT SETTINGS - FOR FAST CACHE INITIALIZATION AND CONTEXT RESETS\n\n/* eslint-disable no-shadow */\n\nexport const GL_PARAMETER_DEFAULTS: GLParameters = {\n  [GL.BLEND]: false,\n  [GL.BLEND_COLOR]: new Float32Array([0, 0, 0, 0]),\n  [GL.BLEND_EQUATION_RGB]: GL.FUNC_ADD,\n  [GL.BLEND_EQUATION_ALPHA]: GL.FUNC_ADD,\n  [GL.BLEND_SRC_RGB]: GL.ONE,\n  [GL.BLEND_DST_RGB]: GL.ZERO,\n  [GL.BLEND_SRC_ALPHA]: GL.ONE,\n  [GL.BLEND_DST_ALPHA]: GL.ZERO,\n  [GL.COLOR_CLEAR_VALUE]: new Float32Array([0, 0, 0, 0]), // TBD\n  [GL.COLOR_WRITEMASK]: [true, true, true, true],\n  [GL.CULL_FACE]: false,\n  [GL.CULL_FACE_MODE]: GL.BACK,\n  [GL.DEPTH_TEST]: false,\n  [GL.DEPTH_CLEAR_VALUE]: 1,\n  [GL.DEPTH_FUNC]: GL.LESS,\n  [GL.DEPTH_RANGE]: new Float32Array([0, 1]), // TBD\n  [GL.DEPTH_WRITEMASK]: true,\n  [GL.DITHER]: true,\n  [GL.CURRENT_PROGRAM]: null,\n  // FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: null,\n  [GL.RENDERBUFFER_BINDING]: null,\n  [GL.VERTEX_ARRAY_BINDING]: null,\n  [GL.ARRAY_BUFFER_BINDING]: null,\n  [GL.FRONT_FACE]: GL.CCW,\n  [GL.GENERATE_MIPMAP_HINT]: GL.DONT_CARE,\n  [GL.LINE_WIDTH]: 1,\n  [GL.POLYGON_OFFSET_FILL]: false,\n  [GL.POLYGON_OFFSET_FACTOR]: 0,\n  [GL.POLYGON_OFFSET_UNITS]: 0,\n  [GL.SAMPLE_ALPHA_TO_COVERAGE]: false,\n  [GL.SAMPLE_COVERAGE]: false,\n  [GL.SAMPLE_COVERAGE_VALUE]: 1.0,\n  [GL.SAMPLE_COVERAGE_INVERT]: false,\n  [GL.SCISSOR_TEST]: false,\n  // Note: Dynamic value. If scissor test enabled we expect users to set correct scissor box\n  [GL.SCISSOR_BOX]: new Int32Array([0, 0, 1024, 1024]),\n  [GL.STENCIL_TEST]: false,\n  [GL.STENCIL_CLEAR_VALUE]: 0,\n  [GL.STENCIL_WRITEMASK]: 0xffffffff,\n  [GL.STENCIL_BACK_WRITEMASK]: 0xffffffff,\n  [GL.STENCIL_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_REF]: 0,\n  [GL.STENCIL_VALUE_MASK]: 0xffffffff,\n  [GL.STENCIL_BACK_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_BACK_REF]: 0,\n  [GL.STENCIL_BACK_VALUE_MASK]: 0xffffffff,\n  [GL.STENCIL_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_PASS]: GL.KEEP,\n  [GL.STENCIL_BACK_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: GL.KEEP,\n  // Dynamic value: We use [0, 0, 1024, 1024] as default, but usually this is updated in each frame.\n  [GL.VIEWPORT]: [0, 0, 1024, 1024],\n\n  [GL.TRANSFORM_FEEDBACK_BINDING]: null,\n  [GL.COPY_READ_BUFFER_BINDING]: null,\n  [GL.COPY_WRITE_BUFFER_BINDING]: null,\n  [GL.PIXEL_PACK_BUFFER_BINDING]: null,\n  [GL.PIXEL_UNPACK_BUFFER_BINDING]: null,\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: GL.DONT_CARE,\n  [GL.READ_FRAMEBUFFER_BINDING]: null,\n  [GL.RASTERIZER_DISCARD]: false,\n\n  [GL.PACK_ALIGNMENT]: 4,\n  [GL.UNPACK_ALIGNMENT]: 4,\n  [GL.UNPACK_FLIP_Y_WEBGL]: false,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: false,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: GL.BROWSER_DEFAULT_WEBGL,\n  [GL.PACK_ROW_LENGTH]: 0,\n  [GL.PACK_SKIP_PIXELS]: 0,\n  [GL.PACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_ROW_LENGTH]: 0,\n  [GL.UNPACK_IMAGE_HEIGHT]: 0,\n  [GL.UNPACK_SKIP_PIXELS]: 0,\n  [GL.UNPACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_SKIP_IMAGES]: 0\n};\n\n// SETTER TABLES - ENABLES SETTING ANY PARAMETER WITH A COMMON API\n\nconst enable = (gl: WebGL2RenderingContext, value: unknown, key: GL) =>\n  value ? gl.enable(key) : gl.disable(key);\nconst hint = (gl: WebGL2RenderingContext, value: GL, key: GL) => gl.hint(key, value);\nconst pixelStorei = (gl: WebGL2RenderingContext, value: number | boolean, key: GL) =>\n  gl.pixelStorei(key, value);\n\nconst bindFramebuffer = (gl: WebGL2RenderingContext, value: unknown, key: GL) => {\n  const target = key === GL.FRAMEBUFFER_BINDING ? GL.DRAW_FRAMEBUFFER : GL.READ_FRAMEBUFFER;\n  return gl.bindFramebuffer(target, value as WebGLFramebuffer);\n};\n\nconst bindBuffer = (gl: WebGL2RenderingContext, value: unknown, key: GL) => {\n  const bindingMap: Partial<Record<GL, GL>> = {\n    [GL.ARRAY_BUFFER_BINDING]: GL.ARRAY_BUFFER,\n    [GL.COPY_READ_BUFFER_BINDING]: GL.COPY_READ_BUFFER,\n    [GL.COPY_WRITE_BUFFER_BINDING]: GL.COPY_WRITE_BUFFER,\n    [GL.PIXEL_PACK_BUFFER_BINDING]: GL.PIXEL_PACK_BUFFER,\n    [GL.PIXEL_UNPACK_BUFFER_BINDING]: GL.PIXEL_UNPACK_BUFFER\n  };\n  const glTarget = bindingMap[key];\n\n  gl.bindBuffer(glTarget as number, value as WebGLBuffer | null);\n};\n\n// Utility\nfunction isArray(array: unknown): boolean {\n  return Array.isArray(array) || (ArrayBuffer.isView(array) && !(array instanceof DataView));\n}\n\n// Map from WebGL parameter names to corresponding WebGL setter functions\n// WegGL constants are read by parameter names, but set by function names\n// NOTE: When value type is a string, it will be handled by 'GL_COMPOSITE_PARAMETER_SETTERS'\nexport const GL_PARAMETER_SETTERS = {\n  [GL.BLEND]: enable,\n  [GL.BLEND_COLOR]: (gl: WebGL2RenderingContext, value: [number, number, number, number]) =>\n    gl.blendColor(...value),\n  [GL.BLEND_EQUATION_RGB]: 'blendEquation',\n  [GL.BLEND_EQUATION_ALPHA]: 'blendEquation',\n  [GL.BLEND_SRC_RGB]: 'blendFunc',\n  [GL.BLEND_DST_RGB]: 'blendFunc',\n  [GL.BLEND_SRC_ALPHA]: 'blendFunc',\n  [GL.BLEND_DST_ALPHA]: 'blendFunc',\n  [GL.COLOR_CLEAR_VALUE]: (gl: WebGL2RenderingContext, value: [number, number, number, number]) =>\n    gl.clearColor(...value),\n  [GL.COLOR_WRITEMASK]: (gl: WebGL2RenderingContext, value: [boolean, boolean, boolean, boolean]) =>\n    gl.colorMask(...value),\n  [GL.CULL_FACE]: enable,\n  [GL.CULL_FACE_MODE]: (gl: WebGL2RenderingContext, value) => gl.cullFace(value),\n  [GL.DEPTH_TEST]: enable,\n  [GL.DEPTH_CLEAR_VALUE]: (gl: WebGL2RenderingContext, value) => gl.clearDepth(value),\n  [GL.DEPTH_FUNC]: (gl: WebGL2RenderingContext, value) => gl.depthFunc(value),\n  [GL.DEPTH_RANGE]: (gl: WebGL2RenderingContext, value: [number, number]) =>\n    gl.depthRange(...value),\n  [GL.DEPTH_WRITEMASK]: (gl: WebGL2RenderingContext, value) => gl.depthMask(value),\n  [GL.DITHER]: enable,\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: hint,\n\n  [GL.CURRENT_PROGRAM]: (gl: WebGL2RenderingContext, value) => gl.useProgram(value),\n  [GL.RENDERBUFFER_BINDING]: (gl: WebGL2RenderingContext, value) =>\n    gl.bindRenderbuffer(GL.RENDERBUFFER, value),\n  [GL.TRANSFORM_FEEDBACK_BINDING]: (gl: WebGL2RenderingContext, value) =>\n    gl.bindTransformFeedback?.(GL.TRANSFORM_FEEDBACK, value),\n  [GL.VERTEX_ARRAY_BINDING]: (gl: WebGL2RenderingContext, value) => gl.bindVertexArray(value),\n  // NOTE: FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: bindFramebuffer,\n  [GL.READ_FRAMEBUFFER_BINDING]: bindFramebuffer,\n\n  // Buffers\n  [GL.ARRAY_BUFFER_BINDING]: bindBuffer,\n  [GL.COPY_READ_BUFFER_BINDING]: bindBuffer,\n  [GL.COPY_WRITE_BUFFER_BINDING]: bindBuffer,\n  [GL.PIXEL_PACK_BUFFER_BINDING]: bindBuffer,\n  [GL.PIXEL_UNPACK_BUFFER_BINDING]: bindBuffer,\n\n  [GL.FRONT_FACE]: (gl: WebGL2RenderingContext, value) => gl.frontFace(value),\n  [GL.GENERATE_MIPMAP_HINT]: hint,\n  [GL.LINE_WIDTH]: (gl: WebGL2RenderingContext, value) => gl.lineWidth(value),\n  [GL.POLYGON_OFFSET_FILL]: enable,\n  [GL.POLYGON_OFFSET_FACTOR]: 'polygonOffset',\n  [GL.POLYGON_OFFSET_UNITS]: 'polygonOffset',\n  [GL.RASTERIZER_DISCARD]: enable,\n  [GL.SAMPLE_ALPHA_TO_COVERAGE]: enable,\n  [GL.SAMPLE_COVERAGE]: enable,\n  [GL.SAMPLE_COVERAGE_VALUE]: 'sampleCoverage',\n  [GL.SAMPLE_COVERAGE_INVERT]: 'sampleCoverage',\n  [GL.SCISSOR_TEST]: enable,\n  [GL.SCISSOR_BOX]: (gl: WebGL2RenderingContext, value: [number, number, number, number]) =>\n    gl.scissor(...value),\n  [GL.STENCIL_TEST]: enable,\n  [GL.STENCIL_CLEAR_VALUE]: (gl: WebGL2RenderingContext, value) => gl.clearStencil(value),\n  [GL.STENCIL_WRITEMASK]: (gl: WebGL2RenderingContext, value) =>\n    gl.stencilMaskSeparate(GL.FRONT, value),\n  [GL.STENCIL_BACK_WRITEMASK]: (gl: WebGL2RenderingContext, value) =>\n    gl.stencilMaskSeparate(GL.BACK, value),\n  [GL.STENCIL_FUNC]: 'stencilFuncFront',\n  [GL.STENCIL_REF]: 'stencilFuncFront',\n  [GL.STENCIL_VALUE_MASK]: 'stencilFuncFront',\n  [GL.STENCIL_BACK_FUNC]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_REF]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_VALUE_MASK]: 'stencilFuncBack',\n  [GL.STENCIL_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_PASS]: 'stencilOpFront',\n  [GL.STENCIL_BACK_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: 'stencilOpBack',\n  [GL.VIEWPORT]: (gl: WebGL2RenderingContext, value: [number, number, number, number]) =>\n    gl.viewport(...value),\n\n  // WEBGL2 EXTENSIONS\n\n  // EXT_depth_clamp https://registry.khronos.org/webgl/extensions/EXT_depth_clamp/\n\n  [GL.DEPTH_CLAMP_EXT]: enable,\n\n  // WEBGL_provoking_vertex https://registry.khronos.org/webgl/extensions/WEBGL_provoking_vertex/\n\n  // [GL.PROVOKING_VERTEX_WEBL]: TODO - extension function needed\n\n  // WEBGL_polygon_mode https://registry.khronos.org/webgl/extensions/WEBGL_polygon_mode/\n\n  // POLYGON_MODE_WEBGL  TODO - extension function needed\n  [GL.POLYGON_OFFSET_LINE_WEBGL]: enable,\n\n  // WEBGL_clip_cull_distance https://registry.khronos.org/webgl/extensions/WEBGL_clip_cull_distance/\n\n  [GL.CLIP_DISTANCE0_WEBGL]: enable,\n  [GL.CLIP_DISTANCE1_WEBGL]: enable,\n  [GL.CLIP_DISTANCE2_WEBGL]: enable,\n  [GL.CLIP_DISTANCE3_WEBGL]: enable,\n  [GL.CLIP_DISTANCE4_WEBGL]: enable,\n  [GL.CLIP_DISTANCE5_WEBGL]: enable,\n  [GL.CLIP_DISTANCE6_WEBGL]: enable,\n  [GL.CLIP_DISTANCE7_WEBGL]: enable,\n\n  // PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_FLIP_Y_WEBGL]: pixelStorei,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: pixelStorei,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: pixelStorei,\n  [GL.PACK_ROW_LENGTH]: pixelStorei,\n  [GL.PACK_SKIP_PIXELS]: pixelStorei,\n  [GL.PACK_SKIP_ROWS]: pixelStorei,\n  [GL.UNPACK_ROW_LENGTH]: pixelStorei,\n  [GL.UNPACK_IMAGE_HEIGHT]: pixelStorei,\n  [GL.UNPACK_SKIP_PIXELS]: pixelStorei,\n  [GL.UNPACK_SKIP_ROWS]: pixelStorei,\n  [GL.UNPACK_SKIP_IMAGES]: pixelStorei,\n\n  // Function-style setters\n  framebuffer: (gl: WebGL2RenderingContext, framebuffer) => {\n    // accepts 1) a WebGLFramebuffer 2) null (default framebuffer), or 3) luma.gl Framebuffer class\n    // framebuffer is null when restoring to default framebuffer, otherwise use the WebGL handle.\n    const handle = framebuffer && 'handle' in framebuffer ? framebuffer.handle : framebuffer;\n    return gl.bindFramebuffer(GL.FRAMEBUFFER, handle);\n  },\n  blend: (gl: WebGL2RenderingContext, value) =>\n    value ? gl.enable(GL.BLEND) : gl.disable(GL.BLEND),\n  blendColor: (gl: WebGL2RenderingContext, value: [number, number, number, number]) =>\n    gl.blendColor(...value),\n  blendEquation: (gl: WebGL2RenderingContext, args: number | [number, number]) => {\n    const separateModes = typeof args === 'number' ? ([args, args] as [number, number]) : args;\n    gl.blendEquationSeparate(...separateModes);\n  },\n  blendFunc: (\n    gl: WebGL2RenderingContext,\n    args: [number, number] | [number, number, number, number]\n  ) => {\n    const separateFuncs =\n      args?.length === 2 ? ([...args, ...args] as [number, number, number, number]) : args;\n    gl.blendFuncSeparate(...separateFuncs);\n  },\n\n  clearColor: (gl: WebGL2RenderingContext, value: [number, number, number, number]) =>\n    gl.clearColor(...value),\n  clearDepth: (gl: WebGL2RenderingContext, value) => gl.clearDepth(value),\n  clearStencil: (gl: WebGL2RenderingContext, value) => gl.clearStencil(value),\n\n  colorMask: (gl: WebGL2RenderingContext, value: [boolean, boolean, boolean, boolean]) =>\n    gl.colorMask(...value),\n\n  cull: (gl: WebGL2RenderingContext, value) =>\n    value ? gl.enable(GL.CULL_FACE) : gl.disable(GL.CULL_FACE),\n  cullFace: (gl: WebGL2RenderingContext, value) => gl.cullFace(value),\n\n  depthTest: (gl: WebGL2RenderingContext, value) =>\n    value ? gl.enable(GL.DEPTH_TEST) : gl.disable(GL.DEPTH_TEST),\n  depthFunc: (gl: WebGL2RenderingContext, value) => gl.depthFunc(value),\n  depthMask: (gl: WebGL2RenderingContext, value) => gl.depthMask(value),\n  depthRange: (gl: WebGL2RenderingContext, value: [number, number]) => gl.depthRange(...value),\n\n  dither: (gl: WebGL2RenderingContext, value) =>\n    value ? gl.enable(GL.DITHER) : gl.disable(GL.DITHER),\n\n  derivativeHint: (gl: WebGL2RenderingContext, value) => {\n    // gl1: 'OES_standard_derivatives'\n    gl.hint(GL.FRAGMENT_SHADER_DERIVATIVE_HINT, value);\n  },\n\n  frontFace: (gl: WebGL2RenderingContext, value) => gl.frontFace(value),\n\n  mipmapHint: (gl: WebGL2RenderingContext, value) => gl.hint(GL.GENERATE_MIPMAP_HINT, value),\n\n  lineWidth: (gl: WebGL2RenderingContext, value) => gl.lineWidth(value),\n\n  polygonOffsetFill: (gl: WebGL2RenderingContext, value) =>\n    value ? gl.enable(GL.POLYGON_OFFSET_FILL) : gl.disable(GL.POLYGON_OFFSET_FILL),\n  polygonOffset: (gl: WebGL2RenderingContext, value: [number, number]) =>\n    gl.polygonOffset(...value),\n\n  sampleCoverage: (gl: WebGL2RenderingContext, value: [number, boolean?]) =>\n    gl.sampleCoverage(value[0], value[1] || false),\n\n  scissorTest: (gl: WebGL2RenderingContext, value) =>\n    value ? gl.enable(GL.SCISSOR_TEST) : gl.disable(GL.SCISSOR_TEST),\n  scissor: (gl: WebGL2RenderingContext, value: [number, number, number, number]) =>\n    gl.scissor(...value),\n\n  stencilTest: (gl: WebGL2RenderingContext, value) =>\n    value ? gl.enable(GL.STENCIL_TEST) : gl.disable(GL.STENCIL_TEST),\n  stencilMask: (gl: WebGL2RenderingContext, value) => {\n    value = isArray(value) ? value : [value, value];\n    const [mask, backMask] = value;\n    gl.stencilMaskSeparate(GL.FRONT, mask);\n    gl.stencilMaskSeparate(GL.BACK, backMask);\n  },\n  stencilFunc: (gl: WebGL2RenderingContext, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [func, ref, mask, backFunc, backRef, backMask] = args;\n    gl.stencilFuncSeparate(GL.FRONT, func, ref, mask);\n    gl.stencilFuncSeparate(GL.BACK, backFunc, backRef, backMask);\n  },\n  stencilOp: (gl: WebGL2RenderingContext, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [sfail, dpfail, dppass, backSfail, backDpfail, backDppass] = args;\n    gl.stencilOpSeparate(GL.FRONT, sfail, dpfail, dppass);\n    gl.stencilOpSeparate(GL.BACK, backSfail, backDpfail, backDppass);\n  },\n\n  viewport: (gl: WebGL2RenderingContext, value: [number, number, number, number]) =>\n    gl.viewport(...value)\n};\n\nfunction getValue(glEnum, values, cache) {\n  return values[glEnum] !== undefined ? values[glEnum] : cache[glEnum];\n}\n\n// COMPOSITE_WEBGL_PARAMETER_\nexport const GL_COMPOSITE_PARAMETER_SETTERS = {\n  blendEquation: (gl: WebGL2RenderingContext, values, cache) =>\n    gl.blendEquationSeparate(\n      getValue(GL.BLEND_EQUATION_RGB, values, cache),\n      getValue(GL.BLEND_EQUATION_ALPHA, values, cache)\n    ),\n  blendFunc: (gl: WebGL2RenderingContext, values, cache) =>\n    gl.blendFuncSeparate(\n      getValue(GL.BLEND_SRC_RGB, values, cache),\n      getValue(GL.BLEND_DST_RGB, values, cache),\n      getValue(GL.BLEND_SRC_ALPHA, values, cache),\n      getValue(GL.BLEND_DST_ALPHA, values, cache)\n    ),\n  polygonOffset: (gl: WebGL2RenderingContext, values, cache) =>\n    gl.polygonOffset(\n      getValue(GL.POLYGON_OFFSET_FACTOR, values, cache),\n      getValue(GL.POLYGON_OFFSET_UNITS, values, cache)\n    ),\n  sampleCoverage: (gl: WebGL2RenderingContext, values, cache) =>\n    gl.sampleCoverage(\n      getValue(GL.SAMPLE_COVERAGE_VALUE, values, cache),\n      getValue(GL.SAMPLE_COVERAGE_INVERT, values, cache)\n    ),\n  stencilFuncFront: (gl: WebGL2RenderingContext, values, cache) =>\n    gl.stencilFuncSeparate(\n      GL.FRONT,\n      getValue(GL.STENCIL_FUNC, values, cache),\n      getValue(GL.STENCIL_REF, values, cache),\n      getValue(GL.STENCIL_VALUE_MASK, values, cache)\n    ),\n  stencilFuncBack: (gl: WebGL2RenderingContext, values, cache) =>\n    gl.stencilFuncSeparate(\n      GL.BACK,\n      getValue(GL.STENCIL_BACK_FUNC, values, cache),\n      getValue(GL.STENCIL_BACK_REF, values, cache),\n      getValue(GL.STENCIL_BACK_VALUE_MASK, values, cache)\n    ),\n  stencilOpFront: (gl: WebGL2RenderingContext, values, cache) =>\n    gl.stencilOpSeparate(\n      GL.FRONT,\n      getValue(GL.STENCIL_FAIL, values, cache),\n      getValue(GL.STENCIL_PASS_DEPTH_FAIL, values, cache),\n      getValue(GL.STENCIL_PASS_DEPTH_PASS, values, cache)\n    ),\n  stencilOpBack: (gl: WebGL2RenderingContext, values, cache) =>\n    gl.stencilOpSeparate(\n      GL.BACK,\n      getValue(GL.STENCIL_BACK_FAIL, values, cache),\n      getValue(GL.STENCIL_BACK_PASS_DEPTH_FAIL, values, cache),\n      getValue(GL.STENCIL_BACK_PASS_DEPTH_PASS, values, cache)\n    )\n};\n\ntype UpdateFunc = (params: Record<string, any>) => void;\n\n// Setter functions intercepted for cache updates\nexport const GL_HOOKED_SETTERS = {\n  // GENERIC SETTERS\n\n  enable: (update: UpdateFunc, capability: GL) =>\n    update({\n      [capability]: true\n    }),\n  disable: (update: UpdateFunc, capability: GL) =>\n    update({\n      [capability]: false\n    }),\n  pixelStorei: (update: UpdateFunc, pname: GL, value) =>\n    update({\n      [pname]: value\n    }),\n  hint: (update: UpdateFunc, pname: GL, value: GL) =>\n    update({\n      [pname]: value\n    }),\n\n  // SPECIFIC SETTERS\n  useProgram: (update: UpdateFunc, value) =>\n    update({\n      [GL.CURRENT_PROGRAM]: value\n    }),\n  bindRenderbuffer: (update: UpdateFunc, target, value) =>\n    update({\n      [GL.RENDERBUFFER_BINDING]: value\n    }),\n  bindTransformFeedback: (update: UpdateFunc, target, value) =>\n    update({\n      [GL.TRANSFORM_FEEDBACK_BINDING]: value\n    }),\n  bindVertexArray: (update: UpdateFunc, value) =>\n    update({\n      [GL.VERTEX_ARRAY_BINDING]: value\n    }),\n\n  bindFramebuffer: (update: UpdateFunc, target, framebuffer) => {\n    switch (target) {\n      case GL.FRAMEBUFFER:\n        return update({\n          [GL.DRAW_FRAMEBUFFER_BINDING]: framebuffer,\n          [GL.READ_FRAMEBUFFER_BINDING]: framebuffer\n        });\n      case GL.DRAW_FRAMEBUFFER:\n        return update({[GL.DRAW_FRAMEBUFFER_BINDING]: framebuffer});\n      case GL.READ_FRAMEBUFFER:\n        return update({[GL.READ_FRAMEBUFFER_BINDING]: framebuffer});\n      default:\n        return null;\n    }\n  },\n  bindBuffer: (update: UpdateFunc, target, buffer) => {\n    const pname = {\n      [GL.ARRAY_BUFFER]: [GL.ARRAY_BUFFER_BINDING],\n      [GL.COPY_READ_BUFFER]: [GL.COPY_READ_BUFFER_BINDING],\n      [GL.COPY_WRITE_BUFFER]: [GL.COPY_WRITE_BUFFER_BINDING],\n      [GL.PIXEL_PACK_BUFFER]: [GL.PIXEL_PACK_BUFFER_BINDING],\n      [GL.PIXEL_UNPACK_BUFFER]: [GL.PIXEL_UNPACK_BUFFER_BINDING]\n    }[target];\n\n    if (pname) {\n      return update({[pname]: buffer});\n    }\n    // targets that should not be cached\n    return {valueChanged: true};\n  },\n\n  blendColor: (update: UpdateFunc, r: number, g: number, b: number, a: number) =>\n    update({\n      [GL.BLEND_COLOR]: new Float32Array([r, g, b, a])\n    }),\n\n  blendEquation: (update: UpdateFunc, mode) =>\n    update({\n      [GL.BLEND_EQUATION_RGB]: mode,\n      [GL.BLEND_EQUATION_ALPHA]: mode\n    }),\n\n  blendEquationSeparate: (update: UpdateFunc, modeRGB, modeAlpha) =>\n    update({\n      [GL.BLEND_EQUATION_RGB]: modeRGB,\n      [GL.BLEND_EQUATION_ALPHA]: modeAlpha\n    }),\n\n  blendFunc: (update: UpdateFunc, src, dst) =>\n    update({\n      [GL.BLEND_SRC_RGB]: src,\n      [GL.BLEND_DST_RGB]: dst,\n      [GL.BLEND_SRC_ALPHA]: src,\n      [GL.BLEND_DST_ALPHA]: dst\n    }),\n\n  blendFuncSeparate: (update: UpdateFunc, srcRGB, dstRGB, srcAlpha, dstAlpha) =>\n    update({\n      [GL.BLEND_SRC_RGB]: srcRGB,\n      [GL.BLEND_DST_RGB]: dstRGB,\n      [GL.BLEND_SRC_ALPHA]: srcAlpha,\n      [GL.BLEND_DST_ALPHA]: dstAlpha\n    }),\n\n  clearColor: (update: UpdateFunc, r: number, g: number, b: number, a: number) =>\n    update({\n      [GL.COLOR_CLEAR_VALUE]: new Float32Array([r, g, b, a])\n    }),\n\n  clearDepth: (update: UpdateFunc, depth: number) =>\n    update({\n      [GL.DEPTH_CLEAR_VALUE]: depth\n    }),\n\n  clearStencil: (update: UpdateFunc, s: number) =>\n    update({\n      [GL.STENCIL_CLEAR_VALUE]: s\n    }),\n\n  colorMask: (update: UpdateFunc, r: number, g: number, b: number, a: number) =>\n    update({\n      [GL.COLOR_WRITEMASK]: [r, g, b, a]\n    }),\n\n  cullFace: (update: UpdateFunc, mode) =>\n    update({\n      [GL.CULL_FACE_MODE]: mode\n    }),\n\n  depthFunc: (update: UpdateFunc, func) =>\n    update({\n      [GL.DEPTH_FUNC]: func\n    }),\n\n  depthRange: (update: UpdateFunc, zNear: number, zFar: number) =>\n    update({\n      [GL.DEPTH_RANGE]: new Float32Array([zNear, zFar])\n    }),\n\n  depthMask: (update: UpdateFunc, mask: number) =>\n    update({\n      [GL.DEPTH_WRITEMASK]: mask\n    }),\n\n  frontFace: (update: UpdateFunc, face) =>\n    update({\n      [GL.FRONT_FACE]: face\n    }),\n\n  lineWidth: (update: UpdateFunc, width) =>\n    update({\n      [GL.LINE_WIDTH]: width\n    }),\n\n  polygonOffset: (update: UpdateFunc, factor, units) =>\n    update({\n      [GL.POLYGON_OFFSET_FACTOR]: factor,\n      [GL.POLYGON_OFFSET_UNITS]: units\n    }),\n\n  sampleCoverage: (update: UpdateFunc, value, invert) =>\n    update({\n      [GL.SAMPLE_COVERAGE_VALUE]: value,\n      [GL.SAMPLE_COVERAGE_INVERT]: invert\n    }),\n\n  scissor: (update: UpdateFunc, x, y, width, height) =>\n    update({\n      [GL.SCISSOR_BOX]: new Int32Array([x, y, width, height])\n    }),\n\n  stencilMask: (update: UpdateFunc, mask) =>\n    update({\n      [GL.STENCIL_WRITEMASK]: mask,\n      [GL.STENCIL_BACK_WRITEMASK]: mask\n    }),\n\n  stencilMaskSeparate: (update: UpdateFunc, face, mask) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_WRITEMASK : GL.STENCIL_BACK_WRITEMASK]: mask\n    }),\n\n  stencilFunc: (update: UpdateFunc, func, ref, mask) =>\n    update({\n      [GL.STENCIL_FUNC]: func,\n      [GL.STENCIL_REF]: ref,\n      [GL.STENCIL_VALUE_MASK]: mask,\n      [GL.STENCIL_BACK_FUNC]: func,\n      [GL.STENCIL_BACK_REF]: ref,\n      [GL.STENCIL_BACK_VALUE_MASK]: mask\n    }),\n\n  stencilFuncSeparate: (update: UpdateFunc, face, func, ref, mask) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_FUNC : GL.STENCIL_BACK_FUNC]: func,\n      [face === GL.FRONT ? GL.STENCIL_REF : GL.STENCIL_BACK_REF]: ref,\n      [face === GL.FRONT ? GL.STENCIL_VALUE_MASK : GL.STENCIL_BACK_VALUE_MASK]: mask\n    }),\n\n  stencilOp: (update: UpdateFunc, fail, zfail, zpass) =>\n    update({\n      [GL.STENCIL_FAIL]: fail,\n      [GL.STENCIL_PASS_DEPTH_FAIL]: zfail,\n      [GL.STENCIL_PASS_DEPTH_PASS]: zpass,\n      [GL.STENCIL_BACK_FAIL]: fail,\n      [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n      [GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n    }),\n\n  stencilOpSeparate: (update: UpdateFunc, face, fail, zfail, zpass) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_FAIL : GL.STENCIL_BACK_FAIL]: fail,\n      [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_FAIL : GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n      [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_PASS : GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n    }),\n\n  viewport: (update: UpdateFunc, x, y, width, height) =>\n    update({\n      [GL.VIEWPORT]: [x, y, width, height]\n    })\n};\n\n// GETTER TABLE - FOR READING OUT AN ENTIRE CONTEXT\n\nconst isEnabled = (gl: WebGL2RenderingContext, key) => gl.isEnabled(key);\n\n// Exceptions for any keys that cannot be queried by gl.getParameters\nexport const GL_PARAMETER_GETTERS = {\n  [GL.BLEND]: isEnabled,\n  [GL.CULL_FACE]: isEnabled,\n  [GL.DEPTH_TEST]: isEnabled,\n  [GL.DITHER]: isEnabled,\n  [GL.POLYGON_OFFSET_FILL]: isEnabled,\n  [GL.SAMPLE_ALPHA_TO_COVERAGE]: isEnabled,\n  [GL.SAMPLE_COVERAGE]: isEnabled,\n  [GL.SCISSOR_TEST]: isEnabled,\n  [GL.STENCIL_TEST]: isEnabled,\n  [GL.RASTERIZER_DISCARD]: isEnabled\n};\n\nexport const NON_CACHE_PARAMETERS = new Set([\n  // setter not intercepted\n  GL.ACTIVE_TEXTURE,\n  GL.TRANSFORM_FEEDBACK_ACTIVE,\n  GL.TRANSFORM_FEEDBACK_PAUSED,\n\n  // setters bindBufferRange/bindBufferBase cannot be pruned based on cache\n  GL.TRANSFORM_FEEDBACK_BUFFER_BINDING,\n  GL.UNIFORM_BUFFER_BINDING,\n\n  // states depending on VERTEX_ARRAY_BINDING\n  GL.ELEMENT_ARRAY_BUFFER_BINDING,\n  // states depending on READ_FRAMEBUFFER_BINDING\n  GL.IMPLEMENTATION_COLOR_READ_FORMAT,\n  GL.IMPLEMENTATION_COLOR_READ_TYPE,\n  // states depending on FRAMEBUFFER_BINDING\n  GL.READ_BUFFER,\n  GL.DRAW_BUFFER0,\n  GL.DRAW_BUFFER1,\n  GL.DRAW_BUFFER2,\n  GL.DRAW_BUFFER3,\n  GL.DRAW_BUFFER4,\n  GL.DRAW_BUFFER5,\n  GL.DRAW_BUFFER6,\n  GL.DRAW_BUFFER7,\n  GL.DRAW_BUFFER8,\n  GL.DRAW_BUFFER9,\n  GL.DRAW_BUFFER10,\n  GL.DRAW_BUFFER11,\n  GL.DRAW_BUFFER12,\n  GL.DRAW_BUFFER13,\n  GL.DRAW_BUFFER14,\n  GL.DRAW_BUFFER15,\n  // states depending on ACTIVE_TEXTURE\n  GL.SAMPLER_BINDING,\n  GL.TEXTURE_BINDING_2D,\n  GL.TEXTURE_BINDING_2D_ARRAY,\n  GL.TEXTURE_BINDING_3D,\n  GL.TEXTURE_BINDING_CUBE_MAP\n]);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}