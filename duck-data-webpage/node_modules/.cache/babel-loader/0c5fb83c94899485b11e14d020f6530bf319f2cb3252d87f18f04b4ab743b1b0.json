{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"preact/jsx-runtime\";\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* global document */\nimport { FlyToInterpolator, LinearInterpolator, _deepEqual as deepEqual, _applyStyles as applyStyles, _removeStyles as removeStyles } from '@deck.gl/core';\nimport { render } from 'preact';\nimport { ButtonGroup, GroupedIconButton } from \"./components.js\";\nexport class ZoomWidget {\n  constructor(props = {}) {\n    this.id = 'zoom';\n    this.placement = 'top-left';\n    this.viewId = null;\n    this.viewports = {};\n    this.id = props.id ?? this.id;\n    this.viewId = props.viewId ?? this.viewId;\n    this.placement = props.placement ?? this.placement;\n    this.props = {\n      ...ZoomWidget.defaultProps,\n      ...props\n    };\n  }\n  onAdd({\n    deck\n  }) {\n    const {\n      style,\n      className\n    } = this.props;\n    const element = document.createElement('div');\n    element.classList.add('deck-widget', 'deck-widget-zoom');\n    if (className) element.classList.add(className);\n    applyStyles(element, style);\n    this.deck = deck;\n    this.element = element;\n    this.update();\n    return element;\n  }\n  onRemove() {\n    this.deck = undefined;\n    this.element = undefined;\n  }\n  setProps(props) {\n    this.placement = props.placement ?? this.placement;\n    this.viewId = props.viewId ?? this.viewId;\n    const oldProps = this.props;\n    const el = this.element;\n    if (el) {\n      if (oldProps.className !== props.className) {\n        if (oldProps.className) el.classList.remove(oldProps.className);\n        if (props.className) el.classList.add(props.className);\n      }\n      if (!deepEqual(oldProps.style, props.style, 1)) {\n        removeStyles(el, oldProps.style);\n        applyStyles(el, props.style);\n      }\n    }\n    Object.assign(this.props, props);\n    this.update();\n  }\n  onViewportChange(viewport) {\n    this.viewports[viewport.id] = viewport;\n  }\n  handleZoom(viewport, nextZoom) {\n    const viewId = this.viewId || viewport?.id || 'default-view';\n    const nextViewState = {\n      ...viewport,\n      zoom: nextZoom\n    };\n    if (this.props.transitionDuration > 0) {\n      nextViewState.transitionDuration = this.props.transitionDuration;\n      nextViewState.transitionInterpolator = 'latitude' in nextViewState ? new FlyToInterpolator() : new LinearInterpolator();\n    }\n    this.setViewState(viewId, nextViewState);\n  }\n  handleZoomIn() {\n    for (const viewport of Object.values(this.viewports)) {\n      this.handleZoom(viewport, viewport.zoom + 1);\n    }\n  }\n  handleZoomOut() {\n    for (const viewport of Object.values(this.viewports)) {\n      this.handleZoom(viewport, viewport.zoom - 1);\n    }\n  }\n  /**\n   * @todo - move to deck or widget manager\n   */\n  setViewState(viewId, viewState) {\n    // @ts-ignore Using private method temporary until there's a public one\n    this.deck._onViewStateChange({\n      viewId,\n      viewState,\n      interactionState: {}\n    });\n  }\n  update() {\n    const element = this.element;\n    if (!element) {\n      return;\n    }\n    const ui = _jsxs(ButtonGroup, {\n      orientation: this.props.orientation,\n      children: [_jsx(GroupedIconButton, {\n        onClick: () => this.handleZoomIn(),\n        label: this.props.zoomInLabel,\n        className: \"deck-widget-zoom-in\"\n      }), _jsx(GroupedIconButton, {\n        onClick: () => this.handleZoomOut(),\n        label: this.props.zoomOutLabel,\n        className: \"deck-widget-zoom-out\"\n      })]\n    });\n    render(ui, element);\n  }\n}\nZoomWidget.defaultProps = {\n  id: 'zoom-widget',\n  style: {},\n  placement: 'top-left',\n  className: undefined,\n  orientation: 'vertical',\n  transitionDuration: 200,\n  zoomInLabel: 'Zoom In',\n  zoomOutLabel: 'Zoom Out',\n  viewId: undefined\n};","map":{"version":3,"names":["FlyToInterpolator","LinearInterpolator","_deepEqual","deepEqual","_applyStyles","applyStyles","_removeStyles","removeStyles","render","ButtonGroup","GroupedIconButton","ZoomWidget","constructor","props","id","placement","viewId","viewports","defaultProps","onAdd","deck","style","className","element","document","createElement","classList","add","update","onRemove","undefined","setProps","oldProps","el","remove","Object","assign","onViewportChange","viewport","handleZoom","nextZoom","nextViewState","zoom","transitionDuration","transitionInterpolator","setViewState","handleZoomIn","values","handleZoomOut","viewState","_onViewStateChange","interactionState","ui","_jsxs","orientation","children","_jsx","onClick","label","zoomInLabel","zoomOutLabel"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\widgets\\src\\zoom-widget.tsx"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* global document */\nimport {\n  FlyToInterpolator,\n  LinearInterpolator,\n  _deepEqual as deepEqual,\n  _applyStyles as applyStyles,\n  _removeStyles as removeStyles\n} from '@deck.gl/core';\nimport type {Deck, Viewport, Widget, WidgetPlacement} from '@deck.gl/core';\nimport {render} from 'preact';\nimport {ButtonGroup, GroupedIconButton} from './components';\n\nexport type ZoomWidgetProps = {\n  id?: string;\n  /**\n   * Widget positioning within the view. Default 'top-left'.\n   */\n  placement?: WidgetPlacement;\n  /**\n   * View to attach to and interact with. Required when using multiple views.\n   */\n  viewId?: string | null;\n  /**\n   * Button orientation.\n   */\n  orientation?: 'vertical' | 'horizontal';\n  /**\n   * Tooltip message on zoom in button.\n   */\n  zoomInLabel?: string;\n  /**\n   * Tooltip message on zoom out button.\n   */\n  zoomOutLabel?: string;\n  /**\n   * Zoom transition duration in ms. 0 disables the transition\n   */\n  transitionDuration?: number;\n  /**\n   * CSS inline style overrides.\n   */\n  style?: Partial<CSSStyleDeclaration>;\n  /**\n   * Additional CSS class.\n   */\n  className?: string;\n};\n\nexport class ZoomWidget implements Widget<ZoomWidgetProps> {\n  id = 'zoom';\n  props: Required<ZoomWidgetProps>;\n  placement: WidgetPlacement = 'top-left';\n  viewId?: string | null = null;\n  viewports: {[id: string]: Viewport} = {};\n  deck?: Deck<any>;\n  element?: HTMLDivElement;\n\n  static defaultProps: Required<ZoomWidgetProps> = {\n    id: 'zoom-widget',\n    style: {},\n    placement: 'top-left',\n    className: undefined!,\n    orientation: 'vertical',\n    transitionDuration: 200,\n    zoomInLabel: 'Zoom In',\n    zoomOutLabel: 'Zoom Out',\n    viewId: undefined!\n  };\n\n  constructor(props: ZoomWidgetProps = {}) {\n    this.id = props.id ?? this.id;\n    this.viewId = props.viewId ?? this.viewId;\n    this.placement = props.placement ?? this.placement;\n\n    this.props = {\n      ...ZoomWidget.defaultProps,\n      ...props\n    };\n  }\n\n  onAdd({deck}: {deck: Deck<any>}): HTMLDivElement {\n    const {style, className} = this.props;\n    const element = document.createElement('div');\n    element.classList.add('deck-widget', 'deck-widget-zoom');\n    if (className) element.classList.add(className);\n    applyStyles(element, style);\n    this.deck = deck;\n    this.element = element;\n    this.update();\n    return element;\n  }\n\n  onRemove() {\n    this.deck = undefined;\n    this.element = undefined;\n  }\n\n  setProps(props: Partial<ZoomWidgetProps>) {\n    this.placement = props.placement ?? this.placement;\n    this.viewId = props.viewId ?? this.viewId;\n    const oldProps = this.props;\n    const el = this.element;\n    if (el) {\n      if (oldProps.className !== props.className) {\n        if (oldProps.className) el.classList.remove(oldProps.className);\n        if (props.className) el.classList.add(props.className);\n      }\n\n      if (!deepEqual(oldProps.style, props.style, 1)) {\n        removeStyles(el, oldProps.style);\n        applyStyles(el, props.style);\n      }\n    }\n\n    Object.assign(this.props, props);\n    this.update();\n  }\n\n  onViewportChange(viewport: Viewport) {\n    this.viewports[viewport.id] = viewport;\n  }\n\n  handleZoom(viewport: Viewport, nextZoom: number) {\n    const viewId = this.viewId || viewport?.id || 'default-view';\n    const nextViewState: Record<string, unknown> = {\n      ...viewport,\n      zoom: nextZoom\n    };\n    if (this.props.transitionDuration > 0) {\n      nextViewState.transitionDuration = this.props.transitionDuration;\n      nextViewState.transitionInterpolator =\n        'latitude' in nextViewState ? new FlyToInterpolator() : new LinearInterpolator();\n    }\n    this.setViewState(viewId, nextViewState);\n  }\n\n  handleZoomIn() {\n    for (const viewport of Object.values(this.viewports)) {\n      this.handleZoom(viewport, viewport.zoom + 1);\n    }\n  }\n\n  handleZoomOut() {\n    for (const viewport of Object.values(this.viewports)) {\n      this.handleZoom(viewport, viewport.zoom - 1);\n    }\n  }\n\n  /**\n   * @todo - move to deck or widget manager\n   */\n  private setViewState(viewId: string, viewState: Record<string, unknown>): void {\n    // @ts-ignore Using private method temporary until there's a public one\n    this.deck._onViewStateChange({viewId, viewState, interactionState: {}});\n  }\n\n  private update() {\n    const element = this.element;\n    if (!element) {\n      return;\n    }\n    const ui = (\n      <ButtonGroup orientation={this.props.orientation}>\n        <GroupedIconButton\n          onClick={() => this.handleZoomIn()}\n          label={this.props.zoomInLabel}\n          className=\"deck-widget-zoom-in\"\n        />\n        <GroupedIconButton\n          onClick={() => this.handleZoomOut()}\n          label={this.props.zoomOutLabel}\n          className=\"deck-widget-zoom-out\"\n        />\n      </ButtonGroup>\n    );\n    render(ui, element);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}