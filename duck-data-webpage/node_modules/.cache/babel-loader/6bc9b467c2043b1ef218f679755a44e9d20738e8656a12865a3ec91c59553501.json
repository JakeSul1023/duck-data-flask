{"ast":null,"code":"/**\n * get the center of all the pointers\n */\nexport function getCenter(pointers) {\n  const pointersLength = pointers.length;\n  // no need to loop when only one touch\n  if (pointersLength === 1) {\n    return {\n      x: Math.round(pointers[0].clientX),\n      y: Math.round(pointers[0].clientY)\n    };\n  }\n  let x = 0;\n  let y = 0;\n  let i = 0;\n  while (i < pointersLength) {\n    x += pointers[i].clientX;\n    y += pointers[i].clientY;\n    i++;\n  }\n  return {\n    x: Math.round(x / pointersLength),\n    y: Math.round(y / pointersLength)\n  };\n}","map":{"version":3,"names":["getCenter","pointers","pointersLength","length","x","Math","round","clientX","y","clientY","i"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\mjolnir.js\\src\\hammerjs\\input\\get-center.ts"],"sourcesContent":["import type {Point, PointerEventLike} from './types';\n\n/**\n * get the center of all the pointers\n */\nexport function getCenter(pointers: PointerEventLike[]): Point {\n  const pointersLength = pointers.length;\n\n  // no need to loop when only one touch\n  if (pointersLength === 1) {\n    return {\n      x: Math.round(pointers[0].clientX),\n      y: Math.round(pointers[0].clientY)\n    };\n  }\n\n  let x = 0;\n  let y = 0;\n  let i = 0;\n  while (i < pointersLength) {\n    x += pointers[i].clientX;\n    y += pointers[i].clientY;\n    i++;\n  }\n\n  return {\n    x: Math.round(x / pointersLength),\n    y: Math.round(y / pointersLength)\n  };\n}\n"],"mappings":"AAEA;;;AAGA,OAAM,SAAUA,SAASA,CAACC,QAA4B;EACpD,MAAMC,cAAc,GAAGD,QAAQ,CAACE,MAAM;EAEtC;EACA,IAAID,cAAc,KAAK,CAAC,EAAE;IACxB,OAAO;MACLE,CAAC,EAAEC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC,CAAC,CAAC,CAACM,OAAO,CAAC;MAClCC,CAAC,EAAEH,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC,CAAC,CAAC,CAACQ,OAAO;KAClC;EACH;EAEA,IAAIL,CAAC,GAAG,CAAC;EACT,IAAII,CAAC,GAAG,CAAC;EACT,IAAIE,CAAC,GAAG,CAAC;EACT,OAAOA,CAAC,GAAGR,cAAc,EAAE;IACzBE,CAAC,IAAIH,QAAQ,CAACS,CAAC,CAAC,CAACH,OAAO;IACxBC,CAAC,IAAIP,QAAQ,CAACS,CAAC,CAAC,CAACD,OAAO;IACxBC,CAAC,EAAE;EACL;EAEA,OAAO;IACLN,CAAC,EAAEC,IAAI,CAACC,KAAK,CAACF,CAAC,GAAGF,cAAc,CAAC;IACjCM,CAAC,EAAEH,IAAI,CAACC,KAAK,CAACE,CAAC,GAAGN,cAAc;GACjC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}