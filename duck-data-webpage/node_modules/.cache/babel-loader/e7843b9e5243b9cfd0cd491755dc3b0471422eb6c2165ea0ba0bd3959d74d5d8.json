{"ast":null,"code":"// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { DeflateCompression } from \"./deflate-compression.js\";\n/**\n * GZIP compression / decompression\n */\nexport class GZipCompression extends DeflateCompression {\n  name = 'gzip';\n  extensions = ['gz', 'gzip'];\n  contentEncodings = ['gzip', 'x-gzip'];\n  isSupported = true;\n  constructor(options) {\n    super({\n      ...options,\n      deflate: {\n        ...options?.gzip,\n        gzip: true\n      }\n    });\n  }\n}","map":{"version":3,"names":["DeflateCompression","GZipCompression","name","extensions","contentEncodings","isSupported","constructor","options","deflate","gzip"],"sources":["C:/Users/jakes/Documents/GitHub/duck-data-flask/duck-data-webpage/node_modules/@loaders.gl/compression/dist/lib/gzip-compression.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { DeflateCompression } from \"./deflate-compression.js\";\n/**\n * GZIP compression / decompression\n */\nexport class GZipCompression extends DeflateCompression {\n    name = 'gzip';\n    extensions = ['gz', 'gzip'];\n    contentEncodings = ['gzip', 'x-gzip'];\n    isSupported = true;\n    constructor(options) {\n        super({ ...options, deflate: { ...options?.gzip, gzip: true } });\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,kBAAkB,QAAQ,0BAA0B;AAC7D;AACA;AACA;AACA,OAAO,MAAMC,eAAe,SAASD,kBAAkB,CAAC;EACpDE,IAAI,GAAG,MAAM;EACbC,UAAU,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC;EAC3BC,gBAAgB,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC;EACrCC,WAAW,GAAG,IAAI;EAClBC,WAAWA,CAACC,OAAO,EAAE;IACjB,KAAK,CAAC;MAAE,GAAGA,OAAO;MAAEC,OAAO,EAAE;QAAE,GAAGD,OAAO,EAAEE,IAAI;QAAEA,IAAI,EAAE;MAAK;IAAE,CAAC,CAAC;EACpE;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}