{"ast":null,"code":"// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst uniformBlock = /* glsl */`\\\nuniform aggregatorTransformUniforms {\n  ivec4 binIdRange;\n  bvec3 isCount;\n  bvec3 isMean;\n  float naN;\n} aggregatorTransform;\n`;\nexport const aggregatorTransformUniforms = {\n  name: 'aggregatorTransform',\n  vs: uniformBlock,\n  uniformTypes: {\n    binIdRange: 'vec4<i32>',\n    isCount: 'vec3<f32>',\n    isMean: 'vec3<f32>'\n  }\n};","map":{"version":3,"names":["uniformBlock","aggregatorTransformUniforms","name","vs","uniformTypes","binIdRange","isCount","isMean"],"sources":["C:\\Users\\jakes\\Documents\\GitHub\\duck-data-flask\\duck-data-webpage\\node_modules\\@deck.gl\\aggregation-layers\\src\\common\\aggregator\\gpu-aggregator\\aggregation-transform-uniforms.ts"],"sourcesContent":["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {NumberArray3, NumberArray4} from '@math.gl/core';\nimport {ShaderModule} from '@luma.gl/shadertools';\nimport {Texture} from '@luma.gl/core';\n\nconst uniformBlock = /* glsl */ `\\\nuniform aggregatorTransformUniforms {\n  ivec4 binIdRange;\n  bvec3 isCount;\n  bvec3 isMean;\n  float naN;\n} aggregatorTransform;\n`;\n\nexport type AggregatorTransformProps = {\n  binIdRange: NumberArray4;\n  isCount: NumberArray3;\n  isMean: NumberArray3;\n  bins: Texture;\n};\n\nexport const aggregatorTransformUniforms = {\n  name: 'aggregatorTransform',\n  vs: uniformBlock,\n  uniformTypes: {\n    binIdRange: 'vec4<i32>',\n    isCount: 'vec3<f32>',\n    isMean: 'vec3<f32>'\n  }\n} as const satisfies ShaderModule<AggregatorTransformProps>;\n"],"mappings":"AAAA;AACA;AACA;AAMA,MAAMA,YAAY,GAAG,UAAW;;;;;;;CAO/B;AASD,OAAO,MAAMC,2BAA2B,GAAG;EACzCC,IAAI,EAAE,qBAAqB;EAC3BC,EAAE,EAAEH,YAAY;EAChBI,YAAY,EAAE;IACZC,UAAU,EAAE,WAAW;IACvBC,OAAO,EAAE,WAAW;IACpBC,MAAM,EAAE;;CAE+C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}